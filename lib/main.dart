import 'dart:collection';
import 'dart:convert';
import 'dart:io' show Platform;
import 'package:connect/Activities/CustomerUserHome/HomePager/logics.dart';
import 'package:connect/Toast/AppToast.dart';
import 'package:connect/pip_test.dart';
import 'package:connect/pip_test_2.dart';
import 'package:connect/screens/loginScreen.dart';
import 'package:connect/services/restApi.dart';
import 'package:connect/utils/appConst.dart';
import 'package:connect/utils/featureSettings.dart';
import 'package:connect/utils/textConst.dart';
import 'package:connect/utils/textStyleConst.dart';
import 'package:connect/utils/themeManager.dart';
import 'package:firebase_crashlytics/firebase_crashlytics.dart';
import 'package:flutter/services.dart';
import 'package:flutter_svg/svg.dart';
import 'package:http/http.dart' as http;
import 'package:flutter/material.dart';
import 'package:firebase_storage/firebase_storage.dart' as firebase_storage;
import 'package:flutter/scheduler.dart';
import 'package:permission_handler/permission_handler.dart';
 import 'package:shared_preferences/shared_preferences.dart';
import 'package:connect/imageUtils.dart';
import 'package:connect/localization/language/language_bn.dart';
import 'package:connect/localization/language/language_en.dart';
import 'package:connect/roles_permissions/role_permision_manager.dart';
import 'package:connect/screens/google_map_screen.dart';
import 'package:connect/services/config.dart';
import 'package:connect/services/os_dependent_settings.dart';
 import 'package:image_picker/image_picker.dart';
import 'package:provider/provider.dart';
import 'package:share/share.dart';
 import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:firebase_messaging/firebase_messaging.dart';
import 'package:flutter/material.dart';
import 'package:flutter/material.dart';
import 'package:connect/pages/TestPeromationActivity.dart';
import 'package:connect/pages/app_map_view.dart';
import 'package:connect/pages/connected_device_page.dart';
import 'package:connect/pages/graph_widget.dart';
import 'package:connect/pages/home_page.dart';
import 'package:connect/pages/login_page.dart';
import 'package:connect/pages/pion.dart';
import 'package:connect/screens/home.dart';
import 'package:connect/services/Signal.dart';
import 'package:connect/services/auth.dart';
import 'package:connect/services/themeManager.dart';
import 'package:connect/streams/AuthControllerStream.dart';
import 'package:connect/streams/buttonStreams.dart';
import 'package:connect/widgets.dart';
import 'package:connect/widgets/cu.dart';
import 'package:connect/widgets/line_graph.dart';
import 'package:connect/widgets/sync_gra_n.dart';
import 'package:flutter_blue/flutter_blue.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
 import 'package:syncfusion_flutter_charts/charts.dart';

import 'Activities/CustomerUserHome/CustomerUsersHomePage.dart';
import 'Activities/CustomerUserHome/logics.dart';
import 'Activities/Login/loginActivity.dart';
import 'Activities/TestPerformActivity/ui_components.dart';
import 'Appabr/appbar_widget.dart';
import 'MapCluster/map_cluster.dart';
import 'gallaryView.dart';
import 'localization/language/languages.dart';
import 'localization/locale_constant.dart';
import 'localization/localizations_delegate.dart';
import 'models/CustomImageModel.dart';
import 'models/todo.dart';
import 'dart:async';
import 'dart:io';

import 'package:camera/camera.dart';
import 'package:flutter/material.dart';
import 'dart:async';
import 'dart:io';

import 'package:camera/camera.dart';
import 'package:flutter/material.dart';


bool testPlan = false;
void main() {


  WidgetsFlutterBinding.ensureInitialized();

  //-------------------set status bar color-------------

  SystemChrome.setSystemUIOverlayStyle(SystemUiOverlayStyle(
      statusBarColor: Colors.transparent,
    statusBarBrightness: Brightness.dark,
  ));
  // if (Platform.isAndroid) {
  //   // Android-specific code
  //   SystemChrome.setSystemUIOverlayStyle
  //     (
  //       SystemUiOverlayStyle(
  //           statusBarColor: Colors.black54,
  //           statusBarIconBrightness: Brightness.light)
  //   );
  // } else if (Platform.isIOS) {
  //   // iOS-specific code
  //   // SystemChrome.setSystemUIOverlayStyle
  //   //   (
  //   //     SystemUiOverlayStyle(
  //   //         statusBarColor: Colors.black,
  //   //         statusBarIconBrightness: Brightness.light)
  //   // );
  // }

  //------------------set portrait view for app---------
  SystemChrome.setPreferredOrientations(
      [DeviceOrientation.portraitUp, DeviceOrientation.portraitDown])
      .then((value) => runApp(true? App():MaterialApp(home: ProjectCreaterTest())));

// runApp(App());
//   runApp(MaterialApp(
//       home: MyAppGallary(),
//
//       ));


}

class ProjectCreaterTest extends StatefulWidget {

  @override
  _ProjectCreaterTestState createState() => _ProjectCreaterTestState();

}

class _ProjectCreaterTestState extends State<ProjectCreaterTest> {
  @override
  void initState() {
    super.initState();

    work();

  }
  work() async {
    WidgetsFlutterBinding.ensureInitialized();
    await Firebase.initializeApp();
    print("Projects with null address");
    FirebaseFirestore.instance.collection("customers").get().then((value) {
      for(int i = 0 ; i < value.docs.length ; i ++){
        Map<String, dynamic> data = value.docs[i].data() as Map<String, dynamic>;
        if(!data.containsKey("address")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"address":""});
        }
        if(!data.containsKey("email")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"email":""});
        }
        if(!data.containsKey("logo")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"logo":""});
        }
        if(!data.containsKey("parent")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"parent":""});
        }
        if(!data.containsKey("projectId")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"projectId":""});
        }
        if(!data.containsKey("telephone")) {
          print("NO address for "+value.docs[i].id);
          value.docs[i].reference.update({"telephone":""});
        }
        if(!data.containsKey("prjectName")) {
          print("NO prjectName for "+value.docs[i].id);
          value.docs[i].reference.update({"prjectName":""});
        }
        // if(!data.containsKey("email")) print("NO email for "+value.docs[i].id);
        // if(!data.containsKey("telephone")) print("NO telephone for "+value.docs[i].id);
        // if(!data.containsKey("prjectName")) print("NO prjectName for "+value.docs[i].id);
      }
    });
  }


  Future addfirestoreRules({ required String projectID}) async {
      var url = cloudRestApiBase+'addrules';
      final http.Response response = await http.post(Uri.parse(url),
        headers: <String, String>{'Content-Type': 'application/json; charset=UTF-8',},
        body: jsonEncode(<String, String> {   "project_id":projectID,}),);

  }
  Future addfirestore({ String? uid, String? projectID,required String region}) async {
    var body = jsonEncode(<String, String?>{ "project_id": projectID,"region":region});
      var url = cloudRestApiBase + 'addfirestore';
      final http.Response response = await http.post(Uri.parse(url),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8',
        },
        body: body,);



  }
  Future addfirebase({ String? projectID}) async {
    var body = jsonEncode(<String, String?>{ "project_id": projectID});
      var url = cloudRestApiBase + 'addfirebase';
      final http.Response response = await http.post(Uri.parse(url),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8',
        },
        body: body,);



  }
  Future<FirebaseFirestore> initCustomerFirebase({required String customerGCPprojectId}) async {
    String projectID = customerGCPprojectId;
    FirebaseApp app;

    try {
      app = await Firebase.initializeApp(
          name: projectID,
          options: FirebaseOptions(
            // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
            appId: Platform.isAndroid
                ?Config().defaultAppIdAndroid
                : Config().defaultAppIdIOS,
            apiKey: Config().apiKey,
            messagingSenderId: '',
            projectId: projectID,
            storageBucket:"gs://"+projectID+".appspot.com",
          ));
      FirebaseFirestore firestore =
      await FirebaseFirestore.instanceFor(app: app);
      print("got firestore");
      return firestore;
    } catch (e) {
      FirebaseFirestore firestore =
      await FirebaseFirestore.instanceFor(app: Firebase.app(projectID));
      // UserLoggedInStream.getInstance().dataReload(true);
      //FirebaseFirestore firestore = await FirebaseFirestore.instanceFor(app: app);
      print("got firestore in exception");
      return firestore;
    }
  }
  TextEditingController controller = TextEditingController();


  @override
  Widget build(BuildContext context) {

    return SafeArea(child: Scaffold(body: Column(children: [
      TextFormField(controller: controller,),
      Padding(
        padding: const EdgeInsets.all(8.0),
        child: RaisedButton(onPressed:() async {
          String id = controller.text;
          print(id);
          FirebaseFirestore customerFirestore = await initCustomerFirebase(customerGCPprojectId:id );


          
          try{
            print("write aatempt");
            await  customerFirestore.collection("projectDetails").add({"id":id});
          }catch(e){
            print("Failed to write data.Going to set");
            print(e);
            if(true){
              print("api hit starts");
              //await  addfirebase( projectID: id,);
              await Future.delayed(Duration(seconds: 1));
              await  addfirestore(region: "europe-west2", uid: "", projectID: id,);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);

              await  addfirestore(region: "europe-west2", uid: "", projectID: id,);

              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
              addfirestoreRules(projectID: (id).trim(),);
            }


          }





         



        },child: Container(width: double.infinity,child: Center(child: Text("Setup"))),),
      ),
    ],),));
  }
}


Container emptyContainer = Container(
  width: 0,
  height: 0,
);
//another version
Future<FirebaseApp> customInitialize() async {
  //return Firebase.initializeApp();
  //return Future.value();
  FirebaseApp app = await Firebase.initializeApp(
      name: "Default",

      options: FirebaseOptions(
        // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
        appId: Platform.isAndroid
            ?"1:331790502015:android:173fcf1209989ec674d74a"
            : Config().defaultAppIdIOS,
        apiKey: "AIzaSyA_pi4rviFHBicyUW-LDG2cRqU3sRPc0kc",
        messagingSenderId: '',
        projectId: "staht-6bd66",
      ));
  return app;
}

class TestPlan extends StatefulWidget {
  @override
  _TestPlanState createState() => _TestPlanState();
}

class _TestPlanState extends State<TestPlan> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Test"),
      ),
      body: StreamBuilder<BluetoothState>(
          stream: FlutterBlue.instance.state,
          initialData: BluetoothState.unknown,
          builder: (c, snapshot) {
            final state = snapshot.data;
            if (state == BluetoothState.on) {
              // return Text("Blutooth on");
              return StreamBuilder<List<BluetoothDevice>>(
                stream: Stream.periodic(Duration(seconds: 2))
                    .asyncMap((_) => FlutterBlue.instance.connectedDevices),
                initialData: [],
                builder: (c, snapshot) {
                  if (snapshot.hasData && snapshot.data!.length > 0) {
                    return Column(
                      children: snapshot.data!
                          .map((d) => ListTile(
                                onTap: () {},
                                title: Text(d.name),
                                subtitle: Text(d.id.toString()),
                                trailing: StreamBuilder<BluetoothDeviceState>(
                                  stream: d.state,
                                  initialData:
                                      BluetoothDeviceState.disconnected,
                                  builder: (c, snapshot) {
                                    if (snapshot.data ==
                                        BluetoothDeviceState.connected) {
                                      return InkWell(
                                        //CLick to Proceed
                                        child: Text("Open Settings"),
                                        // onTap: (){
                                        //   pageController.animateToPage(1,duration: Duration(milliseconds: 300),curve: Curves.easeIn);
                                        //  // pageController.animateToPage(1, Duration(milliseconds: 300),curve: Curves.easeIn);
                                        // },
                                        onTap: () async {
                                          //
                                          // FlutterBlue.instance
                                          //     .startScan(timeout: Duration(seconds: 4));
                                          // showDialog<void>(
                                          //     context: context,
                                          //     builder: (context) => SimpleDialog(
                                          //       children: [
                                          //         StreamBuilder<List<ScanResult>>(
                                          //           stream: FlutterBlue
                                          //               .instance.scanResults,
                                          //           initialData: [],
                                          //           builder: (c, snapshot) {
                                          //             //  updateData(snapshot.data);
                                          //             FirebaseFirestore firestore;
                                          //             //  Database(firestore: firestore).addData(snapshot.data);
                                          //
                                          //             return Column(
                                          //               children: snapshot.data
                                          //                   .map(
                                          //                     (r) => ScanResultTile(
                                          //                   result: r,
                                          //                   onTap: () {
                                          //                     r.device
                                          //                         .connect(
                                          //                         autoConnect:
                                          //                         false)
                                          //                         .then(
                                          //                             (value) {
                                          //                           setState(() {
                                          //                             widget.device =
                                          //                                 r.device;
                                          //                           });
                                          //                         });
                                          //                     //return Text("ok");
                                          //                     //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                          //                     return PerformTestPage(
                                          //                         device:
                                          //                         r.device,
                                          //                         project: widget
                                          //                             .projct);
                                          //
                                          //                   },
                                          //                 ),
                                          //
                                          //               )
                                          //                   .toList(),
                                          //             );
                                          //           },
                                          //         )
                                          //       ],
                                          //     ));
                                          try {
                                            await d.connect(autoConnect: false);
                                            Navigator.of(context).push(
                                                MaterialPageRoute(
                                                    builder: (context) {
                                                      return Scaffold(body: Center(child: Text("Disabled"),),);
                                              // return ConnectedDevicePage(calibratorID: "",
                                              //     firestore: FirebaseFirestore
                                              //         .instance,
                                              //     userBody: null,
                                              //     device: d, auth: FirebaseAuth.instance,);
                                              //return DeviceScreenLessDetails(r.device);
                                            }));
                                          } catch (e) {
                                            Navigator.of(context).push(
                                                MaterialPageRoute(
                                                    builder: (context) {
                                                 return Scaffold(body: Center(child: Text("Disabled"),),);

                                              //return DeviceScreenLessDetails(r.device);
                                            }));
                                          }
                                        },
                                      );
                                    }
                                    return Text(snapshot.data.toString());
                                  },
                                ),
                              ))
                          .toList(),
                    );
                  } else {
                    return ListTile(
                      onTap: () {
                        FlutterBlue.instance
                            .startScan(timeout: Duration(seconds: 4));
                        showDialog<void>(
                            context: context,
                            builder: (context) => SimpleDialog(
                                  children: [
                                    StreamBuilder<List<ScanResult>>(
                                      stream: FlutterBlue.instance.scanResults,
                                      initialData: [],
                                      builder: (c, snapshot) {
                                        //  updateData(snapshot.data);
                                        FirebaseFirestore firestore;
                                        //  Database(firestore: firestore).addData(snapshot.data);

                                        return Column(
                                          children: snapshot.data!
                                              .map(
                                                (r) => ScanResultTile(
                                                  result: r,
                                                  onTap: () {
                                                    r.device
                                                        .connect(
                                                            autoConnect: false)
                                                        .then((value) {
                                                      Navigator.pop(context);
                                                    });
                                                    //return Text("ok");
                                                    //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                   // return Text("ok");
                                                    Navigator.pop(context);
                                                    //return ConnectedDevicePage(device: r.device);
                                                    //return DeviceScreenLessDetails(r.device);
                                                  },
                                                ),
                                                //     (r) => ScanResultTile(
                                                //   result: r,
                                                //   onTap: () => Navigator.of(context)
                                                //       .push(MaterialPageRoute(builder: (context) {
                                                //     r.device.connect(autoConnect: false);
                                                //     //return Text("ok");
                                                //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                //     return   PerformTestPage(device: r.device,project:"o",);
                                                //     Navigator.pop(context);
                                                //     //return ConnectedDevicePage(device: r.device);
                                                //     //return DeviceScreenLessDetails(r.device);
                                                //   })),
                                                // ),
                                              )
                                              .toList(),
                                        );
                                      },
                                    )
                                  ],
                                ));
                      },
                      title: Text("No Device is Connected"),
                      trailing: Text(
                        "Scan",
                        style: TextStyle(color: Colors.blue),
                      ),
                    );
                  }
                },
              );
            }
            return ListTile(
              title: Text("Turn on Bluetooth"),
              trailing: Icon(
                Icons.bluetooth,
                color: Colors.grey,
              ),
            );
            //return BluetoothOffScreen(state: state);
          }),
    );
  }
}

class App extends StatefulWidget {
  static void setLocale(BuildContext context, Locale newLocale) {
    var state = context.findAncestorStateOfType<_AppState>();
    state!.setLocale(newLocale);
  }

  @override
  _AppState createState() => _AppState();
}

class _AppState extends State<App> {
  demoCalib() async {
    var b = jsonEncode(<String, dynamic> {   "x":[1,1,1],"y":[1,1,1]});

    final http.Response response = await http.post(
        Uri.parse("https://staht-connect-322113.uc.r.appspot.com/calibration"),
        headers: <String, String>{
          'Content-Type': 'application/json; charset=UTF-8',
        },
        body:b


    );
    print("demo calib response");
    print(response.body);
  }
  late Locale _locale;


  void setLocale(Locale locale) {
    setState(() {
      _locale = locale;
    });
  }

  @override
  void didChangeDependencies() async {
   // demoCalib();
    getLocale().then((locale) {
      setState(() {
        _locale = locale;
      });
    });
    super.didChangeDependencies();
  }

  @override
  Widget build(BuildContext context) {

    bool showThemeOptions = false;
    //return   MaterialApp(home:TestMapScreen() ,);
    //TestMapScreen
    //theme.setLightMode(),

   // Elsewhere in your code

      getHomeApp(Locale locale){
      return FutureBuilder<FirebaseApp>(
        // Initialize FlutterFire:

        future: Firebase.initializeApp(),
        //future: customInitialize(),
        builder: (context, snapshot) {
          // Check for errors
          if (snapshot.hasError) {
            return const Scaffold(
              body: Center(
                child: Text("Error"),
              ),
            );
          }

          if (snapshot.hasData) {
            return testPlan
                ? TestPlan()
              : SafeArea(child: Scaffold(body: StreamBuilder(
                stream: UserLoggedInStream.getInstance().outData,
                builder: (BuildContext context, AsyncSnapshot<bool> snapshot) {
                  print("auth changed");
                  return StreamBuilder(
                      stream: FirebaseAuth.instance.authStateChanges(),
                      builder: (BuildContext context, AsyncSnapshot<User?> snapshot) {
                        if (snapshot.data?.uid == null) {
                          //  return SplineArea();
                          //  LoginScreen();
                          // return LoginScreen(locale: widget.locale,
                          //   auth: _auth,
                          //   firestore: _firestore,
                          // );
                          return Login(locale: locale,
                            auth: FirebaseAuth.instance,
                            firestore: FirebaseFirestore.instance,
                          );
                        } else {
                          // return YouAreGenuser(
                          //   auth: _auth,
                          //   firestore: _firestore,
                          // );

                          return LoggedInUserWidget(locale: locale,);
//                           return FutureBuilder(
//                             // Initialize FlutterFire:
//                             //  future: Firebase.initializeApp(),
//                               future: FirebaseFirestore.instance
//                                   .collection("users")
//                                   .where("uid", isEqualTo: _auth.currentUser!.uid)
//                                   .get(),
//                               builder: (BuildContext context,
//                                   AsyncSnapshot<QuerySnapshot> snapshotprofile) {
//
//                                 if (true) {
//                                   if (snapshotprofile.hasData &&
//                                       snapshotprofile.data != null) {
//                                     if (snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').CUSTOMER_USER_ROLE_ID   ) {
//
//                                       return FutureBuilder(
//                                         // Initialize FlutterFire:
//                                         //  future: Firebase.initializeApp(),
//                                           future: FirebaseFirestore.instance
//                                               .collection("customers")
//                                               .doc(snapshotprofile.data!.docs.first
//                                               .get("parentId"))
//                                               .get(),
//                                           builder: (BuildContext context,
//                                               AsyncSnapshot<DocumentSnapshot> snapshot) {
//                                             if (true) {
//                                               if (snapshot.hasData && snapshot.data != null) {
//                                                 return WidgetWithCustomerFirebase(profile: snapshotprofile.data!.docs.first,customerInfo: snapshot.data!, auth: _auth, locale: widget.locale,);
//                                               } else {
//                                                 return Scaffold(
//                                                   body: Container(
//                                                       child: Center(
//                                                           child:
//                                                           CircularProgressIndicator())),
//                                                 );
//                                               }
//                                             } else {
//                                               return Scaffold(
//                                                 body: Container(
//                                                     child:
//                                                     Center(child: Text("PLease wait"))),
//                                               );
//                                             }
//                                           });
//                                     } else if (snapshotprofile.data!.docs.first
//                                         .get("roleId") ==  RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  || snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').CALIBRATOR_ROLE_ID) {
//                                       final GlobalKey<ScaffoldState> scaffoldKey =
//                                       GlobalKey<ScaffoldState>();
//                                       return Scaffold(
//                                           key: scaffoldKey,
//                                           appBar: AppBar(actions: [
//                                             InkWell(onTap: (){
//                                               _auth.signOut();
//                                             },child: Padding(
//                                               padding: const EdgeInsets.all(15.0),
//                                               child: Icon(Icons.logout),
//                                             ),)
//                                           ],
//                                             leading: Padding(
//                                               padding: const EdgeInsets.all(8.0),
//                                               child: Icon(
//                                                 Icons.account_box_outlined,
//                                                 color: Colors.white,
//                                               ),
//                                             ),
//                                             title: Text(snapshotprofile.data!.docs.first
//                                                 .get("displayName")),
//                                           ),
//                                           body: Stack(
//                                             children: [
//                                               Padding(
//                                                 padding: EdgeInsets.all(8.0),
//                                                 child: Container(
//                                                   width: MediaQuery.of(context).size.width,
//                                                   height:
//                                                   (MediaQuery.of(context).size.height -
//                                                       160) ,
//                                                   decoration: BoxDecoration(
//                                                       borderRadius:
//                                                       BorderRadius.circular(5),
//                                                       border: Border.all(
//                                                           width: 2,
//                                                           color: Theme.of(context)
//                                                               .primaryColor)),
//                                                   child: Column(
//                                                     mainAxisAlignment:
//                                                     MainAxisAlignment.start,
//                                                     children: [
//                                                       ListTile(
//                                                         title: Text(
//                                                           "Connected Devices",
//                                                           style: TextStyle(
//                                                             color: Colors.blue,
//                                                           ),
//                                                         ),
//                                                         leading: Icon(
//                                                           Icons.add,
//                                                           color: Colors.blue,
//                                                         ),
//                                                       ),
//                                                       StreamBuilder<BluetoothState>(
//                                                           stream:
//                                                           FlutterBlue.instance.state,
//                                                           initialData:
//                                                           BluetoothState.unknown,
//                                                           builder: (c, snapshot) {
//                                                             final state = snapshot.data;
//                                                             if (state ==
//                                                                 BluetoothState.on) {
//                                                               // return Text("Blutooth on");
//                                                               return StreamBuilder<
//                                                                   List<BluetoothDevice>>(
//                                                                 stream: Stream.periodic(
//                                                                     Duration(
//                                                                         seconds: 0))
//                                                                     .asyncMap((_) =>
//                                                                 FlutterBlue.instance
//                                                                     .connectedDevices),
//                                                                 initialData: [],
//                                                                 builder: (c, snapshot) {
//                                                                   if (snapshot.hasData &&
//                                                                       snapshot.data!.length >
//                                                                           0) {
//                                                                     return Column(
//                                                                       children:
//                                                                       snapshot.data!
//                                                                           .map((d) =>
//                                                                           ListTile(
//                                                                             onTap:
//                                                                                 () {},
//                                                                             title: Text(
//                                                                                 d.name),
//                                                                             subtitle: Text(d
//                                                                                 .id
//                                                                                 .toString()),
//                                                                             trailing:
//                                                                             StreamBuilder<BluetoothDeviceState>(
//                                                                               stream:
//                                                                               d.state,
//                                                                               initialData:
//                                                                               BluetoothDeviceState.disconnected,
//                                                                               builder:
//                                                                                   (c, snapshot) {
//                                                                                 if (snapshot.data ==
//                                                                                     BluetoothDeviceState.connected) {
//                                                                                   return InkWell(
//                                                                                     onTap: () {
//                                                                                       Navigator.of(context).push(MaterialPageRoute(builder: (context) {
//                                                                                         d.connect(autoConnect: true);
//                                                                                         return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: d, auth: _auth,);
//                                                                                         //return DeviceScreenLessDetails(r.device);
//                                                                                       }));
//                                                                                     },
//                                                                                     child: Text(
//                                                                                       "Open Settings",
//                                                                                       style: TextStyle(color: Theme.of(context).primaryColor),
//                                                                                     ),
//                                                                                   );
//                                                                                 }
//                                                                                 return Text(snapshot.data.toString());
//                                                                               },
//                                                                             ),
//                                                                           ))
//                                                                           .toList(),
//                                                                     );
//                                                                   } else {
//                                                                     return ListTile(
//                                                                       onTap: () {
//
//                                                                       },
//                                                                       title: Text(
//                                                                           "No Device is Connected"),
//
//                                                                     );
//                                                                   }
//                                                                 },
//                                                               );
//                                                             }
//                                                             return ListTile(
//                                                               title:
//                                                               Text("Turn on Blutooth"),
//                                                               trailing: Icon(
//                                                                 Icons.bluetooth_disabled,
//                                                                 color: Theme.of(context)
//                                                                     .primaryColor,
//                                                               ),
//                                                             );
//                                                             //return BluetoothOffScreen(state: state);
//                                                           }),
//                                                     ],
//                                                   ),
//                                                 ),
//                                               ),
//                                               Align(
//                                                 alignment: Alignment.bottomCenter,
//                                                 child: InkWell(onTap: (){
//                                                   FlutterBlue.instance
//                                                       .startScan(
//                                                       timeout: Duration(
//                                                           seconds:
//                                                           4));
//                                                   showDialog<void>(
//                                                       context:
//                                                       context,
//                                                       builder:
//                                                           (contextD) =>
//                                                           SimpleDialog(
//                                                             children: [
//                                                               StreamBuilder<List<ScanResult>>(
//                                                                 stream: FlutterBlue.instance.scanResults,
//                                                                 initialData: [],
//                                                                 builder: (c, snapshot) {
//                                                                   //  updateData(snapshot.data);
//                                                                   FirebaseFirestore firestore;
//                                                                   //  Database(firestore: firestore).addData(snapshot.data);
//
//                                                                   return Column(
//                                                                     children: snapshot.data!
//                                                                         .map(
//                                                                           (r) => ScanResultTile(
//                                                                         result: r,
//                                                                         onTap: () {
//                                                                           r.device.connect(autoConnect: false).then((value) async {
//                                                                             //Navigator.pop(context);
//                                                                             print("just connected and started discovering services");
//                                                                             await r.device.discoverServices();
//
//                                                                             List<BluetoothService> allservice = await r.device.discoverServices();
//                                                                             print("a X" + allservice.length.toString());
//                                                                             if (allservice.length > 0) {
//                                                                               print("b X" + allservice.length.toString());
//                                                                               //find services
//                                                                               dynamic bleCharacteristics = await OsDependentSettings().getReadWriteCharacters(device: r.device);
//
//                                                                               BluetoothCharacteristic characteristicWritePurpose = bleCharacteristics["write"];
//                                                                               BluetoothCharacteristic characteristicReadPurpose = bleCharacteristics["read"];
//                                                                               String iceSerial = "";
//                                                                               String Serial = "";
//                                                                               getSerial2() async {
//                                                                                 print("c X");
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                                 List<int> responseAray2 = await characteristicReadPurpose.read();
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                                 responseAray2 = await characteristicReadPurpose.read();
//                                                                                 String responseInString = utf8.decode(responseAray2);
//                                                                                 Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                                 if (Serial.length == 0) {
//                                                                                   getSerial2();
//                                                                                 } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
//                                                                                   print("g X");
//                                                                                   //  lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device,);
//                                                                                 } else {
//                                                                                   print("h X");
//
//                                                                                   // set up the button
//                                                                                   Widget okButton = FlatButton(
//                                                                                     child: Text("OK"),
//                                                                                     onPressed: () {},
//                                                                                   );
//
//                                                                                   // set up the AlertDialog
//                                                                                   AlertDialog alert = AlertDialog(
//                                                                                     title: Text("SN and/or ICE SN is Default"),
//                                                                                     content: Column(
//                                                                                       children: [
//                                                                                         InkWell(
//                                                                                           onTap: () {
//                                                                                             TextEditingController controllerIce = new TextEditingController();
//
//                                                                                             Navigator.push(
//                                                                                               context,
//                                                                                               MaterialPageRoute(
//                                                                                                   builder: (context) => Scaffold(
//                                                                                                     appBar: AppBar(
//                                                                                                       title: Text("Update ICE SN"),
//                                                                                                     ),
//                                                                                                     body: Wrap(
//                                                                                                       children: [
//                                                                                                         Padding(
//                                                                                                           padding: const EdgeInsets.all(8.0),
//                                                                                                           child: TextField(
//                                                                                                             controller: controllerIce,
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                         InkWell(
//                                                                                                           onTap: () async {
//                                                                                                             String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
//                                                                                                             print("command " + commandToWrite);
//
//                                                                                                             try {
//                                                                                                               await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                               Navigator.pop(context);
//                                                                                                               Navigator.pop(context);
//                                                                                                               iceSerial = controllerIce.text;
//
//                                                                                                               //return true;
//                                                                                                             } catch (e) {
//                                                                                                               // return false;
//                                                                                                             }
//                                                                                                           },
//                                                                                                           child: Padding(
//                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                             child: Card(
//                                                                                                               color: Theme.of(context).primaryColor,
//                                                                                                               child: Center(
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Text(
//                                                                                                                     "Save",
//                                                                                                                     style: TextStyle(color: Colors.white),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ),
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                       ],
//                                                                                                     ),
//                                                                                                   )),
//                                                                                             );
//                                                                                             /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                           },
//                                                                                           child: Padding(
//                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                             child: ListTile(
//                                                                                               title: Text(iceSerial),
//                                                                                               subtitle: Text("Change  ICE SN"),
//                                                                                             ),
//                                                                                           ),
//                                                                                         ),
//                                                                                         InkWell(
//                                                                                           onTap: () {
//                                                                                             TextEditingController controller = new TextEditingController();
//
//                                                                                             Navigator.push(
//                                                                                               context,
//                                                                                               MaterialPageRoute(
//                                                                                                   builder: (context) => Scaffold(
//                                                                                                     appBar: AppBar(
//                                                                                                       title: Text("Update  SN"),
//                                                                                                     ),
//                                                                                                     body: Wrap(
//                                                                                                       children: [
//                                                                                                         Padding(
//                                                                                                           padding: const EdgeInsets.all(8.0),
//                                                                                                           child: TextField(
//                                                                                                             controller: controller,
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                         InkWell(
//                                                                                                           onTap: () async {
//                                                                                                             String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                             print("command " + commandToWrite);
//
//                                                                                                             try {
//                                                                                                               await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                               Navigator.pop(context);
//                                                                                                               Navigator.pop(context);
//
//                                                                                                               Serial = controller.text;
//
//                                                                                                               // return true;
//                                                                                                             } catch (e) {
//                                                                                                               // return false;
//                                                                                                             }
//                                                                                                           },
//                                                                                                           child: Padding(
//                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                             child: Card(
//                                                                                                               color: Theme.of(context).primaryColor,
//                                                                                                               child: Center(
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Text(
//                                                                                                                     "Save",
//                                                                                                                     style: TextStyle(color: Colors.white),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ),
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                       ],
//                                                                                                     ),
//                                                                                                   )),
//                                                                                             );
//                                                                                             /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                           },
//                                                                                           child: Padding(
//                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                             child: ListTile(
//                                                                                               title: Text(Serial),
//                                                                                               subtitle: Text("Change  SN"),
//                                                                                             ),
//                                                                                           ),
//                                                                                         ),
//                                                                                       ],
//                                                                                     ),
//                                                                                     actions: [
//                                                                                       okButton,
//                                                                                     ],
//                                                                                   );
//
//                                                                                   // show the dialog
//                                                                                   // showDialog(
//                                                                                   //   context: context,
//                                                                                   //   builder: (BuildContext context) {
//                                                                                   //     return alert;
//                                                                                   //   },
//                                                                                   // );
//
//                                                                                   /*
//
//
//                                                                                      scaffoldKey.currentState.showBottomSheet((context) => Column(
//                                                                                        children: [
//                                                                                          ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),
//
//                                                                                          InkWell(onTap: (){
//                                                                                            TextEditingController controller = new TextEditingController();
//
//                                                                                            Navigator.push(
//                                                                                              context,
//                                                                                              MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
//                                                                                                children: [
//                                                                                                  Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: TextField(
//                                                                                                      controller: controller,
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                  InkWell(onTap: () async {
//                                                                                                    String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                    print("command " + commandToWrite);
//
//                                                                                                    try {
//                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                      Navigator.pop(context);
//
//                                                                                                      return true;
//                                                                                                    } catch (e) {
//                                                                                                      return false;
//                                                                                                    }
//
//                                                                                                  },
//                                                                                                    child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                      ),),),
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                ],
//                                                                                              ),)),
//                                                                                            );
//                                                                                            /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                          },child: Padding(
//                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                            child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
//                                                                                          ),),
//                                                                                          InkWell(onTap: (){
//                                                                                            TextEditingController controller = new TextEditingController();
//
//                                                                                            Navigator.push(
//                                                                                              context,
//                                                                                              MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
//                                                                                                children: [
//                                                                                                  Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: TextField(
//                                                                                                      controller: controller,
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                  InkWell(onTap: () async {
//                                                                                                    String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                    print("command " + commandToWrite);
//
//                                                                                                    try {
//                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                      Navigator.pop(context);
//
//                                                                                                      return true;
//                                                                                                    } catch (e) {
//                                                                                                      return false;
//                                                                                                    }
//
//                                                                                                  },
//                                                                                                    child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                      ),),),
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                ],
//                                                                                              ),)),
//                                                                                            );
//                                                                                            /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                          },child: Padding(
//                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                            child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
//                                                                                          ),),
//
//
//                                                                                        ],
//                                                                                      ));
//
//                                                                                       */
//
//                                                                                   GlobalKey<ScaffoldState> scaffoldKey2 = GlobalKey<ScaffoldState>();
//                                                                                   Navigator.push(
//                                                                                       context,
//                                                                                       MaterialPageRoute(
//                                                                                           builder: (context) => Scaffold(
//                                                                                               key: scaffoldKey2,
//                                                                                               appBar: AppBar(),
//                                                                                               body: Column(
//                                                                                                 children: [
//                                                                                                   ListTile(
//                                                                                                     title: Text("SN and/or ICE SN is Default."),
//                                                                                                     tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
//                                                                                                   ),
//                                                                                                   InkWell(
//                                                                                                     onTap: () {
//                                                                                                       TextEditingController controllerIce = new TextEditingController();
//
//                                                                                                       Navigator.push(
//                                                                                                         context,
//                                                                                                         MaterialPageRoute(
//                                                                                                             builder: (context) => Scaffold(
//                                                                                                               appBar: AppBar(
//                                                                                                                 title: Text("Update ICE SN"),
//                                                                                                               ),
//                                                                                                               body: Wrap(
//                                                                                                                 children: [
//                                                                                                                   Padding(
//                                                                                                                     padding: const EdgeInsets.all(8.0),
//                                                                                                                     child: TextField(
//                                                                                                                       controller: controllerIce,
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                   InkWell(
//                                                                                                                     onTap: () async {
//                                                                                                                       String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
//                                                                                                                       print("command " + commandToWrite);
//
//                                                                                                                       try {
//                                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         iceSerial = controllerIce.text;
//
//                                                                                                                         //return true;
//                                                                                                                       } catch (e) {
//                                                                                                                         // return false;
//                                                                                                                       }
//                                                                                                                     },
//                                                                                                                     child: Padding(
//                                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                                       child: Card(
//                                                                                                                         color: Theme.of(context).primaryColor,
//                                                                                                                         child: Center(
//                                                                                                                           child: Padding(
//                                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                                             child: Text(
//                                                                                                                               "Save",
//                                                                                                                               style: TextStyle(color: Colors.white),
//                                                                                                                             ),
//                                                                                                                           ),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ],
//                                                                                                               ),
//                                                                                                             )),
//                                                                                                       );
//                                                                                                       /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                                     },
//                                                                                                     child: Padding(
//                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                       child: ListTile(
//                                                                                                         title: Text(iceSerial),
//                                                                                                         subtitle: Text("Change  ICE SN"),
//                                                                                                       ),
//                                                                                                     ),
//                                                                                                   ),
//                                                                                                   InkWell(
//                                                                                                     onTap: () {
//                                                                                                       TextEditingController controller = new TextEditingController();
//
//                                                                                                       Navigator.push(
//                                                                                                         context,
//                                                                                                         MaterialPageRoute(
//                                                                                                             builder: (context) => Scaffold(
//                                                                                                               appBar: AppBar(
//                                                                                                                 title: Text("Update  SN"),
//                                                                                                               ),
//                                                                                                               body: Wrap(
//                                                                                                                 children: [
//                                                                                                                   Padding(
//                                                                                                                     padding: const EdgeInsets.all(8.0),
//                                                                                                                     child: TextField(
//                                                                                                                       controller: controller,
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                   InkWell(
//                                                                                                                     onTap: () async {
//                                                                                                                       String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                                       print("command " + commandToWrite);
//
//                                                                                                                       try {
//                                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         Serial = controller.text;
//
//                                                                                                                         // return true;
//                                                                                                                       } catch (e) {
//                                                                                                                         // return false;
//                                                                                                                       }
//                                                                                                                     },
//                                                                                                                     child: Padding(
//                                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                                       child: Card(
//                                                                                                                         color: Theme.of(context).primaryColor,
//                                                                                                                         child: Center(
//                                                                                                                           child: Padding(
//                                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                                             child: Text(
//                                                                                                                               "Save",
//                                                                                                                               style: TextStyle(color: Colors.white),
//                                                                                                                             ),
//                                                                                                                           ),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ],
//                                                                                                               ),
//                                                                                                             )),
//                                                                                                       );
//                                                                                                       /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                                     },
//                                                                                                     child: Padding(
//                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                       child: ListTile(
//                                                                                                         title: Text(Serial),
//                                                                                                         subtitle:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
//                                                                                                       ),
//                                                                                                     ),
//                                                                                                   ),
//                                                                                                 ],
//                                                                                               ))));
//                                                                                 }
//                                                                               }
//
//                                                                               getICESerial2() async {
//                                                                                 print("d X");
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                 List<int> responseAray2 = await characteristicReadPurpose.read();
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                 responseAray2 = await characteristicReadPurpose.read();
//                                                                                 String responseInString = utf8.decode(responseAray2);
//                                                                                 iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
//                                                                                 if (iceSerial.length == 0) {
//                                                                                   print("e X");
//                                                                                   getICESerial2();
//                                                                                 }
//                                                                                 if (Serial.length == 0) {
//                                                                                   print("e X");
//                                                                                   getSerial2();
//                                                                                 } else {
//                                                                                   //lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
//                                                                                 }
//                                                                               }
//
//                                                                               getSerial() async {
//                                                                                 print("c X");
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                                 List<int> responseAray2 = await characteristicReadPurpose.read();
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                                 responseAray2 = await characteristicReadPurpose.read();
//                                                                                 String responseInString = utf8.decode(responseAray2);
//                                                                                 Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                                 if (Serial.length == 0) {
//                                                                                   getSerial();
//                                                                                 }
//                                                                                 if (iceSerial.length == 0) {
//                                                                                   getICESerial2();
//                                                                                 } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
//                                                                                   print("g X");
//                                                                                   // lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
//                                                                                 } else {
//                                                                                   print("h X");
//
//                                                                                   // set up the button
//                                                                                   Widget okButton = FlatButton(
//                                                                                     child: Text("OK"),
//                                                                                     onPressed: () {},
//                                                                                   );
//
//                                                                                   // set up the AlertDialog
//                                                                                   AlertDialog alert = AlertDialog(
//                                                                                     title: Text("SN and/or ICE SN is Default"),
//                                                                                     content: Column(
//                                                                                       children: [
//                                                                                         InkWell(
//                                                                                           onTap: () {
//                                                                                             TextEditingController controller = new TextEditingController();
//
//                                                                                             Navigator.push(
//                                                                                               context,
//                                                                                               MaterialPageRoute(
//                                                                                                   builder: (context) => Scaffold(
//                                                                                                     appBar: AppBar(
//                                                                                                       title: Text("Update ICE SN"),
//                                                                                                     ),
//                                                                                                     body: Wrap(
//                                                                                                       children: [
//                                                                                                         Padding(
//                                                                                                           padding: const EdgeInsets.all(8.0),
//                                                                                                           child: TextField(
//                                                                                                             controller: controller,
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                         InkWell(
//                                                                                                           onTap: () async {
//                                                                                                             String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                             print("command " + commandToWrite);
//
//                                                                                                             try {
//                                                                                                               await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                               Navigator.pop(context);
//                                                                                                               Navigator.pop(context);
//
//                                                                                                               //return true;
//                                                                                                             } catch (e) {
//                                                                                                               //return false;
//                                                                                                             }
//                                                                                                           },
//                                                                                                           child: Padding(
//                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                             child: Card(
//                                                                                                               color: Theme.of(context).primaryColor,
//                                                                                                               child: Center(
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Text(
//                                                                                                                     "Save",
//                                                                                                                     style: TextStyle(color: Colors.white),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ),
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                       ],
//                                                                                                     ),
//                                                                                                   )),
//                                                                                             );
//                                                                                             /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                           },
//                                                                                           child: Padding(
//                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                             child: ListTile(
//                                                                                               title: Text(iceSerial),
//                                                                                               subtitle: Text("Change  SN"),
//                                                                                             ),
//                                                                                           ),
//                                                                                         ),
//                                                                                         InkWell(
//                                                                                           onTap: () {
//                                                                                             TextEditingController controller = new TextEditingController();
//
//                                                                                             Navigator.push(
//                                                                                               context,
//                                                                                               MaterialPageRoute(
//                                                                                                   builder: (context) => Scaffold(
//                                                                                                     appBar: AppBar(
//                                                                                                       title: Text("Update  SN"),
//                                                                                                     ),
//                                                                                                     body: Wrap(
//                                                                                                       children: [
//                                                                                                         Padding(
//                                                                                                           padding: const EdgeInsets.all(8.0),
//                                                                                                           child: TextField(
//                                                                                                             controller: controller,
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                         InkWell(
//                                                                                                           onTap: () async {
//                                                                                                             String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                             print("command " + commandToWrite);
//
//                                                                                                             try {
//                                                                                                               await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                               Navigator.pop(context);
//                                                                                                               Navigator.pop(context);
//
//                                                                                                               // return true;
//                                                                                                             } catch (e) {
//                                                                                                               // return false;
//                                                                                                             }
//                                                                                                           },
//                                                                                                           child: Padding(
//                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                             child: Card(
//                                                                                                               color: Theme.of(context).primaryColor,
//                                                                                                               child: Center(
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Text(
//                                                                                                                     "Save",
//                                                                                                                     style: TextStyle(color: Colors.white),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ),
//                                                                                                           ),
//                                                                                                         ),
//                                                                                                       ],
//                                                                                                     ),
//                                                                                                   )),
//                                                                                             );
//                                                                                             /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                           },
//                                                                                           child: Padding(
//                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                             child: ListTile(
//                                                                                               title: Text(iceSerial),
//                                                                                               subtitle:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change Ice SN"):Container(width: 0,height: 0,),
//                                                                                             ),
//                                                                                           ),
//                                                                                         ),
//                                                                                       ],
//                                                                                     ),
//                                                                                     actions: [
//                                                                                       okButton,
//                                                                                     ],
//                                                                                   );
//
//                                                                                   // show the dialog
//                                                                                   // showDialog(
//                                                                                   //   context: context,
//                                                                                   //   builder: (BuildContext context) {
//                                                                                   //     return alert;
//                                                                                   //   },
//                                                                                   // );
//
// /*
//                                                                                      scaffoldKey.currentState.showBottomSheet((context) =>Column(
//                                                                                        children: [
//                                                                                          ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),
//
//                                                                                          InkWell(onTap: (){
//                                                                                            TextEditingController controller = new TextEditingController();
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) => Scaffold(body: Column(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                    controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                    getICESerial2();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),));
//                                                                                            /*
//
//                                                                                            Navigator.push(
//                                                                                              context,
//                                                                                              MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
//                                                                                                children: [
//                                                                                                  Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: TextField(
//                                                                                                      controller: controller,
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                  InkWell(onTap: () async {
//                                                                                                    String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                    print("command " + commandToWrite);
//
//                                                                                                    try {
//                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                      Navigator.pop(context);
//                                                                                                      getICESerial2();
//                                                                                                      return true;
//                                                                                                    } catch (e) {
//                                                                                                      return false;
//                                                                                                    }
//
//                                                                                                  },
//                                                                                                    child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                      ),),),
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                ],
//                                                                                              ),)),
//                                                                                            );
//                                                                                            */
//                                                                                            /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                          },child: Padding(
//                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                            child: ListTile(title: Text(iceSerial),subtitle: Text("Change  ICE SN"),),
//                                                                                          ),),
//                                                                                          InkWell(onTap: (){
//                                                                                            TextEditingController controller = new TextEditingController();
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>  Scaffold(body: Column(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                    controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                    getICESerial2();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),));
//                                                                                            /*
//
//                                                                                            Navigator.push(
//                                                                                              context,
//                                                                                              MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
//                                                                                                children: [
//                                                                                                  Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: TextField(
//                                                                                                      controller: controller,
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                  InkWell(onTap: () async {
//                                                                                                    String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                    print("command " + commandToWrite);
//
//                                                                                                    try {
//                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                      Navigator.pop(context);
//                                                                                                      getICESerial2();
//                                                                                                      return true;
//                                                                                                    } catch (e) {
//                                                                                                      return false;
//                                                                                                    }
//
//                                                                                                  },
//                                                                                                    child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                      ),),),
//                                                                                                    ),
//                                                                                                  ),
//                                                                                                ],
//                                                                                              ),)),
//                                                                                            );
//                                                                                            */
//                                                                                            /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                          },child: Padding(
//                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                            child: ListTile(title: Text(Serial),subtitle: Text("Change SN"),),
//                                                                                          ),),
//
//
//                                                                                        ],
//                                                                                      ) );
//
//  */
//                                                                                   /*
//
//                                                                                      showBottomSheet(
//                                                                                          context: context,
//                                                                                          builder: (context) =>Scaffold(appBar: AppBar(),body: Column(
//                                                                                            children: [
//                                                                                              ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),
//
//                                                                                              InkWell(onTap: (){
//                                                                                                TextEditingController controller = new TextEditingController();
//
//                                                                                                Navigator.push(
//                                                                                                  context,
//                                                                                                  MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
//                                                                                                    children: [
//                                                                                                      Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: TextField(
//                                                                                                          controller: controller,
//                                                                                                        ),
//                                                                                                      ),
//                                                                                                      InkWell(onTap: () async {
//                                                                                                        String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                        print("command " + commandToWrite);
//
//                                                                                                        try {
//                                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                          Navigator.pop(context);
//                                                                                                          getICESerial2();
//                                                                                                          return true;
//                                                                                                        } catch (e) {
//                                                                                                          return false;
//                                                                                                        }
//
//                                                                                                      },
//                                                                                                        child: Padding(
//                                                                                                          padding: const EdgeInsets.all(8.0),
//                                                                                                          child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                                            child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                          ),),),
//                                                                                                        ),
//                                                                                                      ),
//                                                                                                    ],
//                                                                                                  ),)),
//                                                                                                );
//                                                                                                /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                              },child: Padding(
//                                                                                                padding: const EdgeInsets.all(8.0),
//                                                                                                child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
//                                                                                              ),),
//                                                                                              InkWell(onTap: (){
//                                                                                                TextEditingController controller = new TextEditingController();
//
//                                                                                                Navigator.push(
//                                                                                                  context,
//                                                                                                  MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
//                                                                                                    children: [
//                                                                                                      Padding(
//                                                                                                        padding: const EdgeInsets.all(8.0),
//                                                                                                        child: TextField(
//                                                                                                          controller: controller,
//                                                                                                        ),
//                                                                                                      ),
//                                                                                                      InkWell(onTap: () async {
//                                                                                                        String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                        print("command " + commandToWrite);
//
//                                                                                                        try {
//                                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                          Navigator.pop(context);
//                                                                                                          getICESerial2();
//                                                                                                          return true;
//                                                                                                        } catch (e) {
//                                                                                                          return false;
//                                                                                                        }
//
//                                                                                                      },
//                                                                                                        child: Padding(
//                                                                                                          padding: const EdgeInsets.all(8.0),
//                                                                                                          child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                            padding: const EdgeInsets.all(8.0),
//                                                                                                            child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                          ),),),
//                                                                                                        ),
//                                                                                                      ),
//                                                                                                    ],
//                                                                                                  ),)),
//                                                                                                );
//                                                                                                /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//
//
//                                                                                              },child: Padding(
//                                                                                                padding: const EdgeInsets.all(8.0),
//                                                                                                child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
//                                                                                              ),),
//
//
//                                                                                            ],
//                                                                                          )));
//
//                                                                                       */
//
//                                                                                   Navigator.push(
//                                                                                       context,
//                                                                                       MaterialPageRoute(
//                                                                                           builder: (context) => Scaffold(
//                                                                                               appBar: AppBar(),
//                                                                                               body: Column(
//                                                                                                 children: [
//                                                                                                   ListTile(
//                                                                                                     title: Text("SN and/or ICE SN is Default."),
//                                                                                                     tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
//                                                                                                   ),
//                                                                                                   InkWell(
//                                                                                                     onTap: () {
//                                                                                                       TextEditingController controllerICe = new TextEditingController();
//
//                                                                                                       Navigator.push(
//                                                                                                         context,
//                                                                                                         MaterialPageRoute(
//                                                                                                             builder: (context) => Scaffold(
//                                                                                                               appBar: AppBar(
//                                                                                                                 title: Text("Update ICE SN"),
//                                                                                                               ),
//                                                                                                               body: Wrap(
//                                                                                                                 children: [
//                                                                                                                   Padding(
//                                                                                                                     padding: const EdgeInsets.all(8.0),
//                                                                                                                     child: TextField(
//                                                                                                                       controller: controllerICe,
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                   InkWell(
//                                                                                                                     onTap: () async {
//                                                                                                                       String commandToWrite = COMMAND_INDEX_1_SET + controllerICe.text + COMMAND_SUFFIX;
//                                                                                                                       print("command " + commandToWrite);
//
//                                                                                                                       try {
//                                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         iceSerial = controllerICe.text;
//                                                                                                                         getICESerial2();
//                                                                                                                         // return true;
//                                                                                                                       } catch (e) {
//                                                                                                                         //return false;
//                                                                                                                       }
//                                                                                                                     },
//                                                                                                                     child: Padding(
//                                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                                       child: Card(
//                                                                                                                         color: Theme.of(context).primaryColor,
//                                                                                                                         child: Center(
//                                                                                                                           child: Padding(
//                                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                                             child: Text(
//                                                                                                                               "Save",
//                                                                                                                               style: TextStyle(color: Colors.white),
//                                                                                                                             ),
//                                                                                                                           ),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ],
//                                                                                                               ),
//                                                                                                             )),
//                                                                                                       );
//
//                                                                                                       /*
//                                                                                                scaffoldKey.currentState.showBottomSheet((context) =>Column(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                    getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//
//                                                                                             */
//                                                                                                     },
//                                                                                                     child: Padding(
//                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                       child: ListTile(
//                                                                                                         title: Text(iceSerial),
//                                                                                                         subtitle: Text("Change  SN"),
//                                                                                                       ),
//                                                                                                     ),
//                                                                                                   ),
//                                                                                                   InkWell(
//                                                                                                     onTap: () {
//                                                                                                       TextEditingController controller = new TextEditingController();
//
//                                                                                                       Navigator.push(
//                                                                                                         context,
//                                                                                                         MaterialPageRoute(
//                                                                                                             builder: (context) => Scaffold(
//                                                                                                               appBar: AppBar(
//                                                                                                                 title: Text("Update  SN"),
//                                                                                                               ),
//                                                                                                               body: Wrap(
//                                                                                                                 children: [
//                                                                                                                   Padding(
//                                                                                                                     padding: const EdgeInsets.all(8.0),
//                                                                                                                     child: TextField(
//                                                                                                                       controller: controller,
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                   InkWell(
//                                                                                                                     onTap: () async {
//                                                                                                                       String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                                       print("command " + commandToWrite);
//
//                                                                                                                       try {
//                                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                         Serial = controller.text;
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         Navigator.pop(context);
//                                                                                                                         getICESerial2();
//                                                                                                                         //return true;
//                                                                                                                       } catch (e) {
//                                                                                                                         //return false;
//                                                                                                                       }
//                                                                                                                     },
//                                                                                                                     child: Padding(
//                                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                                       child: Card(
//                                                                                                                         color: Theme.of(context).primaryColor,
//                                                                                                                         child: Center(
//                                                                                                                           child: Padding(
//                                                                                                                             padding: const EdgeInsets.all(8.0),
//                                                                                                                             child: Text(
//                                                                                                                               "Save",
//                                                                                                                               style: TextStyle(color: Colors.white),
//                                                                                                                             ),
//                                                                                                                           ),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ],
//                                                                                                               ),
//                                                                                                             )),
//                                                                                                       );
//                                                                                                       /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                                     },
//                                                                                                     child: Padding(
//                                                                                                       padding: const EdgeInsets.all(8.0),
//                                                                                                       child: ListTile(
//                                                                                                         title: Text(Serial),
//                                                                                                         subtitle:snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
//                                                                                                       ),
//                                                                                                     ),
//                                                                                                   ),
//                                                                                                 ],
//                                                                                               ))));
//                                                                                 }
//                                                                               }
//
//                                                                               //get ice
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               List<int> responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               String responseInString = utf8.decode(responseAray2);
//                                                                               iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
//
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               responseInString = utf8.decode(responseAray2);
//                                                                               iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
//
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               responseInString = utf8.decode(responseAray2);
//                                                                               iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
//                                                                               //end ice
//
//                                                                               //get sl
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               responseInString = utf8.decode(responseAray2);
//                                                                               Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               responseInString = utf8.decode(responseAray2);
//                                                                               Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//
//                                                                               responseAray2 = await characteristicReadPurpose.read();
//                                                                               responseInString = utf8.decode(responseAray2);
//                                                                               Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                               //end sl
//
//                                                                               // scaffoldKey.currentState.showBottomSheet((context) => Scaffold(
//                                                                               //       body: Column(
//                                                                               //         children: [],
//                                                                               //       ),
//                                                                               //     ));
//                                                                               GlobalKey<ScaffoldState> scaffoldKey20 = GlobalKey<ScaffoldState>();
//                                                                               Navigator.push(
//                                                                                   context,
//                                                                                   MaterialPageRoute(
//                                                                                       builder: (context) =>Scaffold(key: scaffoldKey20,appBar: AppBar(),
//                                                                                         body: Column(
//                                                                                           children: [
//                                                                                             InkWell(
//                                                                                               onTap: () {
//
//                                                                                                 if(snapshotprofile.data!.docs.first
//                                                                                                     .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID   ){
//                                                                                                   TextEditingController controllerIce = new TextEditingController();
//
//                                                                                                   Navigator.push(
//                                                                                                     context,
//                                                                                                     MaterialPageRoute(
//                                                                                                         builder: (context) => Scaffold(
//                                                                                                           appBar: AppBar(
//                                                                                                             title: Text("Update ICE SN"),
//                                                                                                           ),
//                                                                                                           body: Wrap(
//                                                                                                             children: [
//                                                                                                               Padding(
//                                                                                                                 padding: const EdgeInsets.all(8.0),
//                                                                                                                 child: TextField(
//                                                                                                                   controller: controllerIce,
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                               InkWell(
//                                                                                                                 onTap: () async {
//                                                                                                                   String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
//                                                                                                                   print("command " + commandToWrite);
//
//                                                                                                                   try {
//                                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                     Navigator.pop(context);
//                                                                                                                     // Navigator.pop(context);
//                                                                                                                     iceSerial = controllerIce.text;
//                                                                                                                     Index1ValueStream.getInstance().dataReload( controllerIce.text);
//
//                                                                                                                     //return true;
//                                                                                                                   } catch (e) {
//                                                                                                                     // return false;
//                                                                                                                   }
//                                                                                                                 },
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Card(
//                                                                                                                     color: Theme.of(context).primaryColor,
//                                                                                                                     child: Center(
//                                                                                                                       child: Padding(
//                                                                                                                         padding: const EdgeInsets.all(8.0),
//                                                                                                                         child: Text(
//                                                                                                                           "Save",
//                                                                                                                           style: TextStyle(color: Colors.white),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ],
//                                                                                                           ),
//                                                                                                         )),
//                                                                                                   );
//                                                                                                 }
//
//
//                                                                                               },
//                                                                                               child: Padding(
//                                                                                                 padding: const EdgeInsets.all(8.0),
//                                                                                                 child: ListTile(
//                                                                                                   title: StreamBuilder(
//                                                                                                       stream: Index1ValueStream.getInstance().outData,
//                                                                                                       initialData: iceSerial,
//                                                                                                       builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
//                                                                                                         if (snapshot.hasData) {
//                                                                                                           return Text(snapshot.data!);
//                                                                                                         } else {
//                                                                                                           return Text("Please wait");
//                                                                                                         }
//                                                                                                       }),
//                                                                                                   subtitle: Text("ICE Serial"),
//                                                                                                   trailing:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID ?  Icon(Icons.edit):Container(width: 0,height: 0,),
//                                                                                                 ),
//                                                                                               ),
//                                                                                             ),
//                                                                                             InkWell(
//                                                                                               onTap: () {
//                                                                                                 if(snapshotprofile.data!.docs.first
//                                                                                                     .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID ){
//                                                                                                   TextEditingController controller = new TextEditingController();
//
//                                                                                                   Navigator.push(
//                                                                                                     context,
//                                                                                                     MaterialPageRoute(
//                                                                                                         builder: (context) => Scaffold(
//                                                                                                           appBar: AppBar(
//                                                                                                             title: Text("Update  SN"),
//                                                                                                           ),
//                                                                                                           body: Wrap(
//                                                                                                             children: [
//                                                                                                               Padding(
//                                                                                                                 padding: const EdgeInsets.all(8.0),
//                                                                                                                 child: TextField(
//                                                                                                                   controller: controller,
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                               InkWell(
//                                                                                                                 onTap: () async {
//                                                                                                                   String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
//                                                                                                                   print("command " + commandToWrite);
//
//                                                                                                                   try {
//                                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                                     Navigator.pop(context);
//                                                                                                                     Index2ValueStream.getInstance().dataReload( controller.text);
//                                                                                                                     //Navigator.pop(context);
//
//                                                                                                                     Serial = controller.text;
//
//                                                                                                                     // return true;
//                                                                                                                   } catch (e) {
//                                                                                                                     // return false;
//                                                                                                                   }
//                                                                                                                 },
//                                                                                                                 child: Padding(
//                                                                                                                   padding: const EdgeInsets.all(8.0),
//                                                                                                                   child: Card(
//                                                                                                                     color: Theme.of(context).primaryColor,
//                                                                                                                     child: Center(
//                                                                                                                       child: Padding(
//                                                                                                                         padding: const EdgeInsets.all(8.0),
//                                                                                                                         child: Text(
//                                                                                                                           "Save",
//                                                                                                                           style: TextStyle(color: Colors.white),
//                                                                                                                         ),
//                                                                                                                       ),
//                                                                                                                     ),
//                                                                                                                   ),
//                                                                                                                 ),
//                                                                                                               ),
//                                                                                                             ],
//                                                                                                           ),
//                                                                                                         )),
//                                                                                                   );
//                                                                                                 }
//
//                                                                                                 /*
//
//
//                                                                                            scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
//                                                                                              children: [
//                                                                                                Padding(
//                                                                                                  padding: const EdgeInsets.all(8.0),
//                                                                                                  child: TextField(
//                                                                                                   // controller: controller,
//                                                                                                  ),
//                                                                                                ),
//                                                                                                InkWell(onTap: () async {
//                                                                                                  String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
//                                                                                                  print("command " + commandToWrite);
//
//                                                                                                  try {
//                                                                                                    await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                    Navigator.pop(context);
//                                                                                                   // getSerial();
//                                                                                                    return true;
//                                                                                                  } catch (e) {
//                                                                                                    return false;
//                                                                                                  }
//
//                                                                                                },
//                                                                                                  child: Padding(
//                                                                                                    padding: const EdgeInsets.all(8.0),
//                                                                                                    child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
//                                                                                                      padding: const EdgeInsets.all(8.0),
//                                                                                                      child: Text("Save",style: TextStyle(color: Colors.white),),
//                                                                                                    ),),),
//                                                                                                  ),
//                                                                                                ),
//                                                                                              ],
//                                                                                            ),);
//                                                                                            */
//                                                                                               },
//                                                                                               child: Padding(
//                                                                                                 padding: const EdgeInsets.all(8.0),
//                                                                                                 child: ListTile(
//                                                                                                   title: StreamBuilder(
//                                                                                                       stream: Index2ValueStream.getInstance().outData,
//                                                                                                       initialData: Serial,
//                                                                                                       builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
//                                                                                                         if (snapshot.hasData) {
//                                                                                                           return Text(snapshot.data!);
//                                                                                                         } else {
//                                                                                                           return Text("Please wait");
//                                                                                                         }
//                                                                                                       }),
//                                                                                                   subtitle: Text("Serial"),
//                                                                                                   trailing:snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID?  Icon(Icons.edit):Container(width: 0,height: 0,),
//                                                                                                 ),
//                                                                                               ),
//                                                                                             ),
//
//                                                                                             //   Directory_1_view_edit(
//                                                                                             //   bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                             //   bluetoothCharacteristicRead: characteristicReadPurpose,
//                                                                                             // ),
//                                                                                             //
//                                                                                             //   Directory_2_view_edit(
//                                                                                             //     bluetoothCharacteristicWrite:characteristicWritePurpose,
//                                                                                             //     bluetoothCharacteristicRead: characteristicReadPurpose,
//                                                                                             //   ),
//                                                                                             // Directory_1_view_edit(
//                                                                                             //   bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                             //   bluetoothCharacteristicRead:characteristicReadPurpose,
//                                                                                             // ),
//                                                                                             //
//                                                                                             // Directory_2_view_edit(
//                                                                                             //   bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                             //   bluetoothCharacteristicRead:characteristicReadPurpose,
//                                                                                             // ),
//                                                                                             Directory_3_view_edit(
//                                                                                               bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                               bluetoothCharacteristicRead:characteristicReadPurpose,
//                                                                                             ),
//                                                                                             Directory_4_view_edit(
//                                                                                               bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                               bluetoothCharacteristicRead:characteristicReadPurpose,
//                                                                                             ),
//                                                                                             Directory_9_view_edit(
//                                                                                               bluetoothCharacteristicWrite: characteristicWritePurpose,
//                                                                                               bluetoothCharacteristicRead:characteristicReadPurpose,
//                                                                                             ),
//                                                                                             ListTile(
//                                                                                               title: Text(
//                                                                                                 "Sequential Write",
//                                                                                                 style: TextStyle(color: Colors.blue),
//                                                                                               ),
//                                                                                               subtitle: StreamBuilder<double>(
//                                                                                                   stream: ImageWriteStatusStream.getInstance().outData,
//                                                                                                   // async work
//                                                                                                   builder: (BuildContext context,
//                                                                                                       AsyncSnapshot<double> snapshot) {
//                                                                                                     if(snapshot.hasData){
//                                                                                                       return LinearProgressIndicator(
//                                                                                                         value: snapshot.data,
//                                                                                                       );
//                                                                                                     }else{
//                                                                                                       return LinearProgressIndicator(
//                                                                                                         value: 0,
//                                                                                                       );
//                                                                                                     }
//                                                                                                   }),
//                                                                                               trailing: RaisedButton(
//                                                                                                 child: Text("Gallary"),
//                                                                                                 onPressed:(){
//                                                                                                   writeImageGallary(r.device,characteristicReadPurpose,characteristicWritePurpose);
//                                                                                                 },
//                                                                                               ),
//                                                                                             ),
//                                                                                             // InkWell(
//                                                                                             //   onTap: () {
//                                                                                             //     Navigator.push(
//                                                                                             //       context,
//                                                                                             //       MaterialPageRoute(
//                                                                                             //           builder: (context) =>
//                                                                                             //               CalibartionStep4(profile: widget.userBody,
//                                                                                             //                 calibAdmin:"admin",
//                                                                                             //                 firestore: widget
//                                                                                             //                     .firestore,
//                                                                                             //                 device:
//                                                                                             //                 widget.device,
//                                                                                             //                 characteristicWrite:
//                                                                                             //                 allService[3]
//                                                                                             //                     .characteristics[0],
//                                                                                             //                 characteristicRead:
//                                                                                             //                 allService[3]
//                                                                                             //                     .characteristics[1],
//                                                                                             //                 productInfo:
//                                                                                             //                 productInfo,
//                                                                                             //               )),
//                                                                                             //     );
//                                                                                             //   },
//                                                                                             //   child: Padding(
//                                                                                             //     padding:
//                                                                                             //     const EdgeInsets.fromLTRB(
//                                                                                             //         8, 25, 8, 0),
//                                                                                             //     child: Container(
//                                                                                             //       decoration: BoxDecoration(
//                                                                                             //           borderRadius:
//                                                                                             //           BorderRadius.all(
//                                                                                             //               Radius.circular(
//                                                                                             //                   3)),
//                                                                                             //           color: Theme.of(context)
//                                                                                             //               .primaryColor),
//                                                                                             //       child: Center(
//                                                                                             //         child: Padding(
//                                                                                             //           padding:
//                                                                                             //           const EdgeInsets
//                                                                                             //               .all(15.0),
//                                                                                             //           child: Text(
//                                                                                             //             "Next",
//                                                                                             //             style: TextStyle(
//                                                                                             //                 color:
//                                                                                             //                 Colors.white),
//                                                                                             //           ),
//                                                                                             //         ),
//                                                                                             //       ),
//                                                                                             //     ),
//                                                                                             //   ),
//                                                                                             // ),
//                                                                                             InkWell(
//                                                                                               onTap: () {
//                                                                                                 Navigator.of(context).push(MaterialPageRoute(builder: (context) {
//                                                                                                   try{
//                                                                                                     r.device.connect(autoConnect: true);
//                                                                                                   }catch(e){
//
//                                                                                                   }
//                                                                                                   return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: r.device, auth: _auth,);
//                                                                                                   //return DeviceScreenLessDetails(r.device);
//                                                                                                 }));
//                                                                                               },
//                                                                                               child: Padding(
//                                                                                                 padding: const EdgeInsets.all(8.0),
//                                                                                                 child: Container(decoration: BoxDecoration(
//                                                                                                   color: Theme.of(context).primaryColor,
//
//                                                                                                 ),
//                                                                                                   child: Padding(
//                                                                                                     padding: const EdgeInsets.all(15.0),
//                                                                                                     child: Text(
//                                                                                                       "Advanced settings",
//                                                                                                       style: TextStyle(color:Colors.white),
//                                                                                                     ),
//                                                                                                   ),
//                                                                                                 ),
//                                                                                               ),
//                                                                                             ),
//                                                                                             InkWell(
//                                                                                               onTap: () {
//                                                                                                 lookUpBoard(getCalibratorId(snapshotprofile.data!.docs.first),Serial, iceSerial, scaffoldKey20, characteristicReadPurpose, characteristicWritePurpose, r.device,context,snapshotprofile.data!.docs.first,);
//                                                                                               },
//                                                                                               child: Card(
//                                                                                                 color: Colors.blue,
//                                                                                                 child: Container(
//                                                                                                     child: Center(
//                                                                                                         child: Padding(
//                                                                                                           padding: const EdgeInsets.all(8.0),
//                                                                                                           child: Text(
//                                                                                                             snapshotprofile.data!.docs.first.get("roleId")==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID?"Assign Customer":"Search in System",
//                                                                                                             style: TextStyle(color: Colors.white),
//                                                                                                           ),
//                                                                                                         ))),
//                                                                                               ),
//                                                                                             ),
//                                                                                           ],
//                                                                                         ),
//                                                                                       )));
//
//
//                                                                               // scaffoldKey.currentState.showBottomSheet((context) => );
//
//                                                                               getICESerial() async {
//                                                                                 print("d X");
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                 List<int> responseAray2 = await characteristicReadPurpose.read();
//                                                                                 await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                 responseAray2 = await characteristicReadPurpose.read();
//                                                                                 String responseInString = utf8.decode(responseAray2);
//                                                                                 iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
//                                                                                 if (iceSerial.length == 0) {
//                                                                                   print("e X");
//                                                                                   getICESerial();
//                                                                                 } else {
//                                                                                   print("f X");
//                                                                                   getSerial();
//                                                                                 }
//                                                                               }
//
//                                                                               // getICESerial();
//                                                                             } else {
//                                                                               print("i X");
//                                                                               print("service side " + allservice.length.toString());
//                                                                             }
//                                                                           });
//                                                                           //return Text("ok");
//                                                                           //   return   PerformTestPage(device: r.device,project: widget.projectID,);
//                                                                           //return PerformTestPageActivity(device: r.device, project: "", index2: '', testDuration: 0,);
//                                                                           // Navigator.pop(context);
//                                                                           //return ConnectedDevicePage(device: r.device);
//                                                                           //return DeviceScreenLessDetails(r.device);
//                                                                         },
//                                                                       ),
//                                                                       //     (r) => ScanResultTile(
//                                                                       //   result: r,
//                                                                       //   onTap: () => Navigator.of(context)
//                                                                       //       .push(MaterialPageRoute(builder: (context) {
//                                                                       //     r.device.connect(autoConnect: false);
//                                                                       //     //return Text("ok");
//                                                                       //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
//                                                                       //     return   PerformTestPage(device: r.device,project:"o",);
//                                                                       //     Navigator.pop(context);
//                                                                       //     //return ConnectedDevicePage(device: r.device);
//                                                                       //     //return DeviceScreenLessDetails(r.device);
//                                                                       //   })),
//                                                                       // ),
//                                                                     )
//                                                                         .toList(),
//                                                                   );
//                                                                 },
//                                                               )
//                                                             ],
//                                                           ));
//                                                 },
//                                                   child: Padding(
//                                                     padding: EdgeInsets.all(8.0),
//                                                     child: Container(
//                                                       height: 50,
//                                                       decoration: BoxDecoration(
//                                                           borderRadius:
//                                                           BorderRadius.circular(5),
//                                                           border: Border.all(
//                                                               width: 2,
//                                                               color: Theme.of(context)
//                                                                   .primaryColor)),
//                                                       child: Center(
//                                                         child: Text("Connect a new device"),
//                                                       ),
//                                                     ),
//                                                   ),
//                                                 ),
//                                               ),
//                                             ],
//                                           ));
//                                     } else if (snapshotprofile.data!.docs.first
//                                     //TODO
//                                     //change for calibrator
//                                         .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID) {
//                                       return Scaffold(
//                                           appBar: AppBar(
//                                             leading: Padding(
//                                               padding: const EdgeInsets.all(8.0),
//                                               child: Icon(
//                                                 Icons.account_box_outlined,
//                                                 color: Colors.white,
//                                               ),
//                                             ),
//                                             title: Text(snapshotprofile.data!.docs.first
//                                                 .get("displayName")),
//                                           ),
//                                           body: Stack(
//                                             children: [
//                                               Align(
//                                                 alignment: Alignment.topCenter,
//                                                 child: Padding(
//                                                   padding: EdgeInsets.all(8.0),
//                                                   child: Container(
//                                                     width: MediaQuery.of(context).size.width,
//                                                     height:
//                                                     (MediaQuery.of(context).size.height -
//                                                         160) /
//                                                         2,
//                                                     decoration: BoxDecoration(
//                                                         borderRadius:
//                                                         BorderRadius.circular(5),
//                                                         border: Border.all(
//                                                             width: 2,
//                                                             color: Theme.of(context)
//                                                                 .primaryColor)),
//                                                     child: Column(
//                                                       mainAxisAlignment:
//                                                       MainAxisAlignment.start,
//                                                       children: [
//                                                         ListTile(
//                                                           title: Text(
//                                                             "Calibrations",
//                                                             style: TextStyle(
//                                                               color: Colors.blue,
//                                                             ),
//                                                           ),
//                                                           leading: Icon(
//                                                             Icons.add,
//                                                             color: Colors.blue,
//                                                           ),
//                                                         ),
//                                                         StreamBuilder(
//                                                             stream: FirebaseFirestore.instance
//                                                                 .collection("calibrations")
//                                                                 .where("calibrationAdmin",
//                                                                 isEqualTo: snapshotprofile
//                                                                     .data!.docs.first
//                                                                     .get("parent"))
//                                                                 .snapshots(),
//                                                             builder: (BuildContext context,
//                                                                 AsyncSnapshot<QuerySnapshot>
//                                                                 snapshot) {
//                                                               if (snapshot.hasData) {
//                                                                 return ListView.builder(
//                                                                     shrinkWrap: true,
//                                                                     itemCount: snapshot
//                                                                         .data!.docs.length,
//                                                                     itemBuilder: (BuildContext
//                                                                     ctxt,
//                                                                         int index) =>
//                                                                         ListTile(
//                                                                           leading: Icon(
//                                                                             Icons
//                                                                                 .account_box_outlined,
//                                                                             color: Theme.of(
//                                                                                 context)
//                                                                                 .primaryColor,
//                                                                           ),
//                                                                           title: Text(snapshot
//                                                                               .data!
//                                                                               .docs[index]
//                                                                               .id),
//                                                                         ));
//
//                                                               } else {
//                                                                 return Center(
//                                                                   child: Text("No records"),
//                                                                 );
//                                                               }
//                                                             }),
//                                                       ],
//                                                     ),
//                                                   ),
//                                                 ),
//                                               ),
//                                               Positioned(
//                                                 top: ((MediaQuery.of(context).size.height -
//                                                     160) /
//                                                     2) +
//                                                     10,
//                                                 bottom: 60,
//                                                 left: 0,
//                                                 right: 0,
//                                                 child: Padding(
//                                                   padding: EdgeInsets.all(8.0),
//                                                   child: Container(
//                                                     width: MediaQuery.of(context).size.width,
//                                                     height:
//                                                     (MediaQuery.of(context).size.height -
//                                                         160) /
//                                                         2,
//                                                     decoration: BoxDecoration(
//                                                         borderRadius:
//                                                         BorderRadius.circular(5),
//                                                         border: Border.all(
//                                                             width: 2,
//                                                             color: Theme.of(context)
//                                                                 .primaryColor)),
//                                                     child: Column(
//                                                       mainAxisAlignment:
//                                                       MainAxisAlignment.start,
//                                                       children: [
//                                                         ListTile(
//                                                           title: Text(
//                                                             "Connected Devices",
//                                                             style: TextStyle(
//                                                               color: Colors.blue,
//                                                             ),
//                                                           ),
//                                                           leading: Icon(
//                                                             Icons.add,
//                                                             color: Colors.blue,
//                                                           ),
//                                                         ),
//                                                         StreamBuilder<BluetoothState>(
//                                                             stream:
//                                                             FlutterBlue.instance.state,
//                                                             initialData:
//                                                             BluetoothState.unknown,
//                                                             builder: (c, snapshot) {
//                                                               final state = snapshot.data;
//                                                               if (state ==
//                                                                   BluetoothState.on) {
//                                                                 // return Text("Blutooth on");
//                                                                 return StreamBuilder<
//                                                                     List<BluetoothDevice>>(
//                                                                   stream: Stream.periodic(
//                                                                       Duration(
//                                                                           seconds: 0))
//                                                                       .asyncMap((_) =>
//                                                                   FlutterBlue.instance
//                                                                       .connectedDevices),
//                                                                   initialData: [],
//                                                                   builder: (c, snapshot) {
//                                                                     if (snapshot.hasData &&
//                                                                         snapshot.data!.length >
//                                                                             0) {
//                                                                       return Column(
//                                                                         children:
//                                                                         snapshot.data!
//                                                                             .map((d) =>
//                                                                             ListTile(
//                                                                               onTap:
//                                                                                   () {},
//                                                                               title: Text(
//                                                                                   d.name),
//                                                                               subtitle: Text(d
//                                                                                   .id
//                                                                                   .toString()),
//                                                                               trailing:
//                                                                               StreamBuilder<BluetoothDeviceState>(
//                                                                                 stream:
//                                                                                 d.state,
//                                                                                 initialData:
//                                                                                 BluetoothDeviceState.disconnected,
//                                                                                 builder:
//                                                                                     (c, snapshot) {
//                                                                                   if (snapshot.data ==
//                                                                                       BluetoothDeviceState.connected) {
//                                                                                     return InkWell(
//                                                                                       onTap: () {
//                                                                                         Navigator.of(context).push(MaterialPageRoute(builder: (context) {
//                                                                                           d.connect(autoConnect: true);
//                                                                                           return ConnectedDevicePage(calibratorID: snapshotprofile.data!.docs.first
//                                                                                               .get("parent"),firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: d, auth: _auth,);
//                                                                                           //return DeviceScreenLessDetails(r.device);
//                                                                                         }));
//                                                                                       },
//                                                                                       child: Text(
//                                                                                         "Open Settings",
//                                                                                         style: TextStyle(color: Theme.of(context).primaryColor),
//                                                                                       ),
//                                                                                     );
//
//                                                                                   }
//                                                                                   return Text(snapshot.data.toString());
//                                                                                 },
//                                                                               ),
//                                                                             ))
//                                                                             .toList(),
//                                                                       );
//                                                                     } else {
//                                                                       return ListTile(
//                                                                         onTap: () {
//                                                                           FlutterBlue.instance
//                                                                               .startScan(
//                                                                               timeout: Duration(
//                                                                                   seconds:
//                                                                                   4));
//                                                                           showDialog<void>(
//                                                                               context:
//                                                                               context,
//                                                                               builder:
//                                                                                   (context) =>
//                                                                                   SimpleDialog(
//                                                                                     children: [
//                                                                                       StreamBuilder<List<ScanResult>>(
//                                                                                         stream: FlutterBlue.instance.scanResults,
//                                                                                         initialData: [],
//                                                                                         builder: (c, snapshot) {
//                                                                                           //  updateData(snapshot.data);
//                                                                                           FirebaseFirestore firestore;
//                                                                                           //  Database(firestore: firestore).addData(snapshot.data);
//
//                                                                                           return Column(
//                                                                                             children: snapshot.data!
//                                                                                                 .map(
//                                                                                                   (r) => ScanResultTile(
//                                                                                                 result: r,
//                                                                                                 onTap: () {
//                                                                                                   r.device.connect(autoConnect: false).then((value) async{
//                                                                                                     Navigator.pop(context);
//                                                                                                     SharedPreferences sf =await SharedPreferences.getInstance();
//                                                                                                     String index6;
//                                                                                                     String index2;
//
//
//                                                                                                     void initDeviceSlAndCalibDate() async {
//
//                                                                                                       Duration waitingDuration = Duration(milliseconds: 50);
//
//                                                                                                       List<BluetoothService> allService = await r.device.services.first;
//                                                                                                       // print(allService.length.toString());
//
//
//                                                                                                       dynamic readWrite = await OsDependentSettings().getReadWriteCharacters(device: r.device);
//
//                                                                                                       BluetoothCharacteristic read = readWrite["read"];
//
//                                                                                                       BluetoothCharacteristic write = readWrite["write"];
//
//
//
//
//                                                                                                       getIndex6()async{
//                                                                                                         await Future.delayed(waitingDuration);
//
//                                                                                                         allService = await r.device.services.first;
//                                                                                                         print(allService.length.toString());
//
//                                                                                                         dynamic readWrite = await OsDependentSettings().getReadWriteCharacters(device: r.device);
//
//                                                                                                         read = readWrite["read"];
//
//                                                                                                         write = readWrite["write"];
//
//
//
//
//
//
//                                                                                                         await write.write(StringToASCII(COMMAND_INDEX_6_GET_),
//                                                                                                             withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                         await read.read();
//                                                                                                         await write.write(StringToASCII(COMMAND_INDEX_6_GET_),
//                                                                                                             withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                         List<int> responseAray6 = await read.read();
//                                                                                                         String responseInString6 = utf8.decode(responseAray6);
//                                                                                                         String data6 =
//                                                                                                         removeCodesFromStrings(responseInString6, COMMAND_INDEX_6_GET_);
//                                                                                                         print("2 " + data6);
//                                                                                                         String g = "ok";
//
//
//
//
//                                                                                                         index6 = data6;
//                                                                                                         sf.setString("index6", data6);
//
//                                                                                                         if(index6.length == 0){
//                                                                                                           try{
//                                                                                                             await getIndex6();
//                                                                                                           }catch(e){
//                                                                                                             await Future.delayed(waitingDuration);
//                                                                                                             await getIndex6();
//                                                                                                           }
//                                                                                                         }
//                                                                                                       }
//
//
//                                                                                                       //await widget.d.disconnect();
//
//
//                                                                                                       getIndex1()async{
//                                                                                                         await Future.delayed(waitingDuration);
//
//                                                                                                         await write.write(StringToASCII(COMMAND_INDEX_2_GET_),
//                                                                                                             withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                         await read.read();
//                                                                                                         await write.write(StringToASCII(COMMAND_INDEX_2_GET_),
//                                                                                                             withoutResponse: OsDependentSettings().writeWithresponse);
//                                                                                                         List<int> responseAray2 = await read.read();
//                                                                                                         String responseInString = utf8.decode(responseAray2);
//                                                                                                         String data =
//                                                                                                         removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
//                                                                                                         print("2 " + data);
//
//
//                                                                                                         index2 = data;
//                                                                                                         sf.setString("index2", data);
//
//                                                                                                         if(index2.length == 0){
//                                                                                                           try{
//                                                                                                             await getIndex1();
//                                                                                                           }catch(e){
//                                                                                                             await Future.delayed(waitingDuration);
//                                                                                                             await getIndex1();
//                                                                                                           }
//
//
//
//
//
//                                                                                                         }else{
//                                                                                                           try{
//                                                                                                             await getIndex6();
//                                                                                                           }catch(e){
//                                                                                                             await Future.delayed(waitingDuration);
//                                                                                                             await getIndex6();
//                                                                                                           }
//                                                                                                         }
//                                                                                                       }
//
//                                                                                                       try{
//                                                                                                         await getIndex1();
//                                                                                                       }catch(e){
//                                                                                                         await Future.delayed(waitingDuration);
//                                                                                                         await getIndex1();
//                                                                                                       }
//
//
//
//
//                                                                                                     }
//                                                                                                     initDeviceSlAndCalibDate();
//
//                                                                                                   });
//                                                                                                   //return Text("ok");
//                                                                                                   //   return   PerformTestPage(device: r.device,project: widget.projectID,);
//                                                                                                   //   return PerformTestPageActivity(device: r.device, project: "", index2: '',);
//                                                                                                   Navigator.pop(context);
//                                                                                                   //return ConnectedDevicePage(device: r.device);
//                                                                                                   //return DeviceScreenLessDetails(r.device);
//                                                                                                 },
//                                                                                               ),
//                                                                                               //     (r) => ScanResultTile(
//                                                                                               //   result: r,
//                                                                                               //   onTap: () => Navigator.of(context)
//                                                                                               //       .push(MaterialPageRoute(builder: (context) {
//                                                                                               //     r.device.connect(autoConnect: false);
//                                                                                               //     //return Text("ok");
//                                                                                               //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
//                                                                                               //     return   PerformTestPage(device: r.device,project:"o",);
//                                                                                               //     Navigator.pop(context);
//                                                                                               //     //return ConnectedDevicePage(device: r.device);
//                                                                                               //     //return DeviceScreenLessDetails(r.device);
//                                                                                               //   })),
//                                                                                               // ),
//                                                                                             )
//                                                                                                 .toList(),
//                                                                                           );
//                                                                                         },
//                                                                                       )
//                                                                                     ],
//                                                                                   ));
//                                                                         },
//                                                                         title: Text(
//                                                                             "No Device is Connected"),
//                                                                         trailing: Text(
//                                                                           "Scan",
//                                                                           style: TextStyle(
//                                                                               color: Colors
//                                                                                   .blue),
//                                                                         ),
//                                                                       );
//                                                                     }
//                                                                   },
//                                                                 );
//                                                               }
//                                                               return ListTile(
//                                                                 title:
//                                                                 Text("Turn on Blutooth"),
//                                                                 trailing: Icon(
//                                                                   Icons.bluetooth_disabled,
//                                                                   color: Theme.of(context)
//                                                                       .primaryColor,
//                                                                 ),
//                                                               );
//                                                               //return BluetoothOffScreen(state: state);
//                                                             }),
//                                                       ],
//                                                     ),
//                                                   ),
//                                                 ),
//                                               ),
//                                               Align(
//                                                 alignment: Alignment.bottomCenter,
//                                                 child: Padding(
//                                                   padding: EdgeInsets.all(8.0),
//                                                   child: Container(
//                                                     height: 50,
//                                                     decoration: BoxDecoration(
//                                                         borderRadius:
//                                                         BorderRadius.circular(5),
//                                                         border: Border.all(
//                                                             width: 2,
//                                                             color: Theme.of(context)
//                                                                 .primaryColor)),
//                                                     child: Center(
//                                                       child: Text("Connect a new device"),
//                                                     ),
//                                                   ),
//                                                 ),
//                                               ),
//                                             ],
//                                           ));
//                                     } else {
//                                       return Scaffold(
//                                         body: Text("Unsupported user"),
//                                       );
//                                     }
//                                   } else {
//                                     return Scaffold(
//                                       body: Text("Pease wait"),
//                                     );
//                                   }
//                                 } else {
//                                   return Scaffold(
//                                     body: Text("Pease wait"),
//                                   );
//                                 }
//                               });
                        }

                      }
                    //Auth stream
                  );
                }),));
              // : Root( locale:locale,);

          }

          // Otherwise, show something whilst waiting for initialization to complete
          return const Scaffold(
            body: Center(
              child: Text("Loading..."),
            ),
          );
        },
      );
      // return  MaterialApp(locale: locale,
      //   home:FutureBuilder<FirebaseApp>(
      //     // Initialize FlutterFire:
      //
      //     future: Firebase.initializeApp(),
      //     //future: customInitialize(),
      //     builder: (context, snapshot) {
      //       // Check for errors
      //       if (snapshot.hasError) {
      //         return const Scaffold(
      //           body: Center(
      //             child: Text("Error"),
      //           ),
      //         );
      //       }
      //
      //       // Once complete, show your application
      //       if (snapshot.connectionState == ConnectionState.done) {
      //         print(snapshot.data!.options.asMap);
      //
      //
      //
      //
      //         return testPlan
      //             ? TestPlan()
      //             : Root( locale:locale,);
      //
      //       }
      //
      //       // Otherwise, show something whilst waiting for initialization to complete
      //       return const Scaffold(
      //         body: Center(
      //           child: Text("Loading..."),
      //         ),
      //       );
      //     },
      //   ) ,
      // );

    }
   return FutureBuilder<Locale>(
        // Initialize FlutterFire:
        //  future: Firebase.initializeApp(),
        future: getLocale(),
       builder: (BuildContext context, AsyncSnapshot<Locale>localeSnapsot) {
          if(localeSnapsot.hasData){
            print("locale");
            print(localeSnapsot.data);
            return  MaterialApp(
              builder: (context, child) {
                return MediaQuery(
                  child: child!,
                  data: MediaQuery.of(context).copyWith(textScaleFactor: 1.0),
                );
              },
              title: "Staht",
              debugShowCheckedModeBanner: false,
              locale: localeSnapsot.data,
              home:getHomeApp(localeSnapsot.data!),
              supportedLocales: [
                Locale('en', ''),
                Locale('bn', '')
              ],
              localizationsDelegates: [
                AppLocalizationsDelegate(),
                GlobalMaterialLocalizations.delegate,
                GlobalWidgetsLocalizations.delegate,
                GlobalCupertinoLocalizations.delegate,
              ],
              localeResolutionCallback: (locale, supportedLocales) {
                for (var supportedLocale in supportedLocales) {
                  if (supportedLocale?.languageCode == locale?.languageCode &&
                      supportedLocale?.countryCode == locale?.countryCode) {
                    return supportedLocale;
                  }
                }
                return supportedLocales?.first;
              },
            );

          }else{
            return CircularProgressIndicator();
          }

    });



    // return ThemeProvider(
    //   saveThemesOnChange: true,
    //   loadThemeOnInit: false,
    //   onInitCallback: (controller, previouslySavedThemeFuture) async {
    //     String? savedTheme = await previouslySavedThemeFuture;
    //     if (savedTheme != null) {
    //       controller.setTheme(savedTheme);
    //     } else {
    //       Brightness platformBrightness =
    //           SchedulerBinding.instance?.window.platformBrightness ??
    //               Brightness.light;
    //       if (platformBrightness == Brightness.dark) {
    //         controller.setTheme('dark');
    //       } else {
    //         controller.setTheme('light');
    //       }
    //       controller.forgetSavedTheme();
    //     }
    //   },
    //   themes: <AppTheme>[
    //     AppTheme.light(id: 'light'),
    //     AppTheme.dark(id: 'dark',),
    //   ],
    //   child: ThemeConsumer(
    //     child: Builder(
    //       builder: (themeContext) => MaterialApp(
    //         theme:  ThemeProvider.themeOf(themeContext).data,
    //         title: 'Staht Connect',
    //         home: FutureBuilder(
    //           // Initialize FlutterFire:
    //           //  future: Firebase.initializeApp(),
    //           future: customInitialize(),
    //           builder: (context, snapshot) {
    //             // Check for errors
    //             if (snapshot.hasError) {
    //               return const Scaffold(
    //                 body: Center(
    //                   child: Text("Error"),
    //                 ),
    //               );
    //             }
    //
    //             // Once complete, show your application
    //             if (snapshot.connectionState == ConnectionState.done) {
    //
    //
    //               return testPlan
    //                   ? TestPlan()
    //                   : Root();
    //
    //             }
    //
    //             // Otherwise, show something whilst waiting for initialization to complete
    //             return const Scaffold(
    //               body: Center(
    //                 child: Text("Loading..."),
    //               ),
    //             );
    //           },
    //         ),
    //       ),
    //     ),
    //   ),
    // );
    // return ThemeProvider(
    //   themes: [
    //     AppTheme.light(), // This is standard light theme (id is default_light_theme)
    //     AppTheme.dark(), // This is standard dark theme (id is default_dark_theme)
    //     AppTheme(
    //       id: "custom_theme", // Id(or name) of the theme(Has to be unique)
    //       description: "My Custom Theme", // Description of theme
    //       data: ThemeData(  // Real theme data
    //         primaryColor: Colors.black,
    //         accentColor: Colors.red,
    //       ),
    //     ),
    //   ],
    //   child: ThemeConsumer(
    //     child: Builder(
    //       builder: (themeContext) =>MaterialApp(
    //
    //           home: FutureBuilder(
    //             // Initialize FlutterFire:
    //             //  future: Firebase.initializeApp(),
    //             future: customInitialize(),
    //             builder: (context, snapshot) {
    //               // Check for errors
    //               if (snapshot.hasError) {
    //                 return const Scaffold(
    //                   body: Center(
    //                     child: Text("Error"),
    //                   ),
    //                 );
    //               }
    //
    //               // Once complete, show your application
    //               if (snapshot.connectionState == ConnectionState.done) {
    //                 //  FirebaseFirestore.instance.collection("9feb").add({"data":"data7"});
    //
    //                 print(Firebase.apps.asMap().toString());
    //                 List<FirebaseApp> apps = Firebase.apps;
    //
    //                 // return Scaffold(body:  Center(child: Text("2"),),);
    //
    //                 // return LineMultiColor();
    //
    //                 // return DefaultPanningNN();
    //
    //                 // return MaterialApp( themeMode: ThemeMode.dark,
    //                 //   theme: AppTheme().getThemeData(),
    //                 //   debugShowCheckedModeBanner: false,
    //                 //   home:MyHomePageCapture(title: "okok",) ,);
    //
    //                 return testPlan
    //                     ? TestPlan()
    //                     : Root();
    //
    //               }
    //
    //               // Otherwise, show something whilst waiting for initialization to complete
    //               return const Scaffold(
    //                 body: Center(
    //                   child: Text("Loading..."),
    //                 ),
    //               );
    //             },
    //           )),
    //     ),
    //   ),
    // );
    // return MaterialApp(
    //
    //     home: FutureBuilder(
    //       // Initialize FlutterFire:
    //       //  future: Firebase.initializeApp(),
    //       future: customInitialize(),
    //       builder: (context, snapshot) {
    //         // Check for errors
    //         if (snapshot.hasError) {
    //           return const Scaffold(
    //             body: Center(
    //               child: Text("Error"),
    //             ),
    //           );
    //         }
    //
    //         // Once complete, show your application
    //         if (snapshot.connectionState == ConnectionState.done) {
    //           //  FirebaseFirestore.instance.collection("9feb").add({"data":"data7"});
    //
    //           print(Firebase.apps.asMap().toString());
    //           List<FirebaseApp> apps = Firebase.apps;
    //
    //           // return Scaffold(body:  Center(child: Text("2"),),);
    //
    //           // return LineMultiColor();
    //
    //           // return DefaultPanningNN();
    //
    //           // return MaterialApp( themeMode: ThemeMode.dark,
    //           //   theme: AppTheme().getThemeData(),
    //           //   debugShowCheckedModeBanner: false,
    //           //   home:MyHomePageCapture(title: "okok",) ,);
    //
    //           return testPlan
    //               ? TestPlan()
    //               : Root();
    //
    //         }
    //
    //         // Otherwise, show something whilst waiting for initialization to complete
    //         return const Scaffold(
    //           body: Center(
    //             child: Text("Loading..."),
    //           ),
    //         );
    //       },
    //     ));



  }
}
//
// String role_id_customer_user = "feDnCNQed9z4XgD0LGwT";
// String role_id_customer_admin = "3mh3XlWrIEZxJDmTL8VI";
// String role_id_staht_admin = "A91Ul672N5VhqJFDVSXs";
// String role_id_tenant_admin = "5RN4kl4LF3mzIbtxwEfr";
// String role_id_calibrator = "r0EhhGdgebtoZeTmL40j";

class Root extends StatefulWidget {
  //not using root anymore
  late FirebaseFirestore firestore;
  late Locale locale;
  Root ({required this.locale});
  @override
  _RootState createState() => _RootState();
}
class LoggedInUserWidget extends StatelessWidget {
  Locale locale;
  LoggedInUserWidget({required this.locale});
  Future addfirestoreRules({ required String projectID}) async {
    var url = cloudRestApiBase+'addrules';
    final http.Response response = await http.post(Uri.parse(url),
      headers: <String, String>{'Content-Type': 'application/json; charset=UTF-8',},
      body: jsonEncode(<String, String> {   "project_id":projectID,}),);

  }
  Future addfirestore({ String? uid, String? projectID,required String region}) async {
    var body = jsonEncode(<String, String?>{ "project_id": projectID,"region":region});
    var url = cloudRestApiBase + 'addfirestore';
    final http.Response response = await http.post(Uri.parse(url),
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: body,);



  }
  Future addfirebase({ String? projectID}) async {
    var body = jsonEncode(<String, String?>{ "project_id": projectID});
    var url = cloudRestApiBase + 'addfirebase';
    final http.Response response = await http.post(Uri.parse(url),
      headers: <String, String>{
        'Content-Type': 'application/json; charset=UTF-8',
      },
      body: body,);



  }
  @override
  Widget build(BuildContext context) {
    print("LoggedInUserWidget");
    double vv = 1.8;
    AppToast().show(message: vv.toStringAsFixed(2));

    startTimer(){

    }
    height = MediaQuery.of(context).size.height;
    width = MediaQuery.of(context).size.width;
    Future<FirebaseFirestore> initCustomerFirebase({required String customerGCPprojectId}) async {
      String projectID = customerGCPprojectId;
      FirebaseApp app;

      try {
        app = await Firebase.initializeApp(
            name: projectID,
            options: FirebaseOptions(
              // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
              appId: Platform.isAndroid
                  ?Config().defaultAppIdAndroid
                  : Config().defaultAppIdIOS,
              apiKey: Config().apiKey,
              messagingSenderId: '',
              projectId: projectID,
              storageBucket:"gs://"+projectID+".appspot.com",
            ));
        FirebaseFirestore firestore =
        await FirebaseFirestore.instanceFor(app: app);
        print("got firestore");
        return firestore;
      } catch (e) {
        FirebaseFirestore firestore =
        await FirebaseFirestore.instanceFor(app: Firebase.app(projectID));
        // UserLoggedInStream.getInstance().dataReload(true);
        //FirebaseFirestore firestore = await FirebaseFirestore.instanceFor(app: app);
        print(e);
        print("got firestore in exception");
        return firestore;
      }
    }

    Future<Widget>  getAllBusinessData()async{
      // [
      //   Permission.bluetooth, Permission.bluetoothConnect,Permission.location,
      //   Permission.bluetoothAdvertise,Permission.bluetoothScan,
      // ].request();

      print("getAllBusinessData");

      FirebaseFirestore firestore =  FirebaseFirestore.instance;

      try{
        SharedPreferences.getInstance().then((value) {
          if(value.containsKey("decimalPlace")){
            PrefferedDecimalPlaces = value.getInt("decimalPlace")!;
          }else{
            PrefferedDecimalPlaces = 1 ;
          }
        });
        print("trying listen");
         firestore.collection("featureSettings").doc("settings").snapshots().listen((event) {
          Map<String, dynamic> data = event.data() as Map<String, dynamic>;
          gallaryPhotoAdd = data["gallaryPhotoAdd"]!=null?data["gallaryPhotoAdd"]:false;
          deletePhoto = data["deletePhoto"]!=null? data["deletePhoto"]:false;
          firmwareUpdate = data["firmwareUpdate"]!=null? data["firmwareUpdate"]:false;
          canCustomerLogout = data["canCustomerLogout"]!=null?data["canCustomerLogout"]:false;
          shareLinkLive = data["shareLinkLive"]!=null?data["shareLinkLive"]:true;
        });
         firestore.collection("appTheme").doc("NjB1rWosBBfFfdbgU4cS").snapshots().listen((event) {
          Map<String, dynamic> data = event.data() as Map<String, dynamic>;
          darkTheme = data["darkTheme"]!=null?data["darkTheme"]:false;

        });


      }catch(e){
        print("ww");
        print(e);

      }
      

      FirebaseAuth auth =  FirebaseAuth.instance;
     
      Duration waitDuration   = Duration(milliseconds: 500);
      //   await  Future.delayed(waitDuration);
      QuerySnapshot userData = await  firestore.collection("users").where("uid", isEqualTo:auth.currentUser!.uid).get();
      print("user found "+ userData.docs.first.id);

      if (userData!=null && ( userData.docs.first.get("roleId") == RoleManager(rolId: '').CUSTOMER_USER_ROLE_ID  ||   userData.docs.first.get("roleId") == RoleManager(rolId: '').CUSTOMER_ADMIN_ROLE_ID) ){
      //https://us-central1-staht-connect-322113.cloudfunctions.net/updateEveryPhotoGrid


        try{

        String region = "europe-west2";
        isCustomerLoggedIn = true;
        // await  Future.delayed(waitDuration);
        print("user is a customer ");
        DocumentSnapshot customerData = await  firestore.collection("customers").doc(userData.docs.first.get("parentId")).get();
        // await  Future.delayed(waitDuration);
        var url = 'https://us-central1-staht-connect-322113.cloudfunctions.net/updateEveryPhotoGrid';
        http.post(Uri.parse(url),
          headers: <String, String>{
            'Content-Type': 'application/json; charset=UTF-8',
          },
          body: jsonEncode(<String, String>{
            "proejctID": customerData.get("projectId"),
          }),);
        Map<String, dynamic> data = customerData.data() as Map<String, dynamic>;


        print("Entering Check");
        if(data["region"]!=null && data["regionBucket"]!=null){
          String firestoreLocation = customerData.get("region");
          String id = customerData.get("projectId");
          region = firestoreLocation;
          print("Creating fb");
          print(id);
          FirebaseFirestore customerFirestore = await initCustomerFirebase(customerGCPprojectId:id );



          try{
            print("write aatempt this");
            await  customerFirestore.collection("projectDetails").add({"id":id});
            print("Database is ok.No need to setup");
          }catch(e){
            print("Failed to write data.Going to set");
            print(e);

              print("api hit starts");
              //await  addfirebase( projectID: id,);
              await Future.delayed(Duration(seconds: 1));
              await  addfirestore(region: firestoreLocation, uid: "", projectID: id,);
              addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);

              await  addfirestore(region: firestoreLocation, uid: "", projectID: id,);

              addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);



          }












          // print(id);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // await  Api(firestore:firestore).addfirestore(region: firestoreLocation, uid: "", projectID: id,);
          //
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
          // Api(firestore:firestore).addfirestoreRules(projectID: (id).trim(),);
        }else{
          print("Creating fb");
          String id = customerData.get("projectId");
          try{

            print("write aatempt 2");
            FirebaseFirestore customerFirestore = await initCustomerFirebase(customerGCPprojectId:id );
            await  customerFirestore.collection("projectDetails").add({"id":id});
            print("Write done. DB ok");
          }catch(e){
            print("Failed to write data.Going to set");
            print(e);
            if(true){
              print("api hit starts");
              //await  addfirebase( projectID: id,);
              await Future.delayed(Duration(seconds: 1));
              await  addfirestore(region: "europe-west2", uid: "", projectID: id,);
              addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);

              await  addfirestore(region: "europe-west2", uid: "", projectID: id,);

              addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
              // addfirestoreRules(projectID: (id).trim(),);
            }


          }
        }



        try{
          shareAbleWithOtherMembers = customerData.get("share");
        }catch(e){
          shareAbleWithOtherMembers = false;
        }
        try{
          storageBucket = customerData.get("regionBucket");
        }catch(e){
          shareAbleWithOtherMembers = false;
        }

        AppToast().show(message:shareAbleWithOtherMembers.toString() );

        // Map<String, dynamic> data = customerData.data() as Map<String, dynamic>;
        // shareAbleWithOtherMembers = data["share"]!=null? data["share"]:false;
        // Map<String, dynamic> data = customerData.data() as Map<String, dynamic>;
        // if( data["share"]!=null){
        //   shareAbleWithOtherMembers = data["share"];
        // }
        print("customer info  ");
        print("share status ");
        print(shareAbleWithOtherMembers);
        print(customerData);
        FirebaseFirestore customerFirestore = await  initCustomerFirebase(customerGCPprojectId:customerData.get("projectId") );
        // await  Future.delayed(waitDuration);
        print("customer firestore done");
        //UserLoggedInStream.getInstance().
        //FirebaseMessaging.instance.subscribeToTopic("All");
        // FirebaseMessaging.instance.subscribeToTopic(_auth.currentUser!.uid);
        // await  Future.delayed(waitDuration);
        //return {"profile": userData.docs.first,"customerId":userData.docs.first.get("parentId"),"customerName":userData.docs.first.get("prjectName"),"projct":};
        // return Scaffold(body: Center(child: Text("Done"),),);
        parentId =  userData.docs.first.get("parentId");



        return MyHomePage(locale: locale,
          profile: userData.docs.first,
          customerId:userData.docs.first.get("parentId"),
          customerName:customerData.get("prjectName"),
          customerFirestore: customerFirestore,
          projct: customerData.get("projectId"),
          auth: auth, title: '',region:region
        );
      }catch(e){
        print(e);
        UserLoggedInStream.getInstance().dataReload(true);
        return Scaffold(
          body: Container(
              child: Center(
                  child:
                  CircularProgressIndicator(color: ThemeManager().getDarkGrey3Color,))),
        );
        print(e);
        print("cach");
      }
      }else{
        width = MediaQuery.of(context).size.width;
        height = MediaQuery.of(context).size.height;
        //staht admin login
        isCustomerLoggedIn = false;
        return Container(color : Colors.white,child : SafeArea(child: Column(
          children: [
            ApplicationAppbar(). getAppbar(title: userData.docs.first.get("displayName",)),
            Container(margin: EdgeInsets.only(left:width*0.02,right: width*0.02 ),
              child: Column(children: [

              ],),
            ),
          ],
        )));



        GlobalKey<ScaffoldState> scaffoldKey = GlobalKey<ScaffoldState>();
        return Scaffold(
            key: scaffoldKey,
            appBar: AppBar(actions: [
              InkWell(onTap: (){
                auth.signOut();
              },child: Padding(
                padding: const EdgeInsets.all(15.0),
                child: Icon(Icons.logout),
              ),)
            ],
              leading: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Icon(
                  Icons.account_box_outlined,
                  color: Colors.white,
                ),
              ),
              title: Text(userData.docs.first.get("displayName")),
            ),
            body: Stack(
              children: [
                Padding(
                  padding: EdgeInsets.all(8.0),
                  child: Container(
                    width: MediaQuery.of(context).size.width,
                    height:
                    (MediaQuery.of(context).size.height -
                        160) ,
                    decoration: BoxDecoration(
                        borderRadius:
                        BorderRadius.circular(5),
                        border: Border.all(
                            width: 2,
                            color: Theme.of(context)
                                .primaryColor)),
                    child: Column(
                      mainAxisAlignment:
                      MainAxisAlignment.start,
                      children: [
                        ListTile(
                          title: Text(
                            "Connected Devices",
                            style: TextStyle(
                              color: Colors.blue,
                            ),
                          ),
                          leading: Icon(
                            Icons.add,
                            color: Colors.blue,
                          ),
                        ),
                        StreamBuilder<BluetoothState>(
                            stream:
                            FlutterBlue.instance.state,
                            initialData:
                            BluetoothState.unknown,
                            builder: (c, snapshot) {
                              final state = snapshot.data;
                              if (state ==
                                  BluetoothState.on) {
                                // return Text("Blutooth on");
                                return StreamBuilder<
                                    List<BluetoothDevice>>(
                                  stream: Stream.periodic(
                                      Duration(
                                          seconds: 0))
                                      .asyncMap((_) =>
                                  FlutterBlue.instance
                                      .connectedDevices),
                                  initialData: [],
                                  builder: (c, snapshot) {
                                    if (snapshot.hasData &&
                                        snapshot.data!.length >
                                            0) {
                                      return Column(
                                        children:
                                        snapshot.data!
                                            .map((d) =>
                                            ListTile(
                                              onTap:
                                                  () {},
                                              title: Text(
                                                  d.name),
                                              subtitle: Text(d
                                                  .id
                                                  .toString()),
                                              trailing:
                                              StreamBuilder<BluetoothDeviceState>(
                                                stream:
                                                d.state,
                                                initialData:
                                                BluetoothDeviceState.disconnected,
                                                builder:
                                                    (c, snapshot) {
                                                  if (snapshot.data ==
                                                      BluetoothDeviceState.connected) {
                                                    return InkWell(
                                                      onTap: () {
                                                        Navigator.of(context).push(MaterialPageRoute(builder: (context) {
                                                          d.connect(autoConnect: true);
                                                          return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance,
                                                          //  userBody: userData.docs.first,
                                                            device: d, auth: auth,);
                                                          //return DeviceScreenLessDetails(r.device);
                                                        }));
                                                      },
                                                      child: Text(
                                                        "Open Settings",
                                                        style: TextStyle(color: Theme.of(context).primaryColor),
                                                      ),
                                                    );
                                                  }
                                                  return Text(snapshot.data.toString());
                                                },
                                              ),
                                            ))
                                            .toList(),
                                      );
                                    } else {
                                      return ListTile(
                                        onTap: () {

                                        },
                                        title: Text(
                                            "No Device is Connected"),

                                      );
                                    }
                                  },
                                );
                              }
                              return ListTile(
                                title:
                                Text("Turn on Blutooth"),
                                trailing: Icon(
                                  Icons.bluetooth_disabled,
                                  color: Theme.of(context)
                                      .primaryColor,
                                ),
                              );
                              //return BluetoothOffScreen(state: state);
                            }),
                      ],
                    ),
                  ),
                ),
                Align(
                  alignment: Alignment.bottomCenter,
                  child: InkWell(onTap: (){
                    FlutterBlue.instance
                        .startScan(
                        timeout: Duration(
                            seconds:
                            4));
                    showDialog<void>(
                        context:
                        context,
                        builder:
                            (contextD) =>
                            SimpleDialog(
                              children: [
                                StreamBuilder<List<ScanResult>>(
                                  stream: FlutterBlue.instance.scanResults,
                                  initialData: [],
                                  builder: (c, snapshot) {
                                    //  updateData(snapshot.data);
                                    FirebaseFirestore firestore;
                                    //  Database(firestore: firestore).addData(snapshot.data);

                                    return Column(
                                      children: snapshot.data!
                                          .map(
                                            (r) => ScanResultTile(
                                          result: r,
                                          onTap: () {
                                            r.device.connect(autoConnect: false).then((value) async {
                                              //Navigator.pop(context);
                                              print("just connected and started discovering services");
                                              await r.device.discoverServices();

                                              List<BluetoothService> allservice = await r.device.discoverServices();
                                              print("a X" + allservice.length.toString());
                                              if (allservice.length > 0) {
                                                print("b X" + allservice.length.toString());
                                                //find services
                                                dynamic bleCharacteristics = await OsDependentSettings().getReadWriteCharacters(device: r.device);

                                                BluetoothCharacteristic characteristicWritePurpose = bleCharacteristics["write"];
                                                BluetoothCharacteristic characteristicReadPurpose = bleCharacteristics["read"];
                                                String iceSerial = "";
                                                String Serial = "";
                                                getSerial2() async {
                                                  print("c X");
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                  List<int> responseAray2 = await characteristicReadPurpose.read();
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                  responseAray2 = await characteristicReadPurpose.read();
                                                  String responseInString = utf8.decode(responseAray2);
                                                  Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                  if (Serial.length == 0) {
                                                    getSerial2();
                                                  } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
                                                    print("g X");
                                                    //  lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device,);
                                                  } else {
                                                    print("h X");

                                                    // set up the button
                                                    Widget okButton = FlatButton(
                                                      child: Text("OK"),
                                                      onPressed: () {},
                                                    );

                                                    // set up the AlertDialog
                                                    AlertDialog alert = AlertDialog(
                                                      title: Text("SN and/or ICE SN is Default"),
                                                      content: Column(
                                                        children: [
                                                          InkWell(
                                                            onTap: () {
                                                              TextEditingController controllerIce = new TextEditingController();

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                    builder: (context) => Scaffold(
                                                                      appBar: AppBar(
                                                                        title: Text("Update ICE SN"),
                                                                      ),
                                                                      body: Wrap(
                                                                        children: [
                                                                          Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: TextField(
                                                                              controller: controllerIce,
                                                                            ),
                                                                          ),
                                                                          InkWell(
                                                                            onTap: () async {
                                                                              String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                              print("command " + commandToWrite);

                                                                              try {
                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                Navigator.pop(context);
                                                                                Navigator.pop(context);
                                                                                iceSerial = controllerIce.text;

                                                                                //return true;
                                                                              } catch (e) {
                                                                                // return false;
                                                                              }
                                                                            },
                                                                            child: Padding(
                                                                              padding: const EdgeInsets.all(8.0),
                                                                              child: Card(
                                                                                color: Theme.of(context).primaryColor,
                                                                                child: Center(
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Text(
                                                                                      "Save",
                                                                                      style: TextStyle(color: Colors.white),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    )),
                                                              );
                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                            },
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ListTile(
                                                                title: Text(iceSerial),
                                                                subtitle: Text("Change  ICE SN"),
                                                              ),
                                                            ),
                                                          ),
                                                          InkWell(
                                                            onTap: () {
                                                              TextEditingController controller = new TextEditingController();

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                    builder: (context) => Scaffold(
                                                                      appBar: AppBar(
                                                                        title: Text("Update  SN"),
                                                                      ),
                                                                      body: Wrap(
                                                                        children: [
                                                                          Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: TextField(
                                                                              controller: controller,
                                                                            ),
                                                                          ),
                                                                          InkWell(
                                                                            onTap: () async {
                                                                              String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                              print("command " + commandToWrite);

                                                                              try {
                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                Navigator.pop(context);
                                                                                Navigator.pop(context);

                                                                                Serial = controller.text;

                                                                                // return true;
                                                                              } catch (e) {
                                                                                // return false;
                                                                              }
                                                                            },
                                                                            child: Padding(
                                                                              padding: const EdgeInsets.all(8.0),
                                                                              child: Card(
                                                                                color: Theme.of(context).primaryColor,
                                                                                child: Center(
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Text(
                                                                                      "Save",
                                                                                      style: TextStyle(color: Colors.white),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    )),
                                                              );
                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                            },
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ListTile(
                                                                title: Text(Serial),
                                                                subtitle: Text("Change  SN"),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                      actions: [
                                                        okButton,
                                                      ],
                                                    );

                                                    // show the dialog
                                                    // showDialog(
                                                    //   context: context,
                                                    //   builder: (BuildContext context) {
                                                    //     return alert;
                                                    //   },
                                                    // );

                                                    /*


                                                                                     scaffoldKey.currentState.showBottomSheet((context) => Column(
                                                                                       children: [
                                                                                         ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);

                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
                                                                                         ),),
                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);

                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
                                                                                         ),),


                                                                                       ],
                                                                                     ));

                                                                                      */

                                                    GlobalKey<ScaffoldState> scaffoldKey2 = GlobalKey<ScaffoldState>();
                                                    Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                            builder: (context) => Scaffold(
                                                                key: scaffoldKey2,
                                                                appBar: AppBar(),
                                                                body: Column(
                                                                  children: [
                                                                    ListTile(
                                                                      title: Text("SN and/or ICE SN is Default."),
                                                                      tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
                                                                    ),
                                                                    InkWell(
                                                                      onTap: () {
                                                                        TextEditingController controllerIce = new TextEditingController();

                                                                        Navigator.push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                              builder: (context) => Scaffold(
                                                                                appBar: AppBar(
                                                                                  title: Text("Update ICE SN"),
                                                                                ),
                                                                                body: Wrap(
                                                                                  children: [
                                                                                    Padding(
                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                      child: TextField(
                                                                                        controller: controllerIce,
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () async {
                                                                                        String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                                        print("command " + commandToWrite);

                                                                                        try {
                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                          Navigator.pop(context);
                                                                                          Navigator.pop(context);
                                                                                          iceSerial = controllerIce.text;

                                                                                          //return true;
                                                                                        } catch (e) {
                                                                                          // return false;
                                                                                        }
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Card(
                                                                                          color: Theme.of(context).primaryColor,
                                                                                          child: Center(
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: Text(
                                                                                                "Save",
                                                                                                style: TextStyle(color: Colors.white),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )),
                                                                        );
                                                                        /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                      },
                                                                      child: Padding(
                                                                        padding: const EdgeInsets.all(8.0),
                                                                        child: ListTile(
                                                                          title: Text(iceSerial),
                                                                          subtitle: Text("Change  ICE SN"),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    InkWell(
                                                                      onTap: () {
                                                                        TextEditingController controller = new TextEditingController();

                                                                        Navigator.push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                              builder: (context) => Scaffold(
                                                                                appBar: AppBar(
                                                                                  title: Text("Update  SN"),
                                                                                ),
                                                                                body: Wrap(
                                                                                  children: [
                                                                                    Padding(
                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                      child: TextField(
                                                                                        controller: controller,
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () async {
                                                                                        String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                        print("command " + commandToWrite);

                                                                                        try {
                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                          Navigator.pop(context);
                                                                                          Navigator.pop(context);
                                                                                          Serial = controller.text;

                                                                                          // return true;
                                                                                        } catch (e) {
                                                                                          // return false;
                                                                                        }
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Card(
                                                                                          color: Theme.of(context).primaryColor,
                                                                                          child: Center(
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: Text(
                                                                                                "Save",
                                                                                                style: TextStyle(color: Colors.white),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )),
                                                                        );
                                                                        /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                      },
                                                                      child: Padding(
                                                                        padding: const EdgeInsets.all(8.0),
                                                                        child: ListTile(
                                                                          //title: Text(Serial), subtitle:userData.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
                                                                          title: Text(Serial), subtitle:userData.docs.first.get("roleId") ==RoleManager(rolId: '').CALIBRATOR_ROLE_ID  ? Container(width: 0,height: 0,): Text("Change SN"),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ))));
                                                  }
                                                }

                                                getICESerial2() async {
                                                  print("d X");
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                  List<int> responseAray2 = await characteristicReadPurpose.read();
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                  responseAray2 = await characteristicReadPurpose.read();
                                                  String responseInString = utf8.decode(responseAray2);
                                                  iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                  if (iceSerial.length == 0) {
                                                    print("e X");
                                                    getICESerial2();
                                                  }
                                                  if (Serial.length == 0) {
                                                    print("e X");
                                                    getSerial2();
                                                  } else {
                                                    //lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
                                                  }
                                                }

                                                getSerial() async {
                                                  print("c X");
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                  List<int> responseAray2 = await characteristicReadPurpose.read();
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                  responseAray2 = await characteristicReadPurpose.read();
                                                  String responseInString = utf8.decode(responseAray2);
                                                  Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                  if (Serial.length == 0) {
                                                    getSerial();
                                                  }
                                                  if (iceSerial.length == 0) {
                                                    getICESerial2();
                                                  } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
                                                    print("g X");
                                                    // lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
                                                  } else {
                                                    print("h X");

                                                    // set up the button
                                                    Widget okButton = FlatButton(
                                                      child: Text("OK"),
                                                      onPressed: () {},
                                                    );

                                                    // set up the AlertDialog
                                                    AlertDialog alert = AlertDialog(
                                                      title: Text("SN and/or ICE SN is Default"),
                                                      content: Column(
                                                        children: [
                                                          InkWell(
                                                            onTap: () {
                                                              TextEditingController controller = new TextEditingController();

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                    builder: (context) => Scaffold(
                                                                      appBar: AppBar(
                                                                        title: Text("Update ICE SN"),
                                                                      ),
                                                                      body: Wrap(
                                                                        children: [
                                                                          Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: TextField(
                                                                              controller: controller,
                                                                            ),
                                                                          ),
                                                                          InkWell(
                                                                            onTap: () async {
                                                                              String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                              print("command " + commandToWrite);

                                                                              try {
                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                Navigator.pop(context);
                                                                                Navigator.pop(context);

                                                                                //return true;
                                                                              } catch (e) {
                                                                                //return false;
                                                                              }
                                                                            },
                                                                            child: Padding(
                                                                              padding: const EdgeInsets.all(8.0),
                                                                              child: Card(
                                                                                color: Theme.of(context).primaryColor,
                                                                                child: Center(
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Text(
                                                                                      "Save",
                                                                                      style: TextStyle(color: Colors.white),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    )),
                                                              );
                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                            },
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ListTile(
                                                                title: Text(iceSerial),
                                                                subtitle: Text("Change  SN"),
                                                              ),
                                                            ),
                                                          ),
                                                          InkWell(
                                                            onTap: () {
                                                              TextEditingController controller = new TextEditingController();

                                                              Navigator.push(
                                                                context,
                                                                MaterialPageRoute(
                                                                    builder: (context) => Scaffold(
                                                                      appBar: AppBar(
                                                                        title: Text("Update  SN"),
                                                                      ),
                                                                      body: Wrap(
                                                                        children: [
                                                                          Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: TextField(
                                                                              controller: controller,
                                                                            ),
                                                                          ),
                                                                          InkWell(
                                                                            onTap: () async {
                                                                              String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                              print("command " + commandToWrite);

                                                                              try {
                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                Navigator.pop(context);
                                                                                Navigator.pop(context);

                                                                                // return true;
                                                                              } catch (e) {
                                                                                // return false;
                                                                              }
                                                                            },
                                                                            child: Padding(
                                                                              padding: const EdgeInsets.all(8.0),
                                                                              child: Card(
                                                                                color: Theme.of(context).primaryColor,
                                                                                child: Center(
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Text(
                                                                                      "Save",
                                                                                      style: TextStyle(color: Colors.white),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ),
                                                                            ),
                                                                          ),
                                                                        ],
                                                                      ),
                                                                    )),
                                                              );
                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                            },
                                                            child: Padding(
                                                              padding: const EdgeInsets.all(8.0),
                                                              child: ListTile(
                                                                title: Text(iceSerial),
                                                               // subtitle:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change Ice SN"):Container(width: 0,height: 0,),
                                                                subtitle:userData.docs.first.get("roleId") ==RoleManager(rolId: '').CALIBRATOR_ROLE_ID  ? Container(width: 0,height: 0,): Text("Change Ice SN"),
                                                              ),
                                                            ),
                                                          ),
                                                        ],
                                                      ),
                                                      actions: [
                                                        okButton,
                                                      ],
                                                    );

                                                    // show the dialog
                                                    // showDialog(
                                                    //   context: context,
                                                    //   builder: (BuildContext context) {
                                                    //     return alert;
                                                    //   },
                                                    // );

/*
                                                                                     scaffoldKey.currentState.showBottomSheet((context) =>Column(
                                                                                       children: [
                                                                                         ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           scaffoldKey.currentState.showBottomSheet((context) => Scaffold(body: Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                   controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getICESerial2();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),));
                                                                                           /*

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);
                                                                                                     getICESerial2();
                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           */
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change  ICE SN"),),
                                                                                         ),),
                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();
                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>  Scaffold(body: Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                   controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getICESerial2();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),));
                                                                                           /*

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);
                                                                                                     getICESerial2();
                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           */
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(Serial),subtitle: Text("Change SN"),),
                                                                                         ),),


                                                                                       ],
                                                                                     ) );

 */
                                                    /*

                                                                                     showBottomSheet(
                                                                                         context: context,
                                                                                         builder: (context) =>Scaffold(appBar: AppBar(),body: Column(
                                                                                           children: [
                                                                                             ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                             InkWell(onTap: (){
                                                                                               TextEditingController controller = new TextEditingController();

                                                                                               Navigator.push(
                                                                                                 context,
                                                                                                 MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                                   children: [
                                                                                                     Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: TextField(
                                                                                                         controller: controller,
                                                                                                       ),
                                                                                                     ),
                                                                                                     InkWell(onTap: () async {
                                                                                                       String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                       print("command " + commandToWrite);

                                                                                                       try {
                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                         Navigator.pop(context);
                                                                                                         getICESerial2();
                                                                                                         return true;
                                                                                                       } catch (e) {
                                                                                                         return false;
                                                                                                       }

                                                                                                     },
                                                                                                       child: Padding(
                                                                                                         padding: const EdgeInsets.all(8.0),
                                                                                                         child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                                           child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                         ),),),
                                                                                                       ),
                                                                                                     ),
                                                                                                   ],
                                                                                                 ),)),
                                                                                               );
                                                                                               /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                             },child: Padding(
                                                                                               padding: const EdgeInsets.all(8.0),
                                                                                               child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
                                                                                             ),),
                                                                                             InkWell(onTap: (){
                                                                                               TextEditingController controller = new TextEditingController();

                                                                                               Navigator.push(
                                                                                                 context,
                                                                                                 MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                                   children: [
                                                                                                     Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: TextField(
                                                                                                         controller: controller,
                                                                                                       ),
                                                                                                     ),
                                                                                                     InkWell(onTap: () async {
                                                                                                       String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                       print("command " + commandToWrite);

                                                                                                       try {
                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                         Navigator.pop(context);
                                                                                                         getICESerial2();
                                                                                                         return true;
                                                                                                       } catch (e) {
                                                                                                         return false;
                                                                                                       }

                                                                                                     },
                                                                                                       child: Padding(
                                                                                                         padding: const EdgeInsets.all(8.0),
                                                                                                         child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                                           child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                         ),),),
                                                                                                       ),
                                                                                                     ),
                                                                                                   ],
                                                                                                 ),)),
                                                                                               );
                                                                                               /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                             },child: Padding(
                                                                                               padding: const EdgeInsets.all(8.0),
                                                                                               child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
                                                                                             ),),


                                                                                           ],
                                                                                         )));

                                                                                      */

                                                    Navigator.push(
                                                        context,
                                                        MaterialPageRoute(
                                                            builder: (context) => Scaffold(
                                                                appBar: AppBar(),
                                                                body: Column(
                                                                  children: [
                                                                    ListTile(
                                                                      title: Text("SN and/or ICE SN is Default."),
                                                                      tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
                                                                    ),
                                                                    InkWell(
                                                                      onTap: () {
                                                                        TextEditingController controllerICe = new TextEditingController();

                                                                        Navigator.push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                              builder: (context) => Scaffold(
                                                                                appBar: AppBar(
                                                                                  title: Text("Update ICE SN"),
                                                                                ),
                                                                                body: Wrap(
                                                                                  children: [
                                                                                    Padding(
                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                      child: TextField(
                                                                                        controller: controllerICe,
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () async {
                                                                                        String commandToWrite = COMMAND_INDEX_1_SET + controllerICe.text + COMMAND_SUFFIX;
                                                                                        print("command " + commandToWrite);

                                                                                        try {
                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                          Navigator.pop(context);
                                                                                          Navigator.pop(context);
                                                                                          iceSerial = controllerICe.text;
                                                                                          getICESerial2();
                                                                                          // return true;
                                                                                        } catch (e) {
                                                                                          //return false;
                                                                                        }
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Card(
                                                                                          color: Theme.of(context).primaryColor,
                                                                                          child: Center(
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: Text(
                                                                                                "Save",
                                                                                                style: TextStyle(color: Colors.white),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )),
                                                                        );

                                                                        /*
                                                                                               scaffoldKey.currentState.showBottomSheet((context) =>Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);

                                                                                            */
                                                                      },
                                                                      child: Padding(
                                                                        padding: const EdgeInsets.all(8.0),
                                                                        child: ListTile(
                                                                          title: Text(iceSerial),
                                                                          subtitle: Text("Change  SN"),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                    InkWell(
                                                                      onTap: () {
                                                                        TextEditingController controller = new TextEditingController();

                                                                        Navigator.push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                              builder: (context) => Scaffold(
                                                                                appBar: AppBar(
                                                                                  title: Text("Update  SN"),
                                                                                ),
                                                                                body: Wrap(
                                                                                  children: [
                                                                                    Padding(
                                                                                      padding: const EdgeInsets.all(8.0),
                                                                                      child: TextField(
                                                                                        controller: controller,
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () async {
                                                                                        String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                        print("command " + commandToWrite);

                                                                                        try {
                                                                                          await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                          Serial = controller.text;
                                                                                          Navigator.pop(context);
                                                                                          Navigator.pop(context);
                                                                                          getICESerial2();
                                                                                          //return true;
                                                                                        } catch (e) {
                                                                                          //return false;
                                                                                        }
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Card(
                                                                                          color: Theme.of(context).primaryColor,
                                                                                          child: Center(
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: Text(
                                                                                                "Save",
                                                                                                style: TextStyle(color: Colors.white),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )),
                                                                        );
                                                                        /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                      },
                                                                      child: Padding(
                                                                        padding: const EdgeInsets.all(8.0),
                                                                        child: ListTile(
                                                                          title: Text(Serial),
                                                                          //subtitle:snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
                                                                          subtitle:userData.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ? Container(width: 0,height: 0,): Text("Change SN"),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ],
                                                                ))));
                                                  }
                                                }

                                                //get ice
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                List<int> responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                responseAray2 = await characteristicReadPurpose.read();
                                                String responseInString = utf8.decode(responseAray2);
                                                iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);

                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                responseAray2 = await characteristicReadPurpose.read();
                                                responseInString = utf8.decode(responseAray2);
                                                iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);

                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                responseAray2 = await characteristicReadPurpose.read();
                                                responseInString = utf8.decode(responseAray2);
                                                iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                //end ice

                                                //get sl
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                responseInString = utf8.decode(responseAray2);
                                                Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                responseInString = utf8.decode(responseAray2);
                                                Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                responseAray2 = await characteristicReadPurpose.read();
                                                responseInString = utf8.decode(responseAray2);
                                                Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                //end sl

                                                // scaffoldKey.currentState.showBottomSheet((context) => Scaffold(
                                                //       body: Column(
                                                //         children: [],
                                                //       ),
                                                //     ));
                                                GlobalKey<ScaffoldState> scaffoldKey20 = GlobalKey<ScaffoldState>();
                                                Navigator.push(
                                                    context,
                                                    MaterialPageRoute(
                                                        builder: (context) =>Scaffold(key: scaffoldKey20,appBar: AppBar(),
                                                          body: Column(
                                                            children: [
                                                              InkWell(
                                                                onTap: () {
                                                                  //userData.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID


                                                                  if( userData.docs.first.get("roleId") != RoleManager(rolId: '').CALIBRATOR_ROLE_ID  ){
                                                                    TextEditingController controllerIce = new TextEditingController();

                                                                    Navigator.push(
                                                                      context,
                                                                      MaterialPageRoute(
                                                                          builder: (context) => Scaffold(
                                                                            appBar: AppBar(
                                                                              title: Text("Update ICE SN"),
                                                                            ),
                                                                            body: Wrap(
                                                                              children: [
                                                                                Padding(
                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                  child: TextField(
                                                                                    controller: controllerIce,
                                                                                  ),
                                                                                ),
                                                                                InkWell(
                                                                                  onTap: () async {
                                                                                    String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                                    print("command " + commandToWrite);

                                                                                    try {
                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                      Navigator.pop(context);
                                                                                      // Navigator.pop(context);
                                                                                      iceSerial = controllerIce.text;
                                                                                      Index1ValueStream.getInstance().dataReload( controllerIce.text);

                                                                                      //return true;
                                                                                    } catch (e) {
                                                                                      // return false;
                                                                                    }
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Card(
                                                                                      color: Theme.of(context).primaryColor,
                                                                                      child: Center(
                                                                                        child: Padding(
                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                          child: Text(
                                                                                            "Save",
                                                                                            style: TextStyle(color: Colors.white),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          )),
                                                                    );
                                                                  }


                                                                },
                                                                child: Padding(
                                                                  padding: const EdgeInsets.all(8.0),
                                                                  child: ListTile(
                                                                    title: StreamBuilder(
                                                                        stream: Index1ValueStream.getInstance().outData,
                                                                        initialData: iceSerial,
                                                                        builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
                                                                          if (snapshot.hasData) {
                                                                            return Text(snapshot.data!);
                                                                          } else {
                                                                            return Text("Please wait");
                                                                          }
                                                                        }),
                                                                    subtitle: Text("ICE Serial"),
                                                                      //snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID

                                                                    trailing: userData.docs.first.get("roleId") != RoleManager(rolId: '').CALIBRATOR_ROLE_ID? Container(width: 0,height: 0,): Icon(Icons.edit),
                                                                  ),
                                                                ),
                                                              ),
                                                              InkWell(
                                                                onTap: () {
                                                                  //snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID
                                                                  //
                                                                  if(userData.docs.first.get("roleId") != RoleManager(rolId: '').CALIBRATOR_ROLE_ID ){
                                                                    TextEditingController controller = new TextEditingController();

                                                                    Navigator.push(
                                                                      context,
                                                                      MaterialPageRoute(
                                                                          builder: (context) => Scaffold(
                                                                            appBar: AppBar(
                                                                              title: Text("Update  SN"),
                                                                            ),
                                                                            body: Wrap(
                                                                              children: [
                                                                                Padding(
                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                  child: TextField(
                                                                                    controller: controller,
                                                                                  ),
                                                                                ),
                                                                                InkWell(
                                                                                  onTap: () async {
                                                                                    String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                    print("command " + commandToWrite);

                                                                                    try {
                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                      Navigator.pop(context);
                                                                                      Index2ValueStream.getInstance().dataReload( controller.text);
                                                                                      //Navigator.pop(context);

                                                                                      Serial = controller.text;

                                                                                      // return true;
                                                                                    } catch (e) {
                                                                                      // return false;
                                                                                    }
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: Card(
                                                                                      color: Theme.of(context).primaryColor,
                                                                                      child: Center(
                                                                                        child: Padding(
                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                          child: Text(
                                                                                            "Save",
                                                                                            style: TextStyle(color: Colors.white),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                          )),
                                                                    );
                                                                  }

                                                                  /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                },
                                                                child: Padding(
                                                                  padding: const EdgeInsets.all(8.0),
                                                                  child: ListTile(
                                                                    title: StreamBuilder(
                                                                        stream: Index2ValueStream.getInstance().outData,
                                                                        initialData: Serial,
                                                                        builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
                                                                          if (snapshot.hasData) {
                                                                            return Text(snapshot.data!);
                                                                          } else {
                                                                            return Text("Please wait");
                                                                          }
                                                                        }),
                                                                    subtitle: Text("Serial"),
                                                                    trailing:userData.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID? Container(width: 0,height: 0,): Icon(Icons.edit),
                                                                  ),
                                                                ),
                                                              ),

                                                              //   Directory_1_view_edit(
                                                              //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                              //   bluetoothCharacteristicRead: characteristicReadPurpose,
                                                              // ),
                                                              //
                                                              //   Directory_2_view_edit(
                                                              //     bluetoothCharacteristicWrite:characteristicWritePurpose,
                                                              //     bluetoothCharacteristicRead: characteristicReadPurpose,
                                                              //   ),
                                                              // Directory_1_view_edit(
                                                              //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                              //   bluetoothCharacteristicRead:characteristicReadPurpose,
                                                              // ),
                                                              //
                                                              // Directory_2_view_edit(
                                                              //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                              //   bluetoothCharacteristicRead:characteristicReadPurpose,
                                                              // ),
                                                              Directory_3_view_edit(
                                                                bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                bluetoothCharacteristicRead:characteristicReadPurpose,
                                                              ),
                                                              Directory_4_view_edit(
                                                                bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                bluetoothCharacteristicRead:characteristicReadPurpose,
                                                              ),
                                                              Directory_9_view_edit(
                                                                bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                bluetoothCharacteristicRead:characteristicReadPurpose,
                                                              ),
                                                              ListTile(
                                                                title: Text(
                                                                  "Sequential Write",
                                                                  style: TextStyle(color: Colors.blue),
                                                                ),
                                                                subtitle: StreamBuilder<double>(
                                                                    stream: ImageWriteStatusStream.getInstance().outData,
                                                                    // async work
                                                                    builder: (BuildContext context,
                                                                        AsyncSnapshot<double> snapshot) {
                                                                      if(snapshot.hasData){
                                                                        return LinearProgressIndicator(
                                                                          value: snapshot.data,
                                                                        );
                                                                      }else{
                                                                        return LinearProgressIndicator(
                                                                          value: 0,
                                                                        );
                                                                      }
                                                                    }),
                                                                trailing: RaisedButton(
                                                                  child: Text("Gallary"),
                                                                  onPressed:(){
                                                                    //image write stopped
                                                                   writeImageGallary(r.device,characteristicReadPurpose,characteristicWritePurpose);
                                                                  },
                                                                ),
                                                              ),
                                                              // InkWell(
                                                              //   onTap: () {
                                                              //     Navigator.push(
                                                              //       context,
                                                              //       MaterialPageRoute(
                                                              //           builder: (context) =>
                                                              //               CalibartionStep4(profile: widget.userBody,
                                                              //                 calibAdmin:"admin",
                                                              //                 firestore: widget
                                                              //                     .firestore,
                                                              //                 device:
                                                              //                 widget.device,
                                                              //                 characteristicWrite:
                                                              //                 allService[3]
                                                              //                     .characteristics[0],
                                                              //                 characteristicRead:
                                                              //                 allService[3]
                                                              //                     .characteristics[1],
                                                              //                 productInfo:
                                                              //                 productInfo,
                                                              //               )),
                                                              //     );
                                                              //   },
                                                              //   child: Padding(
                                                              //     padding:
                                                              //     const EdgeInsets.fromLTRB(
                                                              //         8, 25, 8, 0),
                                                              //     child: Container(
                                                              //       decoration: BoxDecoration(
                                                              //           borderRadius:
                                                              //           BorderRadius.all(
                                                              //               Radius.circular(
                                                              //                   3)),
                                                              //           color: Theme.of(context)
                                                              //               .primaryColor),
                                                              //       child: Center(
                                                              //         child: Padding(
                                                              //           padding:
                                                              //           const EdgeInsets
                                                              //               .all(15.0),
                                                              //           child: Text(
                                                              //             "Next",
                                                              //             style: TextStyle(
                                                              //                 color:
                                                              //                 Colors.white),
                                                              //           ),
                                                              //         ),
                                                              //       ),
                                                              //     ),
                                                              //   ),
                                                              // ),
                                                              InkWell(
                                                                onTap: () {
                                                                  Navigator.of(context).push(MaterialPageRoute(builder: (context) {
                                                                    try{
                                                                      r.device.connect(autoConnect: true);
                                                                    }catch(e){

                                                                    }
                                                                    return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance,
                                                                     // userBody: userData.docs.first,
                                                                      device: r.device, auth: auth,);
                                                                    //return DeviceScreenLessDetails(r.device);
                                                                  }));
                                                                },
                                                                child: Padding(
                                                                  padding: const EdgeInsets.all(8.0),
                                                                  child: Container(decoration: BoxDecoration(
                                                                    color: Theme.of(context).primaryColor,

                                                                  ),
                                                                    child: Padding(
                                                                      padding: const EdgeInsets.all(15.0),
                                                                      child: Text(
                                                                        "Advanced settings",
                                                                        style: TextStyle(color:Colors.white),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ),
                                                              InkWell(
                                                                onTap: () {
                                                                //  lookUpBoard(getCalibratorId(userData.docs.first),Serial, iceSerial, scaffoldKey20, characteristicReadPurpose, characteristicWritePurpose, r.device,context,userData.docs.first,context);
                                                                },
                                                                child: Card(
                                                                  color: Colors.blue,
                                                                  child: Container(
                                                                      child: Center(
                                                                          child: Padding(
                                                                            padding: const EdgeInsets.all(8.0),
                                                                            child: Text(
                                                                              userData.docs.first.get("roleId")==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID?"Assign Customer":"Search in System",
                                                                              style: TextStyle(color: Colors.white),
                                                                            ),
                                                                          ))),
                                                                ),
                                                              ),
                                                            ],
                                                          ),
                                                        )));


                                                // scaffoldKey.currentState.showBottomSheet((context) => );

                                                getICESerial() async {
                                                  print("d X");
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                  List<int> responseAray2 = await characteristicReadPurpose.read();
                                                  await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                  responseAray2 = await characteristicReadPurpose.read();
                                                  String responseInString = utf8.decode(responseAray2);
                                                  iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                  if (iceSerial.length == 0) {
                                                    print("e X");
                                                    getICESerial();
                                                  } else {
                                                    print("f X");
                                                    getSerial();
                                                  }
                                                }

                                                // getICESerial();
                                              } else {
                                                print("i X");
                                                print("service side " + allservice.length.toString());
                                              }
                                            });
                                            //return Text("ok");
                                            //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                            //return PerformTestPageActivity(device: r.device, project: "", index2: '', testDuration: 0,);
                                            // Navigator.pop(context);
                                            //return ConnectedDevicePage(device: r.device);
                                            //return DeviceScreenLessDetails(r.device);
                                          },
                                        ),
                                        //     (r) => ScanResultTile(
                                        //   result: r,
                                        //   onTap: () => Navigator.of(context)
                                        //       .push(MaterialPageRoute(builder: (context) {
                                        //     r.device.connect(autoConnect: false);
                                        //     //return Text("ok");
                                        //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                        //     return   PerformTestPage(device: r.device,project:"o",);
                                        //     Navigator.pop(context);
                                        //     //return ConnectedDevicePage(device: r.device);
                                        //     //return DeviceScreenLessDetails(r.device);
                                        //   })),
                                        // ),
                                      )
                                          .toList(),
                                    );
                                  },
                                )
                              ],
                            ));
                  },
                    child: Padding(
                      padding: EdgeInsets.all(8.0),
                      child: Container(
                        height: 50,
                        decoration: BoxDecoration(
                            borderRadius:
                            BorderRadius.circular(5),
                            border: Border.all(
                                width: 2,
                                color: Theme.of(context)
                                    .primaryColor)),
                        child: Center(
                          child: Text("Connect a new device"),
                        ),
                      ),
                    ),
                  ),
                ),
              ],
            ));
        return Scaffold(appBar: AppBar(actions: [
          InkWell(onTap: (){
            FirebaseAuth.instance.signOut();
          },child:Icon(Icons.logout) ,)
        ],),body:  Center(child: Text("Admin or collaborator logged in"),),);
      }
    }


    return  FutureBuilder<Widget>(
      // Initialize FlutterFire:
      //  future: Firebase.initializeApp(),
        future: getAllBusinessData(),
        builder: (BuildContext context, AsyncSnapshot<Widget>snapshotBusinessData) {
          if (snapshotBusinessData.hasData) {
           // return Scaffold(body: Center(child: Text("OK"),),);
            return snapshotBusinessData.data!;


          } else {
            return Scaffold(
              body: Container(
                  child: Center(
                      child:
                      CircularProgressIndicator(color: Colors.orange,))),
            );
          }
        });
  }

  Future<void> getPerm() async {

      const platform = MethodChannel('samples.flutter.dev/battery');
      try {
         platform.invokeMethod('getBatteryLevel');
      } on PlatformException catch (e) {
        print(e);
      }


      try {
         platform.invokeMethod('getBatteryLevel2');
      } on PlatformException catch (e) {
        print(e);
      }

      return;






  }
}

class _RootState extends State<Root> {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  Future<FirebaseFirestore> initCustomerFirebase(String projectID) async {
    FirebaseApp app;

    try {
      app = await Firebase.initializeApp(
          name: projectID,
          options: FirebaseOptions(
            // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
            appId: Platform.isAndroid
                ?Config().defaultAppIdAndroid
                : Config().defaultAppIdIOS,
            apiKey: Config().apiKey,
            messagingSenderId: '',
            projectId: projectID,
            //storageBucket:"gs://"+projectID+".appspot.com",
          ));
      FirebaseFirestore firestore =
          await FirebaseFirestore.instanceFor(app: app);
      return firestore;
    } catch (e) {
      FirebaseFirestore firestore =
          await FirebaseFirestore.instanceFor(app: Firebase.app(projectID));
      //FirebaseFirestore firestore = await FirebaseFirestore.instanceFor(app: app);
      return firestore;
    }
  }
  Future<firebase_storage.FirebaseStorage> initCustomerFireStorage(String projectID) async {
    FirebaseApp app;

    try {
      app = await Firebase.initializeApp(
          name: projectID,
          options: FirebaseOptions(
            // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
            appId: Platform.isAndroid
                ?Config().defaultAppIdAndroid
                : Config().defaultAppIdIOS,
            apiKey: Config().apiKey,
            messagingSenderId: '',
            projectId: projectID,
            //storageBucket:"gs://"+projectID+".appspot.com",
          ));
      firebase_storage.FirebaseStorage storage=  firebase_storage.FirebaseStorage.instanceFor(app: app);

      return storage;
    } catch (e) {


      firebase_storage.FirebaseStorage storage=  firebase_storage.FirebaseStorage.instanceFor(app: Firebase.app(projectID));

      //FirebaseFirestore firestore = await FirebaseFirestore.instanceFor(app: app);
      return storage;
    }
  }
  @override
  Widget build(BuildContext context) {
    height = MediaQuery.of(context).size.height;
    width = MediaQuery.of(context).size.width;
    //UserLoggedInStream
    return StreamBuilder(
        stream: UserLoggedInStream.getInstance().outData,
        builder: (BuildContext context, AsyncSnapshot<bool> snapshot) {
          print("auth changed");
          return StreamBuilder(
              stream: FirebaseAuth.instance.authStateChanges(),
              builder: (BuildContext context, AsyncSnapshot<User?> snapshot) {
                if (snapshot.data?.uid == null) {
                  //  return SplineArea();
                  //  LoginScreen();
                  // return LoginScreen(locale: widget.locale,
                  //   auth: _auth,
                  //   firestore: _firestore,
                  // );
                  return Login(locale: widget.locale,
                    auth: _auth,
                    firestore: _firestore,
                  );
                } else {
                  // return YouAreGenuser(
                  //   auth: _auth,
                  //   firestore: _firestore,
                  // );

               return LoggedInUserWidget(locale: widget.locale,);
               /*
                  return FutureBuilder(
                    // Initialize FlutterFire:
                    //  future: Firebase.initializeApp(),
                      future: FirebaseFirestore.instance
                          .collection("users")
                          .where("uid", isEqualTo: _auth.currentUser!.uid)
                          .get(),
                      builder: (BuildContext context,
                          AsyncSnapshot<QuerySnapshot> snapshotprofile) {

                        if (true) {
                          if (snapshotprofile.hasData &&
                              snapshotprofile.data != null) {
                            if (snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').CUSTOMER_USER_ROLE_ID   ) {

                              return FutureBuilder(
                                // Initialize FlutterFire:
                                //  future: Firebase.initializeApp(),
                                  future: FirebaseFirestore.instance
                                      .collection("customers")
                                      .doc(snapshotprofile.data!.docs.first
                                      .get("parentId"))
                                      .get(),
                                  builder: (BuildContext context,
                                      AsyncSnapshot<DocumentSnapshot> snapshot) {
                                    if (true) {
                                      if (snapshot.hasData && snapshot.data != null) {
                                        return WidgetWithCustomerFirebase(profile: snapshotprofile.data!.docs.first,customerInfo: snapshot.data!, auth: _auth, locale: widget.locale,);
                                      } else {
                                        return Scaffold(
                                          body: Container(
                                              child: Center(
                                                  child:
                                                  CircularProgressIndicator())),
                                        );
                                      }
                                    } else {
                                      return Scaffold(
                                        body: Container(
                                            child:
                                            Center(child: Text("PLease wait"))),
                                      );
                                    }
                                  });
                            } else if (snapshotprofile.data!.docs.first
                                .get("roleId") ==  RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  || snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').CALIBRATOR_ROLE_ID) {
                              final GlobalKey<ScaffoldState> scaffoldKey =
                              GlobalKey<ScaffoldState>();
                              return Scaffold(
                                  key: scaffoldKey,
                                  appBar: AppBar(actions: [
                                    InkWell(onTap: (){
                                      _auth.signOut();
                                    },child: Padding(
                                      padding: const EdgeInsets.all(15.0),
                                      child: Icon(Icons.logout),
                                    ),)
                                  ],
                                    leading: Padding(
                                      padding: const EdgeInsets.all(8.0),
                                      child: Icon(
                                        Icons.account_box_outlined,
                                        color: Colors.white,
                                      ),
                                    ),
                                    title: Text(snapshotprofile.data!.docs.first
                                        .get("displayName")),
                                  ),
                                  body: Stack(
                                    children: [
                                      Padding(
                                        padding: EdgeInsets.all(8.0),
                                        child: Container(
                                          width: MediaQuery.of(context).size.width,
                                          height:
                                          (MediaQuery.of(context).size.height -
                                              160) ,
                                          decoration: BoxDecoration(
                                              borderRadius:
                                              BorderRadius.circular(5),
                                              border: Border.all(
                                                  width: 2,
                                                  color: Theme.of(context)
                                                      .primaryColor)),
                                          child: Column(
                                            mainAxisAlignment:
                                            MainAxisAlignment.start,
                                            children: [
                                              ListTile(
                                                title: Text(
                                                  "Connected Devices",
                                                  style: TextStyle(
                                                    color: Colors.blue,
                                                  ),
                                                ),
                                                leading: Icon(
                                                  Icons.add,
                                                  color: Colors.blue,
                                                ),
                                              ),
                                              StreamBuilder<BluetoothState>(
                                                  stream:
                                                  FlutterBlue.instance.state,
                                                  initialData:
                                                  BluetoothState.unknown,
                                                  builder: (c, snapshot) {
                                                    final state = snapshot.data;
                                                    if (state ==
                                                        BluetoothState.on) {
                                                      // return Text("Blutooth on");
                                                      return StreamBuilder<
                                                          List<BluetoothDevice>>(
                                                        stream: Stream.periodic(
                                                            Duration(
                                                                seconds: 0))
                                                            .asyncMap((_) =>
                                                        FlutterBlue.instance
                                                            .connectedDevices),
                                                        initialData: [],
                                                        builder: (c, snapshot) {
                                                          if (snapshot.hasData &&
                                                              snapshot.data!.length >
                                                                  0) {
                                                            return Column(
                                                              children:
                                                              snapshot.data!
                                                                  .map((d) =>
                                                                  ListTile(
                                                                    onTap:
                                                                        () {},
                                                                    title: Text(
                                                                        d.name),
                                                                    subtitle: Text(d
                                                                        .id
                                                                        .toString()),
                                                                    trailing:
                                                                    StreamBuilder<BluetoothDeviceState>(
                                                                      stream:
                                                                      d.state,
                                                                      initialData:
                                                                      BluetoothDeviceState.disconnected,
                                                                      builder:
                                                                          (c, snapshot) {
                                                                        if (snapshot.data ==
                                                                            BluetoothDeviceState.connected) {
                                                                          return InkWell(
                                                                            onTap: () {
                                                                              Navigator.of(context).push(MaterialPageRoute(builder: (context) {
                                                                                d.connect(autoConnect: true);
                                                                                return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: d, auth: _auth,);
                                                                                //return DeviceScreenLessDetails(r.device);
                                                                              }));
                                                                            },
                                                                            child: Text(
                                                                              "Open Settings",
                                                                              style: TextStyle(color: Theme.of(context).primaryColor),
                                                                            ),
                                                                          );
                                                                        }
                                                                        return Text(snapshot.data.toString());
                                                                      },
                                                                    ),
                                                                  ))
                                                                  .toList(),
                                                            );
                                                          } else {
                                                            return ListTile(
                                                              onTap: () {

                                                              },
                                                              title: Text(
                                                                  "No Device is Connected"),

                                                            );
                                                          }
                                                        },
                                                      );
                                                    }
                                                    return ListTile(
                                                      title:
                                                      Text("Turn on Blutooth"),
                                                      trailing: Icon(
                                                        Icons.bluetooth_disabled,
                                                        color: Theme.of(context)
                                                            .primaryColor,
                                                      ),
                                                    );
                                                    //return BluetoothOffScreen(state: state);
                                                  }),
                                            ],
                                          ),
                                        ),
                                      ),
                                      Align(
                                        alignment: Alignment.bottomCenter,
                                        child: InkWell(onTap: (){
                                          FlutterBlue.instance
                                              .startScan(
                                              timeout: Duration(
                                                  seconds:
                                                  4));
                                          showDialog<void>(
                                              context:
                                              context,
                                              builder:
                                                  (contextD) =>
                                                  SimpleDialog(
                                                    children: [
                                                      StreamBuilder<List<ScanResult>>(
                                                        stream: FlutterBlue.instance.scanResults,
                                                        initialData: [],
                                                        builder: (c, snapshot) {
                                                          //  updateData(snapshot.data);
                                                          FirebaseFirestore firestore;
                                                          //  Database(firestore: firestore).addData(snapshot.data);

                                                          return Column(
                                                            children: snapshot.data!
                                                                .map(
                                                                  (r) => ScanResultTile(
                                                                result: r,
                                                                onTap: () {
                                                                  r.device.connect(autoConnect: false).then((value) async {
                                                                    //Navigator.pop(context);
                                                                    print("just connected and started discovering services");
                                                                    await r.device.discoverServices();

                                                                    List<BluetoothService> allservice = await r.device.discoverServices();
                                                                    print("a X" + allservice.length.toString());
                                                                    if (allservice.length > 0) {
                                                                      print("b X" + allservice.length.toString());
                                                                      //find services
                                                                      dynamic bleCharacteristics = await OsDependentSettings().getReadWriteCharacters(device: r.device);

                                                                      BluetoothCharacteristic characteristicWritePurpose = bleCharacteristics["write"];
                                                                      BluetoothCharacteristic characteristicReadPurpose = bleCharacteristics["read"];
                                                                      String iceSerial = "";
                                                                      String Serial = "";
                                                                      getSerial2() async {
                                                                        print("c X");
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                        List<int> responseAray2 = await characteristicReadPurpose.read();
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                        responseAray2 = await characteristicReadPurpose.read();
                                                                        String responseInString = utf8.decode(responseAray2);
                                                                        Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                        if (Serial.length == 0) {
                                                                          getSerial2();
                                                                        } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
                                                                          print("g X");
                                                                          //  lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device,);
                                                                        } else {
                                                                          print("h X");

                                                                          // set up the button
                                                                          Widget okButton = FlatButton(
                                                                            child: Text("OK"),
                                                                            onPressed: () {},
                                                                          );

                                                                          // set up the AlertDialog
                                                                          AlertDialog alert = AlertDialog(
                                                                            title: Text("SN and/or ICE SN is Default"),
                                                                            content: Column(
                                                                              children: [
                                                                                InkWell(
                                                                                  onTap: () {
                                                                                    TextEditingController controllerIce = new TextEditingController();

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                          builder: (context) => Scaffold(
                                                                                            appBar: AppBar(
                                                                                              title: Text("Update ICE SN"),
                                                                                            ),
                                                                                            body: Wrap(
                                                                                              children: [
                                                                                                Padding(
                                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                                  child: TextField(
                                                                                                    controller: controllerIce,
                                                                                                  ),
                                                                                                ),
                                                                                                InkWell(
                                                                                                  onTap: () async {
                                                                                                    String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                                                    print("command " + commandToWrite);

                                                                                                    try {
                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                      Navigator.pop(context);
                                                                                                      Navigator.pop(context);
                                                                                                      iceSerial = controllerIce.text;

                                                                                                      //return true;
                                                                                                    } catch (e) {
                                                                                                      // return false;
                                                                                                    }
                                                                                                  },
                                                                                                  child: Padding(
                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                    child: Card(
                                                                                                      color: Theme.of(context).primaryColor,
                                                                                                      child: Center(
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Text(
                                                                                                            "Save",
                                                                                                            style: TextStyle(color: Colors.white),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          )),
                                                                                    );
                                                                                    /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: ListTile(
                                                                                      title: Text(iceSerial),
                                                                                      subtitle: Text("Change  ICE SN"),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                InkWell(
                                                                                  onTap: () {
                                                                                    TextEditingController controller = new TextEditingController();

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                          builder: (context) => Scaffold(
                                                                                            appBar: AppBar(
                                                                                              title: Text("Update  SN"),
                                                                                            ),
                                                                                            body: Wrap(
                                                                                              children: [
                                                                                                Padding(
                                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                                  child: TextField(
                                                                                                    controller: controller,
                                                                                                  ),
                                                                                                ),
                                                                                                InkWell(
                                                                                                  onTap: () async {
                                                                                                    String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                    print("command " + commandToWrite);

                                                                                                    try {
                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                      Navigator.pop(context);
                                                                                                      Navigator.pop(context);

                                                                                                      Serial = controller.text;

                                                                                                      // return true;
                                                                                                    } catch (e) {
                                                                                                      // return false;
                                                                                                    }
                                                                                                  },
                                                                                                  child: Padding(
                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                    child: Card(
                                                                                                      color: Theme.of(context).primaryColor,
                                                                                                      child: Center(
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Text(
                                                                                                            "Save",
                                                                                                            style: TextStyle(color: Colors.white),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          )),
                                                                                    );
                                                                                    /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: ListTile(
                                                                                      title: Text(Serial),
                                                                                      subtitle: Text("Change  SN"),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            actions: [
                                                                              okButton,
                                                                            ],
                                                                          );

                                                                          // show the dialog
                                                                          // showDialog(
                                                                          //   context: context,
                                                                          //   builder: (BuildContext context) {
                                                                          //     return alert;
                                                                          //   },
                                                                          // );

                                                                          /*


                                                                                     scaffoldKey.currentState.showBottomSheet((context) => Column(
                                                                                       children: [
                                                                                         ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);

                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
                                                                                         ),),
                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);

                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
                                                                                         ),),


                                                                                       ],
                                                                                     ));

                                                                                      */

                                                                          GlobalKey<ScaffoldState> scaffoldKey2 = GlobalKey<ScaffoldState>();
                                                                          Navigator.push(
                                                                              context,
                                                                              MaterialPageRoute(
                                                                                  builder: (context) => Scaffold(
                                                                                      key: scaffoldKey2,
                                                                                      appBar: AppBar(),
                                                                                      body: Column(
                                                                                        children: [
                                                                                          ListTile(
                                                                                            title: Text("SN and/or ICE SN is Default."),
                                                                                            tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
                                                                                          ),
                                                                                          InkWell(
                                                                                            onTap: () {
                                                                                              TextEditingController controllerIce = new TextEditingController();

                                                                                              Navigator.push(
                                                                                                context,
                                                                                                MaterialPageRoute(
                                                                                                    builder: (context) => Scaffold(
                                                                                                      appBar: AppBar(
                                                                                                        title: Text("Update ICE SN"),
                                                                                                      ),
                                                                                                      body: Wrap(
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                                            child: TextField(
                                                                                                              controller: controllerIce,
                                                                                                            ),
                                                                                                          ),
                                                                                                          InkWell(
                                                                                                            onTap: () async {
                                                                                                              String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                                                              print("command " + commandToWrite);

                                                                                                              try {
                                                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                                Navigator.pop(context);
                                                                                                                Navigator.pop(context);
                                                                                                                iceSerial = controllerIce.text;

                                                                                                                //return true;
                                                                                                              } catch (e) {
                                                                                                                // return false;
                                                                                                              }
                                                                                                            },
                                                                                                            child: Padding(
                                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                                              child: Card(
                                                                                                                color: Theme.of(context).primaryColor,
                                                                                                                child: Center(
                                                                                                                  child: Padding(
                                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                                    child: Text(
                                                                                                                      "Save",
                                                                                                                      style: TextStyle(color: Colors.white),
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    )),
                                                                                              );
                                                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                            },
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: ListTile(
                                                                                                title: Text(iceSerial),
                                                                                                subtitle: Text("Change  ICE SN"),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          InkWell(
                                                                                            onTap: () {
                                                                                              TextEditingController controller = new TextEditingController();

                                                                                              Navigator.push(
                                                                                                context,
                                                                                                MaterialPageRoute(
                                                                                                    builder: (context) => Scaffold(
                                                                                                      appBar: AppBar(
                                                                                                        title: Text("Update  SN"),
                                                                                                      ),
                                                                                                      body: Wrap(
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                                            child: TextField(
                                                                                                              controller: controller,
                                                                                                            ),
                                                                                                          ),
                                                                                                          InkWell(
                                                                                                            onTap: () async {
                                                                                                              String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                              print("command " + commandToWrite);

                                                                                                              try {
                                                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                                Navigator.pop(context);
                                                                                                                Navigator.pop(context);
                                                                                                                Serial = controller.text;

                                                                                                                // return true;
                                                                                                              } catch (e) {
                                                                                                                // return false;
                                                                                                              }
                                                                                                            },
                                                                                                            child: Padding(
                                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                                              child: Card(
                                                                                                                color: Theme.of(context).primaryColor,
                                                                                                                child: Center(
                                                                                                                  child: Padding(
                                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                                    child: Text(
                                                                                                                      "Save",
                                                                                                                      style: TextStyle(color: Colors.white),
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    )),
                                                                                              );
                                                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                            },
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: ListTile(
                                                                                                title: Text(Serial),
                                                                                                subtitle:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ))));
                                                                        }
                                                                      }

                                                                      getICESerial2() async {
                                                                        print("d X");
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                        List<int> responseAray2 = await characteristicReadPurpose.read();
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                        responseAray2 = await characteristicReadPurpose.read();
                                                                        String responseInString = utf8.decode(responseAray2);
                                                                        iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                                        if (iceSerial.length == 0) {
                                                                          print("e X");
                                                                          getICESerial2();
                                                                        }
                                                                        if (Serial.length == 0) {
                                                                          print("e X");
                                                                          getSerial2();
                                                                        } else {
                                                                          //lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
                                                                        }
                                                                      }

                                                                      getSerial() async {
                                                                        print("c X");
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                        List<int> responseAray2 = await characteristicReadPurpose.read();
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                        responseAray2 = await characteristicReadPurpose.read();
                                                                        String responseInString = utf8.decode(responseAray2);
                                                                        Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                        if (Serial.length == 0) {
                                                                          getSerial();
                                                                        }
                                                                        if (iceSerial.length == 0) {
                                                                          getICESerial2();
                                                                        } else if (!iceSerial.contains("Default") && !Serial.contains("Default") && iceSerial != "Default" && Serial != "Default" && iceSerial != "No command presen" && Serial != "No command presen") {
                                                                          print("g X");
                                                                          // lookUpBoard(Serial, iceSerial, scaffoldKey, characteristicReadPurpose, characteristicWritePurpose, r.device);
                                                                        } else {
                                                                          print("h X");

                                                                          // set up the button
                                                                          Widget okButton = FlatButton(
                                                                            child: Text("OK"),
                                                                            onPressed: () {},
                                                                          );

                                                                          // set up the AlertDialog
                                                                          AlertDialog alert = AlertDialog(
                                                                            title: Text("SN and/or ICE SN is Default"),
                                                                            content: Column(
                                                                              children: [
                                                                                InkWell(
                                                                                  onTap: () {
                                                                                    TextEditingController controller = new TextEditingController();

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                          builder: (context) => Scaffold(
                                                                                            appBar: AppBar(
                                                                                              title: Text("Update ICE SN"),
                                                                                            ),
                                                                                            body: Wrap(
                                                                                              children: [
                                                                                                Padding(
                                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                                  child: TextField(
                                                                                                    controller: controller,
                                                                                                  ),
                                                                                                ),
                                                                                                InkWell(
                                                                                                  onTap: () async {
                                                                                                    String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                    print("command " + commandToWrite);

                                                                                                    try {
                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                      Navigator.pop(context);
                                                                                                      Navigator.pop(context);

                                                                                                      //return true;
                                                                                                    } catch (e) {
                                                                                                      //return false;
                                                                                                    }
                                                                                                  },
                                                                                                  child: Padding(
                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                    child: Card(
                                                                                                      color: Theme.of(context).primaryColor,
                                                                                                      child: Center(
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Text(
                                                                                                            "Save",
                                                                                                            style: TextStyle(color: Colors.white),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          )),
                                                                                    );
                                                                                    /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: ListTile(
                                                                                      title: Text(iceSerial),
                                                                                      subtitle: Text("Change  SN"),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                                InkWell(
                                                                                  onTap: () {
                                                                                    TextEditingController controller = new TextEditingController();

                                                                                    Navigator.push(
                                                                                      context,
                                                                                      MaterialPageRoute(
                                                                                          builder: (context) => Scaffold(
                                                                                            appBar: AppBar(
                                                                                              title: Text("Update  SN"),
                                                                                            ),
                                                                                            body: Wrap(
                                                                                              children: [
                                                                                                Padding(
                                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                                  child: TextField(
                                                                                                    controller: controller,
                                                                                                  ),
                                                                                                ),
                                                                                                InkWell(
                                                                                                  onTap: () async {
                                                                                                    String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                    print("command " + commandToWrite);

                                                                                                    try {
                                                                                                      await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                      Navigator.pop(context);
                                                                                                      Navigator.pop(context);

                                                                                                      // return true;
                                                                                                    } catch (e) {
                                                                                                      // return false;
                                                                                                    }
                                                                                                  },
                                                                                                  child: Padding(
                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                    child: Card(
                                                                                                      color: Theme.of(context).primaryColor,
                                                                                                      child: Center(
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Text(
                                                                                                            "Save",
                                                                                                            style: TextStyle(color: Colors.white),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ),
                                                                                                  ),
                                                                                                ),
                                                                                              ],
                                                                                            ),
                                                                                          )),
                                                                                    );
                                                                                    /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                  },
                                                                                  child: Padding(
                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                    child: ListTile(
                                                                                      title: Text(iceSerial),
                                                                                      subtitle:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change Ice SN"):Container(width: 0,height: 0,),
                                                                                    ),
                                                                                  ),
                                                                                ),
                                                                              ],
                                                                            ),
                                                                            actions: [
                                                                              okButton,
                                                                            ],
                                                                          );

                                                                          // show the dialog
                                                                          // showDialog(
                                                                          //   context: context,
                                                                          //   builder: (BuildContext context) {
                                                                          //     return alert;
                                                                          //   },
                                                                          // );

/*
                                                                                     scaffoldKey.currentState.showBottomSheet((context) =>Column(
                                                                                       children: [
                                                                                         ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();

                                                                                           scaffoldKey.currentState.showBottomSheet((context) => Scaffold(body: Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                   controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getICESerial2();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),));
                                                                                           /*

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);
                                                                                                     getICESerial2();
                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           */
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(iceSerial),subtitle: Text("Change  ICE SN"),),
                                                                                         ),),
                                                                                         InkWell(onTap: (){
                                                                                           TextEditingController controller = new TextEditingController();
                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>  Scaffold(body: Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                   controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getICESerial2();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),));
                                                                                           /*

                                                                                           Navigator.push(
                                                                                             context,
                                                                                             MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                               children: [
                                                                                                 Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: TextField(
                                                                                                     controller: controller,
                                                                                                   ),
                                                                                                 ),
                                                                                                 InkWell(onTap: () async {
                                                                                                   String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                   print("command " + commandToWrite);

                                                                                                   try {
                                                                                                     await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                     Navigator.pop(context);
                                                                                                     getICESerial2();
                                                                                                     return true;
                                                                                                   } catch (e) {
                                                                                                     return false;
                                                                                                   }

                                                                                                 },
                                                                                                   child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                     ),),),
                                                                                                   ),
                                                                                                 ),
                                                                                               ],
                                                                                             ),)),
                                                                                           );
                                                                                           */
                                                                                           /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                         },child: Padding(
                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                           child: ListTile(title: Text(Serial),subtitle: Text("Change SN"),),
                                                                                         ),),


                                                                                       ],
                                                                                     ) );

 */
                                                                          /*

                                                                                     showBottomSheet(
                                                                                         context: context,
                                                                                         builder: (context) =>Scaffold(appBar: AppBar(),body: Column(
                                                                                           children: [
                                                                                             ListTile(title: Text("SN and/or ICE SN is Default."),tileColor: Theme.of(context).primaryColor.withOpacity(0.1),),

                                                                                             InkWell(onTap: (){
                                                                                               TextEditingController controller = new TextEditingController();

                                                                                               Navigator.push(
                                                                                                 context,
                                                                                                 MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update ICE SN"),),body: Wrap(
                                                                                                   children: [
                                                                                                     Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: TextField(
                                                                                                         controller: controller,
                                                                                                       ),
                                                                                                     ),
                                                                                                     InkWell(onTap: () async {
                                                                                                       String commandToWrite = COMMAND_INDEX_1_SET + controller.text + COMMAND_SUFFIX;
                                                                                                       print("command " + commandToWrite);

                                                                                                       try {
                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                         Navigator.pop(context);
                                                                                                         getICESerial2();
                                                                                                         return true;
                                                                                                       } catch (e) {
                                                                                                         return false;
                                                                                                       }

                                                                                                     },
                                                                                                       child: Padding(
                                                                                                         padding: const EdgeInsets.all(8.0),
                                                                                                         child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                                           child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                         ),),),
                                                                                                       ),
                                                                                                     ),
                                                                                                   ],
                                                                                                 ),)),
                                                                                               );
                                                                                               /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                             },child: Padding(
                                                                                               padding: const EdgeInsets.all(8.0),
                                                                                               child: ListTile(title: Text(iceSerial),subtitle: Text("Change  SN"),),
                                                                                             ),),
                                                                                             InkWell(onTap: (){
                                                                                               TextEditingController controller = new TextEditingController();

                                                                                               Navigator.push(
                                                                                                 context,
                                                                                                 MaterialPageRoute(builder: (context) => Scaffold(appBar: AppBar(title: Text("Update  SN"),),body: Wrap(
                                                                                                   children: [
                                                                                                     Padding(
                                                                                                       padding: const EdgeInsets.all(8.0),
                                                                                                       child: TextField(
                                                                                                         controller: controller,
                                                                                                       ),
                                                                                                     ),
                                                                                                     InkWell(onTap: () async {
                                                                                                       String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                       print("command " + commandToWrite);

                                                                                                       try {
                                                                                                         await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                         Navigator.pop(context);
                                                                                                         getICESerial2();
                                                                                                         return true;
                                                                                                       } catch (e) {
                                                                                                         return false;
                                                                                                       }

                                                                                                     },
                                                                                                       child: Padding(
                                                                                                         padding: const EdgeInsets.all(8.0),
                                                                                                         child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                           padding: const EdgeInsets.all(8.0),
                                                                                                           child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                         ),),),
                                                                                                       ),
                                                                                                     ),
                                                                                                   ],
                                                                                                 ),)),
                                                                                               );
                                                                                               /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */


                                                                                             },child: Padding(
                                                                                               padding: const EdgeInsets.all(8.0),
                                                                                               child: ListTile(title: Text(iceSerial),subtitle: Text("Change Ice SN"),),
                                                                                             ),),


                                                                                           ],
                                                                                         )));

                                                                                      */

                                                                          Navigator.push(
                                                                              context,
                                                                              MaterialPageRoute(
                                                                                  builder: (context) => Scaffold(
                                                                                      appBar: AppBar(),
                                                                                      body: Column(
                                                                                        children: [
                                                                                          ListTile(
                                                                                            title: Text("SN and/or ICE SN is Default."),
                                                                                            tileColor: Theme.of(context).primaryColor.withOpacity(0.1),
                                                                                          ),
                                                                                          InkWell(
                                                                                            onTap: () {
                                                                                              TextEditingController controllerICe = new TextEditingController();

                                                                                              Navigator.push(
                                                                                                context,
                                                                                                MaterialPageRoute(
                                                                                                    builder: (context) => Scaffold(
                                                                                                      appBar: AppBar(
                                                                                                        title: Text("Update ICE SN"),
                                                                                                      ),
                                                                                                      body: Wrap(
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                                            child: TextField(
                                                                                                              controller: controllerICe,
                                                                                                            ),
                                                                                                          ),
                                                                                                          InkWell(
                                                                                                            onTap: () async {
                                                                                                              String commandToWrite = COMMAND_INDEX_1_SET + controllerICe.text + COMMAND_SUFFIX;
                                                                                                              print("command " + commandToWrite);

                                                                                                              try {
                                                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                                Navigator.pop(context);
                                                                                                                Navigator.pop(context);
                                                                                                                iceSerial = controllerICe.text;
                                                                                                                getICESerial2();
                                                                                                                // return true;
                                                                                                              } catch (e) {
                                                                                                                //return false;
                                                                                                              }
                                                                                                            },
                                                                                                            child: Padding(
                                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                                              child: Card(
                                                                                                                color: Theme.of(context).primaryColor,
                                                                                                                child: Center(
                                                                                                                  child: Padding(
                                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                                    child: Text(
                                                                                                                      "Save",
                                                                                                                      style: TextStyle(color: Colors.white),
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    )),
                                                                                              );

                                                                                              /*
                                                                                               scaffoldKey.currentState.showBottomSheet((context) =>Column(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                   getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);

                                                                                            */
                                                                                            },
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: ListTile(
                                                                                                title: Text(iceSerial),
                                                                                                subtitle: Text("Change  SN"),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                          InkWell(
                                                                                            onTap: () {
                                                                                              TextEditingController controller = new TextEditingController();

                                                                                              Navigator.push(
                                                                                                context,
                                                                                                MaterialPageRoute(
                                                                                                    builder: (context) => Scaffold(
                                                                                                      appBar: AppBar(
                                                                                                        title: Text("Update  SN"),
                                                                                                      ),
                                                                                                      body: Wrap(
                                                                                                        children: [
                                                                                                          Padding(
                                                                                                            padding: const EdgeInsets.all(8.0),
                                                                                                            child: TextField(
                                                                                                              controller: controller,
                                                                                                            ),
                                                                                                          ),
                                                                                                          InkWell(
                                                                                                            onTap: () async {
                                                                                                              String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                              print("command " + commandToWrite);

                                                                                                              try {
                                                                                                                await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                                Serial = controller.text;
                                                                                                                Navigator.pop(context);
                                                                                                                Navigator.pop(context);
                                                                                                                getICESerial2();
                                                                                                                //return true;
                                                                                                              } catch (e) {
                                                                                                                //return false;
                                                                                                              }
                                                                                                            },
                                                                                                            child: Padding(
                                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                                              child: Card(
                                                                                                                color: Theme.of(context).primaryColor,
                                                                                                                child: Center(
                                                                                                                  child: Padding(
                                                                                                                    padding: const EdgeInsets.all(8.0),
                                                                                                                    child: Text(
                                                                                                                      "Save",
                                                                                                                      style: TextStyle(color: Colors.white),
                                                                                                                    ),
                                                                                                                  ),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ],
                                                                                                      ),
                                                                                                    )),
                                                                                              );
                                                                                              /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                            },
                                                                                            child: Padding(
                                                                                              padding: const EdgeInsets.all(8.0),
                                                                                              child: ListTile(
                                                                                                title: Text(Serial),
                                                                                                subtitle:snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID  ?  Text("Change SN"):Container(width: 0,height: 0,),
                                                                                              ),
                                                                                            ),
                                                                                          ),
                                                                                        ],
                                                                                      ))));
                                                                        }
                                                                      }

                                                                      //get ice
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      List<int> responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      String responseInString = utf8.decode(responseAray2);
                                                                      iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);

                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      responseInString = utf8.decode(responseAray2);
                                                                      iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);

                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      responseInString = utf8.decode(responseAray2);
                                                                      iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                                      //end ice

                                                                      //get sl
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      responseInString = utf8.decode(responseAray2);
                                                                      Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      responseInString = utf8.decode(responseAray2);
                                                                      Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_2_GET_), withoutResponse: OsDependentSettings().writeWithresponse);

                                                                      responseAray2 = await characteristicReadPurpose.read();
                                                                      responseInString = utf8.decode(responseAray2);
                                                                      Serial = removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                      //end sl

                                                                      // scaffoldKey.currentState.showBottomSheet((context) => Scaffold(
                                                                      //       body: Column(
                                                                      //         children: [],
                                                                      //       ),
                                                                      //     ));
                                                                      GlobalKey<ScaffoldState> scaffoldKey20 = GlobalKey<ScaffoldState>();
                                                                      Navigator.push(
                                                                          context,
                                                                          MaterialPageRoute(
                                                                              builder: (context) =>Scaffold(key: scaffoldKey20,appBar: AppBar(),
                                                                                body: Column(
                                                                                  children: [
                                                                                    InkWell(
                                                                                      onTap: () {

                                                                                        if(snapshotprofile.data!.docs.first
                                                                                            .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID   ){
                                                                                          TextEditingController controllerIce = new TextEditingController();

                                                                                          Navigator.push(
                                                                                            context,
                                                                                            MaterialPageRoute(
                                                                                                builder: (context) => Scaffold(
                                                                                                  appBar: AppBar(
                                                                                                    title: Text("Update ICE SN"),
                                                                                                  ),
                                                                                                  body: Wrap(
                                                                                                    children: [
                                                                                                      Padding(
                                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                                        child: TextField(
                                                                                                          controller: controllerIce,
                                                                                                        ),
                                                                                                      ),
                                                                                                      InkWell(
                                                                                                        onTap: () async {
                                                                                                          String commandToWrite = COMMAND_INDEX_1_SET + controllerIce.text + COMMAND_SUFFIX;
                                                                                                          print("command " + commandToWrite);

                                                                                                          try {
                                                                                                            await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                            Navigator.pop(context);
                                                                                                            // Navigator.pop(context);
                                                                                                            iceSerial = controllerIce.text;
                                                                                                            Index1ValueStream.getInstance().dataReload( controllerIce.text);

                                                                                                            //return true;
                                                                                                          } catch (e) {
                                                                                                            // return false;
                                                                                                          }
                                                                                                        },
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Card(
                                                                                                            color: Theme.of(context).primaryColor,
                                                                                                            child: Center(
                                                                                                              child: Padding(
                                                                                                                padding: const EdgeInsets.all(8.0),
                                                                                                                child: Text(
                                                                                                                  "Save",
                                                                                                                  style: TextStyle(color: Colors.white),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  ),
                                                                                                )),
                                                                                          );
                                                                                        }


                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: ListTile(
                                                                                          title: StreamBuilder(
                                                                                              stream: Index1ValueStream.getInstance().outData,
                                                                                              initialData: iceSerial,
                                                                                              builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
                                                                                                if (snapshot.hasData) {
                                                                                                  return Text(snapshot.data!);
                                                                                                } else {
                                                                                                  return Text("Please wait");
                                                                                                }
                                                                                              }),
                                                                                          subtitle: Text("ICE Serial"),
                                                                                          trailing:snapshotprofile.data!.docs.first.get("roleId") ==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID ?  Icon(Icons.edit):Container(width: 0,height: 0,),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () {
                                                                                        if(snapshotprofile.data!.docs.first
                                                                                            .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID ){
                                                                                          TextEditingController controller = new TextEditingController();

                                                                                          Navigator.push(
                                                                                            context,
                                                                                            MaterialPageRoute(
                                                                                                builder: (context) => Scaffold(
                                                                                                  appBar: AppBar(
                                                                                                    title: Text("Update  SN"),
                                                                                                  ),
                                                                                                  body: Wrap(
                                                                                                    children: [
                                                                                                      Padding(
                                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                                        child: TextField(
                                                                                                          controller: controller,
                                                                                                        ),
                                                                                                      ),
                                                                                                      InkWell(
                                                                                                        onTap: () async {
                                                                                                          String commandToWrite = COMMAND_INDEX_2_SET + controller.text + COMMAND_SUFFIX;
                                                                                                          print("command " + commandToWrite);

                                                                                                          try {
                                                                                                            await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                            Navigator.pop(context);
                                                                                                            Index2ValueStream.getInstance().dataReload( controller.text);
                                                                                                            //Navigator.pop(context);

                                                                                                            Serial = controller.text;

                                                                                                            // return true;
                                                                                                          } catch (e) {
                                                                                                            // return false;
                                                                                                          }
                                                                                                        },
                                                                                                        child: Padding(
                                                                                                          padding: const EdgeInsets.all(8.0),
                                                                                                          child: Card(
                                                                                                            color: Theme.of(context).primaryColor,
                                                                                                            child: Center(
                                                                                                              child: Padding(
                                                                                                                padding: const EdgeInsets.all(8.0),
                                                                                                                child: Text(
                                                                                                                  "Save",
                                                                                                                  style: TextStyle(color: Colors.white),
                                                                                                                ),
                                                                                                              ),
                                                                                                            ),
                                                                                                          ),
                                                                                                        ),
                                                                                                      ),
                                                                                                    ],
                                                                                                  ),
                                                                                                )),
                                                                                          );
                                                                                        }

                                                                                        /*


                                                                                           scaffoldKey.currentState.showBottomSheet((context) =>Wrap(
                                                                                             children: [
                                                                                               Padding(
                                                                                                 padding: const EdgeInsets.all(8.0),
                                                                                                 child: TextField(
                                                                                                  // controller: controller,
                                                                                                 ),
                                                                                               ),
                                                                                               InkWell(onTap: () async {
                                                                                                 String commandToWrite = COMMAND_INDEX_2_SET + "" + COMMAND_SUFFIX;
                                                                                                 print("command " + commandToWrite);

                                                                                                 try {
                                                                                                   await characteristicWritePurpose.write(StringToASCII(commandToWrite), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                   Navigator.pop(context);
                                                                                                  // getSerial();
                                                                                                   return true;
                                                                                                 } catch (e) {
                                                                                                   return false;
                                                                                                 }

                                                                                               },
                                                                                                 child: Padding(
                                                                                                   padding: const EdgeInsets.all(8.0),
                                                                                                   child: Card(color: Theme.of(context).primaryColor,child: Center(child: Padding(
                                                                                                     padding: const EdgeInsets.all(8.0),
                                                                                                     child: Text("Save",style: TextStyle(color: Colors.white),),
                                                                                                   ),),),
                                                                                                 ),
                                                                                               ),
                                                                                             ],
                                                                                           ),);
                                                                                           */
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: ListTile(
                                                                                          title: StreamBuilder(
                                                                                              stream: Index2ValueStream.getInstance().outData,
                                                                                              initialData: Serial,
                                                                                              builder: (BuildContext context, AsyncSnapshot<String> snapshot) {
                                                                                                if (snapshot.hasData) {
                                                                                                  return Text(snapshot.data!);
                                                                                                } else {
                                                                                                  return Text("Please wait");
                                                                                                }
                                                                                              }),
                                                                                          subtitle: Text("Serial"),
                                                                                          trailing:snapshotprofile.data!.docs.first.get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID?  Icon(Icons.edit):Container(width: 0,height: 0,),
                                                                                        ),
                                                                                      ),
                                                                                    ),

                                                                                    //   Directory_1_view_edit(
                                                                                    //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                    //   bluetoothCharacteristicRead: characteristicReadPurpose,
                                                                                    // ),
                                                                                    //
                                                                                    //   Directory_2_view_edit(
                                                                                    //     bluetoothCharacteristicWrite:characteristicWritePurpose,
                                                                                    //     bluetoothCharacteristicRead: characteristicReadPurpose,
                                                                                    //   ),
                                                                                    // Directory_1_view_edit(
                                                                                    //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                    //   bluetoothCharacteristicRead:characteristicReadPurpose,
                                                                                    // ),
                                                                                    //
                                                                                    // Directory_2_view_edit(
                                                                                    //   bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                    //   bluetoothCharacteristicRead:characteristicReadPurpose,
                                                                                    // ),
                                                                                    Directory_3_view_edit(
                                                                                      bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                      bluetoothCharacteristicRead:characteristicReadPurpose,
                                                                                    ),
                                                                                    Directory_4_view_edit(
                                                                                      bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                      bluetoothCharacteristicRead:characteristicReadPurpose,
                                                                                    ),
                                                                                    Directory_9_view_edit(
                                                                                      bluetoothCharacteristicWrite: characteristicWritePurpose,
                                                                                      bluetoothCharacteristicRead:characteristicReadPurpose,
                                                                                    ),
                                                                                    ListTile(
                                                                                      title: Text(
                                                                                        "Sequential Write",
                                                                                        style: TextStyle(color: Colors.blue),
                                                                                      ),
                                                                                      subtitle: StreamBuilder<double>(
                                                                                          stream: ImageWriteStatusStream.getInstance().outData,
                                                                                          // async work
                                                                                          builder: (BuildContext context,
                                                                                              AsyncSnapshot<double> snapshot) {
                                                                                            if(snapshot.hasData){
                                                                                              return LinearProgressIndicator(
                                                                                                value: snapshot.data,
                                                                                              );
                                                                                            }else{
                                                                                              return LinearProgressIndicator(
                                                                                                value: 0,
                                                                                              );
                                                                                            }
                                                                                          }),
                                                                                      trailing: RaisedButton(
                                                                                        child: Text("Gallary"),
                                                                                        onPressed:(){
                                                                                          writeImageGallary(r.device,characteristicReadPurpose,characteristicWritePurpose);
                                                                                        },
                                                                                      ),
                                                                                    ),
                                                                                    // InkWell(
                                                                                    //   onTap: () {
                                                                                    //     Navigator.push(
                                                                                    //       context,
                                                                                    //       MaterialPageRoute(
                                                                                    //           builder: (context) =>
                                                                                    //               CalibartionStep4(profile: widget.userBody,
                                                                                    //                 calibAdmin:"admin",
                                                                                    //                 firestore: widget
                                                                                    //                     .firestore,
                                                                                    //                 device:
                                                                                    //                 widget.device,
                                                                                    //                 characteristicWrite:
                                                                                    //                 allService[3]
                                                                                    //                     .characteristics[0],
                                                                                    //                 characteristicRead:
                                                                                    //                 allService[3]
                                                                                    //                     .characteristics[1],
                                                                                    //                 productInfo:
                                                                                    //                 productInfo,
                                                                                    //               )),
                                                                                    //     );
                                                                                    //   },
                                                                                    //   child: Padding(
                                                                                    //     padding:
                                                                                    //     const EdgeInsets.fromLTRB(
                                                                                    //         8, 25, 8, 0),
                                                                                    //     child: Container(
                                                                                    //       decoration: BoxDecoration(
                                                                                    //           borderRadius:
                                                                                    //           BorderRadius.all(
                                                                                    //               Radius.circular(
                                                                                    //                   3)),
                                                                                    //           color: Theme.of(context)
                                                                                    //               .primaryColor),
                                                                                    //       child: Center(
                                                                                    //         child: Padding(
                                                                                    //           padding:
                                                                                    //           const EdgeInsets
                                                                                    //               .all(15.0),
                                                                                    //           child: Text(
                                                                                    //             "Next",
                                                                                    //             style: TextStyle(
                                                                                    //                 color:
                                                                                    //                 Colors.white),
                                                                                    //           ),
                                                                                    //         ),
                                                                                    //       ),
                                                                                    //     ),
                                                                                    //   ),
                                                                                    // ),
                                                                                    InkWell(
                                                                                      onTap: () {
                                                                                        Navigator.of(context).push(MaterialPageRoute(builder: (context) {
                                                                                          try{
                                                                                            r.device.connect(autoConnect: true);
                                                                                          }catch(e){

                                                                                          }
                                                                                          return ConnectedDevicePage(calibratorID: "admin",firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: r.device, auth: _auth,);
                                                                                          //return DeviceScreenLessDetails(r.device);
                                                                                        }));
                                                                                      },
                                                                                      child: Padding(
                                                                                        padding: const EdgeInsets.all(8.0),
                                                                                        child: Container(decoration: BoxDecoration(
                                                                                          color: Theme.of(context).primaryColor,

                                                                                        ),
                                                                                          child: Padding(
                                                                                            padding: const EdgeInsets.all(15.0),
                                                                                            child: Text(
                                                                                              "Advanced settings",
                                                                                              style: TextStyle(color:Colors.white),
                                                                                            ),
                                                                                          ),
                                                                                        ),
                                                                                      ),
                                                                                    ),
                                                                                    InkWell(
                                                                                      onTap: () {
                                                                                        lookUpBoard(getCalibratorId(snapshotprofile.data!.docs.first),Serial, iceSerial, scaffoldKey20, characteristicReadPurpose, characteristicWritePurpose, r.device,context,snapshotprofile.data!.docs.first,);
                                                                                      },
                                                                                      child: Card(
                                                                                        color: Colors.blue,
                                                                                        child: Container(
                                                                                            child: Center(
                                                                                                child: Padding(
                                                                                                  padding: const EdgeInsets.all(8.0),
                                                                                                  child: Text(
                                                                                                    snapshotprofile.data!.docs.first.get("roleId")==RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID?"Assign Customer":"Search in System",
                                                                                                    style: TextStyle(color: Colors.white),
                                                                                                  ),
                                                                                                ))),
                                                                                      ),
                                                                                    ),
                                                                                  ],
                                                                                ),
                                                                              )));


                                                                      // scaffoldKey.currentState.showBottomSheet((context) => );

                                                                      getICESerial() async {
                                                                        print("d X");
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                        List<int> responseAray2 = await characteristicReadPurpose.read();
                                                                        await characteristicWritePurpose.write(StringToASCII(COMMAND_INDEX_1_GET_), withoutResponse: OsDependentSettings().writeWithresponse);
                                                                        responseAray2 = await characteristicReadPurpose.read();
                                                                        String responseInString = utf8.decode(responseAray2);
                                                                        iceSerial = removeCodesFromStrings(responseInString, COMMAND_INDEX_1_GET_);
                                                                        if (iceSerial.length == 0) {
                                                                          print("e X");
                                                                          getICESerial();
                                                                        } else {
                                                                          print("f X");
                                                                          getSerial();
                                                                        }
                                                                      }

                                                                      // getICESerial();
                                                                    } else {
                                                                      print("i X");
                                                                      print("service side " + allservice.length.toString());
                                                                    }
                                                                  });
                                                                  //return Text("ok");
                                                                  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                                  //return PerformTestPageActivity(device: r.device, project: "", index2: '', testDuration: 0,);
                                                                  // Navigator.pop(context);
                                                                  //return ConnectedDevicePage(device: r.device);
                                                                  //return DeviceScreenLessDetails(r.device);
                                                                },
                                                              ),
                                                              //     (r) => ScanResultTile(
                                                              //   result: r,
                                                              //   onTap: () => Navigator.of(context)
                                                              //       .push(MaterialPageRoute(builder: (context) {
                                                              //     r.device.connect(autoConnect: false);
                                                              //     //return Text("ok");
                                                              //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                              //     return   PerformTestPage(device: r.device,project:"o",);
                                                              //     Navigator.pop(context);
                                                              //     //return ConnectedDevicePage(device: r.device);
                                                              //     //return DeviceScreenLessDetails(r.device);
                                                              //   })),
                                                              // ),
                                                            )
                                                                .toList(),
                                                          );
                                                        },
                                                      )
                                                    ],
                                                  ));
                                        },
                                          child: Padding(
                                            padding: EdgeInsets.all(8.0),
                                            child: Container(
                                              height: 50,
                                              decoration: BoxDecoration(
                                                  borderRadius:
                                                  BorderRadius.circular(5),
                                                  border: Border.all(
                                                      width: 2,
                                                      color: Theme.of(context)
                                                          .primaryColor)),
                                              child: Center(
                                                child: Text("Connect a new device"),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ));
                            } else if (snapshotprofile.data!.docs.first
                            //TODO
                            //change for calibrator
                                .get("roleId") == RoleManager(rolId: '').STAHT_ADMIN_ROLE_ID) {
                              return Scaffold(
                                  appBar: AppBar(
                                    leading: Padding(
                                      padding: const EdgeInsets.all(8.0),
                                      child: Icon(
                                        Icons.account_box_outlined,
                                        color: Colors.white,
                                      ),
                                    ),
                                    title: Text(snapshotprofile.data!.docs.first
                                        .get("displayName")),
                                  ),
                                  body: Stack(
                                    children: [
                                      Align(
                                        alignment: Alignment.topCenter,
                                        child: Padding(
                                          padding: EdgeInsets.all(8.0),
                                          child: Container(
                                            width: MediaQuery.of(context).size.width,
                                            height:
                                            (MediaQuery.of(context).size.height -
                                                160) /
                                                2,
                                            decoration: BoxDecoration(
                                                borderRadius:
                                                BorderRadius.circular(5),
                                                border: Border.all(
                                                    width: 2,
                                                    color: Theme.of(context)
                                                        .primaryColor)),
                                            child: Column(
                                              mainAxisAlignment:
                                              MainAxisAlignment.start,
                                              children: [
                                                ListTile(
                                                  title: Text(
                                                    "Calibrations",
                                                    style: TextStyle(
                                                      color: Colors.blue,
                                                    ),
                                                  ),
                                                  leading: Icon(
                                                    Icons.add,
                                                    color: Colors.blue,
                                                  ),
                                                ),
                                                StreamBuilder(
                                                    stream: FirebaseFirestore.instance
                                                        .collection("calibrations")
                                                        .where("calibrationAdmin",
                                                        isEqualTo: snapshotprofile
                                                            .data!.docs.first
                                                            .get("parent"))
                                                        .snapshots(),
                                                    builder: (BuildContext context,
                                                        AsyncSnapshot<QuerySnapshot>
                                                        snapshot) {
                                                      if (snapshot.hasData) {
                                                        return ListView.builder(
                                                            shrinkWrap: true,
                                                            itemCount: snapshot
                                                                .data!.docs.length,
                                                            itemBuilder: (BuildContext
                                                            ctxt,
                                                                int index) =>
                                                                ListTile(
                                                                  leading: Icon(
                                                                    Icons
                                                                        .account_box_outlined,
                                                                    color: Theme.of(
                                                                        context)
                                                                        .primaryColor,
                                                                  ),
                                                                  title: Text(snapshot
                                                                      .data!
                                                                      .docs[index]
                                                                      .id),
                                                                ));

                                                      } else {
                                                        return Center(
                                                          child: Text("No records"),
                                                        );
                                                      }
                                                    }),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                      Positioned(
                                        top: ((MediaQuery.of(context).size.height -
                                            160) /
                                            2) +
                                            10,
                                        bottom: 60,
                                        left: 0,
                                        right: 0,
                                        child: Padding(
                                          padding: EdgeInsets.all(8.0),
                                          child: Container(
                                            width: MediaQuery.of(context).size.width,
                                            height:
                                            (MediaQuery.of(context).size.height -
                                                160) /
                                                2,
                                            decoration: BoxDecoration(
                                                borderRadius:
                                                BorderRadius.circular(5),
                                                border: Border.all(
                                                    width: 2,
                                                    color: Theme.of(context)
                                                        .primaryColor)),
                                            child: Column(
                                              mainAxisAlignment:
                                              MainAxisAlignment.start,
                                              children: [
                                                ListTile(
                                                  title: Text(
                                                    "Connected Devices",
                                                    style: TextStyle(
                                                      color: Colors.blue,
                                                    ),
                                                  ),
                                                  leading: Icon(
                                                    Icons.add,
                                                    color: Colors.blue,
                                                  ),
                                                ),
                                                StreamBuilder<BluetoothState>(
                                                    stream:
                                                    FlutterBlue.instance.state,
                                                    initialData:
                                                    BluetoothState.unknown,
                                                    builder: (c, snapshot) {
                                                      final state = snapshot.data;
                                                      if (state ==
                                                          BluetoothState.on) {
                                                        // return Text("Blutooth on");
                                                        return StreamBuilder<
                                                            List<BluetoothDevice>>(
                                                          stream: Stream.periodic(
                                                              Duration(
                                                                  seconds: 0))
                                                              .asyncMap((_) =>
                                                          FlutterBlue.instance
                                                              .connectedDevices),
                                                          initialData: [],
                                                          builder: (c, snapshot) {
                                                            if (snapshot.hasData &&
                                                                snapshot.data!.length >
                                                                    0) {
                                                              return Column(
                                                                children:
                                                                snapshot.data!
                                                                    .map((d) =>
                                                                    ListTile(
                                                                      onTap:
                                                                          () {},
                                                                      title: Text(
                                                                          d.name),
                                                                      subtitle: Text(d
                                                                          .id
                                                                          .toString()),
                                                                      trailing:
                                                                      StreamBuilder<BluetoothDeviceState>(
                                                                        stream:
                                                                        d.state,
                                                                        initialData:
                                                                        BluetoothDeviceState.disconnected,
                                                                        builder:
                                                                            (c, snapshot) {
                                                                          if (snapshot.data ==
                                                                              BluetoothDeviceState.connected) {
                                                                            return InkWell(
                                                                              onTap: () {
                                                                                Navigator.of(context).push(MaterialPageRoute(builder: (context) {
                                                                                  d.connect(autoConnect: true);
                                                                                  return ConnectedDevicePage(calibratorID: snapshotprofile.data!.docs.first
                                                                                      .get("parent"),firestore: FirebaseFirestore.instance, userBody: snapshotprofile.data!.docs.first, device: d, auth: _auth,);
                                                                                  //return DeviceScreenLessDetails(r.device);
                                                                                }));
                                                                              },
                                                                              child: Text(
                                                                                "Open Settings",
                                                                                style: TextStyle(color: Theme.of(context).primaryColor),
                                                                              ),
                                                                            );

                                                                          }
                                                                          return Text(snapshot.data.toString());
                                                                        },
                                                                      ),
                                                                    ))
                                                                    .toList(),
                                                              );
                                                            } else {
                                                              return ListTile(
                                                                onTap: () {
                                                                  FlutterBlue.instance
                                                                      .startScan(
                                                                      timeout: Duration(
                                                                          seconds:
                                                                          4));
                                                                  showDialog<void>(
                                                                      context:
                                                                      context,
                                                                      builder:
                                                                          (context) =>
                                                                          SimpleDialog(
                                                                            children: [
                                                                              StreamBuilder<List<ScanResult>>(
                                                                                stream: FlutterBlue.instance.scanResults,
                                                                                initialData: [],
                                                                                builder: (c, snapshot) {
                                                                                  //  updateData(snapshot.data);
                                                                                  FirebaseFirestore firestore;
                                                                                  //  Database(firestore: firestore).addData(snapshot.data);

                                                                                  return Column(
                                                                                    children: snapshot.data!
                                                                                        .map(
                                                                                          (r) => ScanResultTile(
                                                                                        result: r,
                                                                                        onTap: () {
                                                                                          r.device.connect(autoConnect: false).then((value) async{
                                                                                            Navigator.pop(context);
                                                                                            SharedPreferences sf =await SharedPreferences.getInstance();
                                                                                            String index6;
                                                                                            String index2;


                                                                                            void initDeviceSlAndCalibDate() async {

                                                                                              Duration waitingDuration = Duration(milliseconds: 50);

                                                                                              List<BluetoothService> allService = await r.device.services.first;
                                                                                              // print(allService.length.toString());


                                                                                              dynamic readWrite = await OsDependentSettings().getReadWriteCharacters(device: r.device);

                                                                                              BluetoothCharacteristic read = readWrite["read"];

                                                                                              BluetoothCharacteristic write = readWrite["write"];




                                                                                              getIndex6()async{
                                                                                                await Future.delayed(waitingDuration);

                                                                                                allService = await r.device.services.first;
                                                                                                print(allService.length.toString());

                                                                                                dynamic readWrite = await OsDependentSettings().getReadWriteCharacters(device: r.device);

                                                                                                read = readWrite["read"];

                                                                                                write = readWrite["write"];






                                                                                                await write.write(StringToASCII(COMMAND_INDEX_6_GET_),
                                                                                                    withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                await read.read();
                                                                                                await write.write(StringToASCII(COMMAND_INDEX_6_GET_),
                                                                                                    withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                List<int> responseAray6 = await read.read();
                                                                                                String responseInString6 = utf8.decode(responseAray6);
                                                                                                String data6 =
                                                                                                removeCodesFromStrings(responseInString6, COMMAND_INDEX_6_GET_);
                                                                                                print("2 " + data6);
                                                                                                String g = "ok";




                                                                                                index6 = data6;
                                                                                                sf.setString("index6", data6);

                                                                                                if(index6.length == 0){
                                                                                                  try{
                                                                                                    await getIndex6();
                                                                                                  }catch(e){
                                                                                                    await Future.delayed(waitingDuration);
                                                                                                    await getIndex6();
                                                                                                  }
                                                                                                }
                                                                                              }


                                                                                              //await widget.d.disconnect();


                                                                                              getIndex1()async{
                                                                                                await Future.delayed(waitingDuration);

                                                                                                await write.write(StringToASCII(COMMAND_INDEX_2_GET_),
                                                                                                    withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                await read.read();
                                                                                                await write.write(StringToASCII(COMMAND_INDEX_2_GET_),
                                                                                                    withoutResponse: OsDependentSettings().writeWithresponse);
                                                                                                List<int> responseAray2 = await read.read();
                                                                                                String responseInString = utf8.decode(responseAray2);
                                                                                                String data =
                                                                                                removeCodesFromStrings(responseInString, COMMAND_INDEX_2_GET_);
                                                                                                print("2 " + data);


                                                                                                index2 = data;
                                                                                                sf.setString("index2", data);

                                                                                                if(index2.length == 0){
                                                                                                  try{
                                                                                                    await getIndex1();
                                                                                                  }catch(e){
                                                                                                    await Future.delayed(waitingDuration);
                                                                                                    await getIndex1();
                                                                                                  }





                                                                                                }else{
                                                                                                  try{
                                                                                                    await getIndex6();
                                                                                                  }catch(e){
                                                                                                    await Future.delayed(waitingDuration);
                                                                                                    await getIndex6();
                                                                                                  }
                                                                                                }
                                                                                              }

                                                                                              try{
                                                                                                await getIndex1();
                                                                                              }catch(e){
                                                                                                await Future.delayed(waitingDuration);
                                                                                                await getIndex1();
                                                                                              }




                                                                                            }
                                                                                            initDeviceSlAndCalibDate();

                                                                                          });
                                                                                          //return Text("ok");
                                                                                          //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                                                          //   return PerformTestPageActivity(device: r.device, project: "", index2: '',);
                                                                                          Navigator.pop(context);
                                                                                          //return ConnectedDevicePage(device: r.device);
                                                                                          //return DeviceScreenLessDetails(r.device);
                                                                                        },
                                                                                      ),
                                                                                      //     (r) => ScanResultTile(
                                                                                      //   result: r,
                                                                                      //   onTap: () => Navigator.of(context)
                                                                                      //       .push(MaterialPageRoute(builder: (context) {
                                                                                      //     r.device.connect(autoConnect: false);
                                                                                      //     //return Text("ok");
                                                                                      //  //   return   PerformTestPage(device: r.device,project: widget.projectID,);
                                                                                      //     return   PerformTestPage(device: r.device,project:"o",);
                                                                                      //     Navigator.pop(context);
                                                                                      //     //return ConnectedDevicePage(device: r.device);
                                                                                      //     //return DeviceScreenLessDetails(r.device);
                                                                                      //   })),
                                                                                      // ),
                                                                                    )
                                                                                        .toList(),
                                                                                  );
                                                                                },
                                                                              )
                                                                            ],
                                                                          ));
                                                                },
                                                                title: Text(
                                                                    "No Device is Connected"),
                                                                trailing: Text(
                                                                  "Scan",
                                                                  style: TextStyle(
                                                                      color: Colors
                                                                          .blue),
                                                                ),
                                                              );
                                                            }
                                                          },
                                                        );
                                                      }
                                                      return ListTile(
                                                        title:
                                                        Text("Turn on Blutooth"),
                                                        trailing: Icon(
                                                          Icons.bluetooth_disabled,
                                                          color: Theme.of(context)
                                                              .primaryColor,
                                                        ),
                                                      );
                                                      //return BluetoothOffScreen(state: state);
                                                    }),
                                              ],
                                            ),
                                          ),
                                        ),
                                      ),
                                      Align(
                                        alignment: Alignment.bottomCenter,
                                        child: Padding(
                                          padding: EdgeInsets.all(8.0),
                                          child: Container(
                                            height: 50,
                                            decoration: BoxDecoration(
                                                borderRadius:
                                                BorderRadius.circular(5),
                                                border: Border.all(
                                                    width: 2,
                                                    color: Theme.of(context)
                                                        .primaryColor)),
                                            child: Center(
                                              child: Text("Connect a new device"),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ));
                            } else {
                              return Scaffold(
                                body: Text("Unsupported user"),
                              );
                            }
                          } else {
                            return Scaffold(
                              body: Text("Pease wait"),
                            );
                          }
                        } else {
                          return Scaffold(
                            body: Text("Pease wait"),
                          );
                        }
                      });
                  */
                }
              }
            //Auth stream
          );
          });



  }



}

class CommonUiForAllActivity extends StatefulWidget {
  List<Widget> allTabs = [];
  List<Widget> allTabBody = [];
  dynamic permissions;
  FirebaseFirestore firestore;
  FirebaseAuth auth;
  dynamic profileBody;

  CommonUiForAllActivity(
      {required this.firestore, this.profileBody, required this.auth, this.permissions});

  @override
  _CommonUiForAllActivityState createState() => _CommonUiForAllActivityState();
}

class _CommonUiForAllActivityState extends State<CommonUiForAllActivity> {
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    List<Widget> tempAllTabs = [];
    List<Widget> tempAllTabsBody = [];

    WidgetsBinding.instance!.addPostFrameCallback((_) {
      if (widget.permissions["permission_can_view_calibration_admin_panel"] !=
              null &&
          widget.permissions["permission_can_view_calibration_admin_panel"] ==
              true) {
        tempAllTabs.add(
          Tab(
            text: "Calibration Partners",
          ),
        );
        List<Widget> allWids = [];

        // if(widget.permissions["permission_can_create_calibration_admin_panel"]){
        //   allWids.add(InkWell(child: Padding(padding: EdgeInsets.all(10),child: Container(decoration: BoxDecoration(color: Theme.of(context).primaryColor,borderRadius: BorderRadius.all(Radius.circular(4))),width: MediaQuery.of(context).size.width,child: Padding(
        //     padding: const EdgeInsets.all(8.0),
        //     child: Center(child: Text("Create Calibration Panel",style: TextStyle(color: Colors.white),)),
        //   )),),));
        // }
        allWids.add(prepareMyCalibrationPaneel(
            profile: widget.profileBody, firestore: widget.firestore));
        tempAllTabsBody.add(Column(
          children: allWids,
        ));
      }

      if (widget.permissions["permission_can_view_tenants"] != null &&
          widget.permissions["permission_can_view_tenants"] == true) {
        tempAllTabs.add(
          Tab(
            text: "Tenants",
          ),
        );
        List<Widget> allWids = [];

        // if(widget.permissions["permission_can_create_calibration_admin_panel"]){
        //   allWids.add(InkWell(child: Padding(padding: EdgeInsets.all(10),child: Container(decoration: BoxDecoration(color: Theme.of(context).primaryColor,borderRadius: BorderRadius.all(Radius.circular(4))),width: MediaQuery.of(context).size.width,child: Padding(
        //     padding: const EdgeInsets.all(8.0),
        //     child: Center(child: Text("Create Calibration Panel",style: TextStyle(color: Colors.white),)),
        //   )),),));
        // }
        allWids.add(prepareAllTenants(
            profile: widget.profileBody, firestore: widget.firestore));
        tempAllTabsBody.add(Column(
          children: allWids,
        ));
      } else if (widget.permissions["permission_can_view_customers"] != null &&
          widget.permissions["permission_can_view_customers"] == true) {
        tempAllTabs.add(
          Tab(
            text: "Customers",
          ),
        );
        List<Widget> allWids = [];

        // if(widget.permissions["permission_can_create_calibration_admin_panel"]){
        //   allWids.add(InkWell(child: Padding(padding: EdgeInsets.all(10),child: Container(decoration: BoxDecoration(color: Theme.of(context).primaryColor,borderRadius: BorderRadius.all(Radius.circular(4))),width: MediaQuery.of(context).size.width,child: Padding(
        //     padding: const EdgeInsets.all(8.0),
        //     child: Center(child: Text("Create Calibration Panel",style: TextStyle(color: Colors.white),)),
        //   )),),));
        // }

        String parentId = widget.profileBody["parentId"];

        var wid = FutureBuilder<DocumentSnapshot>(
            future: widget.firestore.collection("tenants").doc(parentId).get(),
            builder: (c, snapshot) {
              if (snapshot.hasData) {
                return viewTenantDefailInfo(parentId, snapshot.data!.get);
              } else {
                return Text("Please wait");
              }
            });
        allWids.add(wid);
        tempAllTabsBody.add(Column(
          children: allWids,
        ));
      }

      setState(() {
        widget.allTabBody = tempAllTabsBody;
        widget.allTabs = tempAllTabs;
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: DefaultTabController(
        length: widget.allTabs.length,
        child: Scaffold(
          drawer: Container(
            width: 300,
            color: Colors.white,
            child: Padding(
              padding: const EdgeInsets.fromLTRB(0, 30, 0, 0),
              child: Column(
                children: [
                  ListTile(
                    onTap: () {
                      widget.auth.signOut();
                    },
                    leading: Icon(
                      Icons.logout,
                    ),
                    title: Text("Logout"),
                  )
                ],
              ),
            ),
          ),
          appBar: AppBar(
            bottom: TabBar(
              tabs: widget.allTabs,
            ),
            title: Text(widget.permissions["roleName"]),
          ),
          body: TabBarView(
            children: widget.allTabBody,
          ),
        ),
      ),
    );
  }

  Widget prepareMyCalibrationPaneel(
      {dynamic profile, required FirebaseFirestore firestore}) {
    Stream<QuerySnapshot<Object>> st = profile["parentType"] == "admin"
        ? firestore
            .collection("calibAdmins")
            .where("userGroup", isEqualTo: "admin")
            .snapshots()
        : firestore
            .collection("calibAdmins")
            .where("userGroup", isEqualTo: profile["parentType"])
            .where("groupId", isEqualTo: profile["parentId"])
            .snapshots();
    return StreamBuilder<QuerySnapshot>(
        stream: st,
        builder: (c, snapshotCalibAdmins) {
          if (snapshotCalibAdmins.hasData) {
            if (snapshotCalibAdmins.data!.docs.length > 0) {
              return ListView.builder(
                  shrinkWrap: true,
                  itemCount: snapshotCalibAdmins.data == null
                      ? 0
                      : snapshotCalibAdmins.data!.docs.length,
                  itemBuilder: (context, index) {
                    return ListTile(
                        title: Text(snapshotCalibAdmins.data!.docs[index]
                            .get("company_name")),
                        subtitle: Text(
                          snapshotCalibAdmins.data!.docs[index]
                              .get("company_address"),
                        ));
                  });
            } else {
              return Text("No Admin Panel Created");
            }
          } else {
            return Center(
              child: CircularProgressIndicator(),
            );
          }
        });
    // return  FutureBuilder<DocumentSnapshot>(
    //       future: Api().fetchOnerecordWithFirestore(
    //           firestore: customerFirestore, id: id),
    //       builder: (c, snapshotRecord) {
    //         if (snapshotRecord.hasData && snapshotRecord.data.exists) {});
  }

  Widget prepareAllTenants({dynamic profile, required FirebaseFirestore firestore}) {
    return StreamBuilder(
      stream: widget.firestore.collection("tenants").snapshots(),
      // stream: widget.firestore.collection("users").snapshots(),
      builder: (BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
        if (snapshot.connectionState == ConnectionState.active) {
          if (snapshot.data == null) {
            return Text("wait");
          } else {
            print(snapshot.data!.docs.length.toString());

            // return Text(snapshot.data.docs.length.toString());

            return Padding(
              padding: const EdgeInsets.all(0.0),
              child: ListView.builder(
                shrinkWrap: true,
                itemCount:
                    snapshot.data == null ? 0 : snapshot.data!.docs.length,
                itemBuilder: (context, index) {
                  String tenant_id = snapshot.data!.docs[index].id;
                  return  ListTile(title: Text("NO"),);
                  //
                  // return ListTile(
                  //   onTap: () {
                  //     Navigator.push(
                  //       context,
                  //       MaterialPageRoute(
                  //           builder: (context) => Scaffold(
                  //                 appBar: AppBar(
                  //                   actions: [
                  //                     InkWell(
                  //                       onTap: () {
                  //                         return showDialog<void>(
                  //                           context: context,
                  //                           barrierDismissible: false,
                  //                           // user must tap button!
                  //                           builder: (BuildContext context) {
                  //                             return AlertDialog(
                  //                               title: Text('Tenant Delete'),
                  //                               content: SingleChildScrollView(
                  //                                 child: ListBody(
                  //                                   children: <Widget>[
                  //                                     Text('Do you want to DELETE this tenant?'),
                  //                                   ],
                  //                                 ),
                  //                               ),
                  //                               actions: <Widget>[
                  //                                 TextButton(
                  //                                   child: Text('Yes'),
                  //                                   onPressed: () {
                  //                                     widget.firestore
                  //                                         .collection("tenants")
                  //                                         .doc(tenant_id)
                  //                                         .delete()
                  //                                         .then((value) {
                  //                                       Navigator.of(context)
                  //                                           .pop();
                  //                                       Navigator.of(context)
                  //                                           .pop();
                  //                                     });
                  //                                   },
                  //                                 ),
                  //                                 TextButton(
                  //                                   child: Text('No'),
                  //                                   onPressed: () {
                  //                                     Navigator.of(context)
                  //                                         .pop();
                  //                                   },
                  //                                 ),
                  //                               ],
                  //                             );
                  //                           },
                  //                         );
                  //                       },
                  //                       child: Padding(
                  //                         padding: EdgeInsets.all(10),
                  //                         child: Icon(Icons.delete),
                  //                       ),
                  //                     )
                  //                   ],
                  //                   title: Text(snapshot.data.docs[index]
                  //                       .get("displayName")),
                  //                 ),
                  //                 body: SingleChildScrollView(
                  //                   child: Column(
                  //                     mainAxisAlignment:
                  //                         MainAxisAlignment.start,
                  //                     crossAxisAlignment:
                  //                         CrossAxisAlignment.start,
                  //                     children: [
                  //                       viewTenantDefailInfo(tenant_id,
                  //                           snapshot.data.docs[index].get),
                  //                     ],
                  //                   ),
                  //                 ),
                  //               )),
                  //     );
                  //
                  //     //TenantHomeUIByAdmin
                  //   },
                  //   leading: Container(
                  //     width: 40,
                  //     height: 40,
                  //     child: Stack(
                  //       children: [
                  //         Align(
                  //           alignment: Alignment.center,
                  //           child: Card(
                  //             shape: RoundedRectangleBorder(
                  //               borderRadius: BorderRadius.circular(20.0),
                  //             ),
                  //             color: Colors.grey,
                  //             child: Container(
                  //               width: 40,
                  //               height: 40,
                  //             ),
                  //           ),
                  //         ),
                  //         Align(
                  //           alignment: Alignment.center,
                  //           child: Icon(
                  //             Icons.home,
                  //             color: Colors.white,
                  //           ),
                  //         ),
                  //       ],
                  //     ),
                  //   ),
                  //   trailing: Icon(Icons.chevron_right),
                  //   title: Text(snapshot.data.docs[index].get("displayName")),
                  //   subtitle: Wrap(
                  //     children: [
                  //       StreamBuilder<QuerySnapshot>(
                  //           stream: widget.firestore
                  //               .collection("customers")
                  //               .where("parent", isEqualTo: tenant_id)
                  //               .snapshots(),
                  //           builder: (c, snapshotRecord) {
                  //             if (snapshotRecord.hasData) {
                  //               //return Text("ik", style: TextStyle(fontSize: 30));
                  //               return Text(
                  //                 snapshotRecord.data.size.toString() +
                  //                     " customers ",
                  //                 style: TextStyle(),
                  //               );
                  //             } else {
                  //               return Center(
                  //                 child: CircularProgressIndicator(),
                  //               );
                  //             }
                  //           }),
                  //       StreamBuilder(
                  //           stream: widget.firestore
                  //               .collection("users")
                  //               .where("parentType", isEqualTo: "tenant")
                  //               .where("parentId", isEqualTo: tenant_id)
                  //               .snapshots(),
                  //           // stream: widget.firestore.collection("users").snapshots(),
                  //           builder: (BuildContext context,
                  //               AsyncSnapshot<QuerySnapshot> usersnapshot) {
                  //             if (usersnapshot.hasData &&
                  //                 usersnapshot.data.docs.length > 0) {
                  //               return Text(
                  //                   usersnapshot.data.docs.length.toString() +
                  //                       " users");
                  //             } else {
                  //               return Text("No Users");
                  //             }
                  //           }),
                  //     ],
                  //   ),
                  // );
                },
              ),
            );
          }
        } else {
          return const Center(
            child: Text("Loading..."),
          );
        }
      },
    );
  }

  Widget viewTenantDefailInfo(String tenant_id, dynamic tenantBody) {
    return Column(
      children: [
        Wrap(
          children: [
            //first is pending
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_customers"] !=
                        null &&
                    widget.permissions["permission_can_view_customers"] == true)
                ? Container(
                    width: 500,
                    child: Padding(
                      padding: EdgeInsets.all(5),
                      child: Card(
                        elevation: 8,
                        color: Colors.white,
                        child: Container(
                          // width: ((MediaQuery.of(context).size.width - 350) * 0.5) > 340 ? ((MediaQuery.of(context).size.width - 350) * 0.5) : 340,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Container(
                                width: MediaQuery.of(context).size.width,
                                color: Theme.of(context).primaryColor,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.fromLTRB(20, 10, 10, 10),
                                  child: Text(
                                    "Customers",
                                    style: TextStyle(color: Colors.white),
                                  ),
                                ),
                              ),
                              //Text(tenant_id),
                              StreamBuilder(
                                  stream: widget.firestore
                                      .collection("customers")
                                      .where("parent", isEqualTo: tenant_id)
                                      .snapshots(),
                                  // stream: widget.firestore.collection("users").snapshots(),
                                  builder: (BuildContext context,
                                      AsyncSnapshot<QuerySnapshot>
                                          usersnapshot) {
                                    if (usersnapshot.hasData &&
                                        usersnapshot.data!.docs.length > 0) {
                                      return Padding(
                                        padding: const EdgeInsets.all(8.0),
                                        child: ListView.builder(
                                            shrinkWrap: true,
                                            itemCount:
                                                usersnapshot.data!.docs.length,
                                            itemBuilder: (context, index) {
                                              return ListTile(
                                                onTap: () {
                                                  Navigator.push(
                                                    context,
                                                    MaterialPageRoute(
                                                        builder:
                                                            (context) =>
                                                                Scaffold(
                                                                  appBar:
                                                                      AppBar(
                                                                    title: Text(usersnapshot
                                                                        .data!
                                                                        .docs[
                                                                            index]
                                                                        .get(
                                                                            "prjectName")),
                                                                  ),
                                                                  body:
                                                                      SingleChildScrollView(
                                                                    child: showCustomerDetails(
                                                                        tenantBody,
                                                                        usersnapshot
                                                                            .data!
                                                                            .docs[
                                                                                index]
                                                                            .get,
                                                                        usersnapshot
                                                                            .data!
                                                                            .docs[index]
                                                                            .id),
                                                                  ),
                                                                )),
                                                  );

                                                  /*
                                                                                                                            print(usersnapshot.data.docs[index].get["uid"]);
                                                                                                                            try {
                                                                                                                              Api().deleteUser(uid: usersnapshot.data.docs[index].get["uid"]).then((value) {
                                                                                                                                print("tt");
                                                                                                                              });
                                                                                                                              widget.firestore.collection("users").where("uid", isEqualTo: usersnapshot.data.docs[index].get["uid"]).get().then((value) {
                                                                                                                                widget.firestore.collection("users").doc(value.docs.first.id).delete().then((value) {
                                                                                                                                  print("delete done 1");
                                                                                                                                });
                                                                                                                              });
                                                                                                                            } catch (e) {
                                                                                                                              widget.firestore.collection("users").where("uid", isEqualTo: usersnapshot.data.docs[index].get["uid"]).get().then((value) {
                                                                                                                                widget.firestore.collection("users").doc(value.docs.first.id).delete().then((value) {
                                                                                                                                  print("delete done 2");
                                                                                                                                });
                                                                                                                              });
                                                                                                                            }
                                                                                                                            */
                                                },
                                                leading:
                                                    Icon(Icons.tag_faces_sharp),
                                                trailing: InkWell(
                                                    onTap: () {},
                                                    child: Icon(
                                                        Icons.navigate_next)),
                                                title: Text(usersnapshot.data!
                                                    .docs[index]["prjectName"]),

                                                // subtitle: Text(usersnapshot.data.docs[index]["roleId"]),
                                              );

                                            }),
                                      );
                                    } else {
                                      return Center(child: Text("No Users"));
                                    }
                                  }),
                            ],
                          ),
                        ),
                      ),
                    ))
                : emptyContainer,
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_tenant_users"] !=
                        null &&
                    widget.permissions["permission_can_view_tenant_users"] ==
                        true)
                ? Container(
                    width: 500,
                    child: Padding(
                      padding: EdgeInsets.all(5),
                      child: Card(
                        elevation: 8,
                        color: Colors.white,
                        child: Container(
                          // width: ((MediaQuery.of(context).size.width - 350) * 0.5) > 340 ? ((MediaQuery.of(context).size.width - 350) * 0.5) : 340,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Container(
                                width: MediaQuery.of(context).size.width,
                                color: Theme.of(context).primaryColor,
                                child: Padding(
                                  padding:
                                      const EdgeInsets.fromLTRB(20, 10, 0, 10),
                                  child: Text(
                                    "Users",
                                    style: TextStyle(color: Colors.white),
                                  ),
                                ),
                              ),
                              StreamBuilder(
                                  stream: widget.firestore
                                      .collection("users")
                                      .where("parentType", isEqualTo: "tenant")
                                      .where("parentId", isEqualTo: tenant_id)
                                      .snapshots(),
                                  // stream: widget.firestore.collection("users").snapshots(),
                                  builder: (BuildContext context,
                                      AsyncSnapshot<QuerySnapshot>
                                          usersnapshot) {
                                    if (usersnapshot.hasData &&
                                        usersnapshot.data!.docs.length > 0) {
                                      return Padding(
                                        padding: const EdgeInsets.all(8.0),
                                        child: ListView.builder(
                                            shrinkWrap: true,
                                            itemCount:
                                                usersnapshot.data!.docs.length,
                                            itemBuilder: (context, index) {
                                              return ListTile(
                                                leading:
                                                    Icon(Icons.tag_faces_sharp),
                                                trailing: (widget
                                                                .permissions !=
                                                            null &&
                                                        widget.permissions[
                                                                "permission_can_delete_tenant_users"] !=
                                                            null &&
                                                        widget.permissions[
                                                                "permission_can_delete_tenant_users"] ==
                                                            true)
                                                    ? InkWell(
                                                        onTap: () {
                                                          // return showDialog<
                                                          //     void>(
                                                          //   context: context,
                                                          //   barrierDismissible:
                                                          //       false,
                                                          //   // user must tap button!
                                                          //   builder:
                                                          //       (BuildContext
                                                          //           context) {
                                                          //     return AlertDialog(
                                                          //       title: Text(
                                                          //           'Tenant Delete'),
                                                          //       content:
                                                          //           SingleChildScrollView(
                                                          //         child:
                                                          //             ListBody(
                                                          //           children: <
                                                          //               Widget>[
                                                          //             Text(
                                                          //                 'Do you want to DELETE this user?'),
                                                          //           ],
                                                          //         ),
                                                          //       ),
                                                          //       actions: <
                                                          //           Widget>[
                                                          //         TextButton(
                                                          //           child: Text(
                                                          //               'Yes'),
                                                          //           onPressed:
                                                          //               () {
                                                          //             print(usersnapshot
                                                          //                 .data
                                                          //                 .docs[
                                                          //                     index]
                                                          //                 .get(
                                                          //                     "uid"));
                                                          //             try {
                                                          //               // Api()
                                                          //               //     .deleteUser(uid: usersnapshot.data.docs[index].get["uid"])
                                                          //               //     .then((value) {
                                                          //               //   print(
                                                          //               //       "tt");
                                                          //               // });
                                                          //               widget
                                                          //                   .firestore
                                                          //                   .collection(
                                                          //                       "users")
                                                          //                   .where("uid",
                                                          //                       isEqualTo: usersnapshot.data.docs[index].get("uid"))
                                                          //                   .get()
                                                          //                   .then((value) {
                                                          //                 widget
                                                          //                     .firestore
                                                          //                     .collection("users")
                                                          //                     .doc(value.docs.first.id)
                                                          //                     .delete()
                                                          //                     .then((value) {
                                                          //                   Navigator.of(context).pop();
                                                          //                 });
                                                          //               });
                                                          //             } catch (e) {
                                                          //               widget
                                                          //                   .firestore
                                                          //                   .collection(
                                                          //                       "users")
                                                          //                   .where("uid",
                                                          //                       isEqualTo: usersnapshot.data.docs[index].get("uid"))
                                                          //                   .get()
                                                          //                   .then((value) {
                                                          //                 widget
                                                          //                     .firestore
                                                          //                     .collection("users")
                                                          //                     .doc(value.docs.first.id)
                                                          //                     .delete()
                                                          //                     .then((value) {
                                                          //                   Navigator.of(context).pop();
                                                          //                 });
                                                          //               });
                                                          //             }
                                                          //           },
                                                          //         ),
                                                          //         TextButton(
                                                          //           child: Text(
                                                          //               'No'),
                                                          //           onPressed:
                                                          //               () {
                                                          //             Navigator.of(
                                                          //                     context)
                                                          //                 .pop();
                                                          //           },
                                                          //         ),
                                                          //       ],
                                                          //     );
                                                          //   },
                                                          // );
                                                        },
                                                        child:
                                                            Icon(Icons.delete))
                                                    : Container(
                                                        width: 0,
                                                        height: 0,
                                                      ),
                                                title: Text(usersnapshot
                                                        .data!.docs[index]
                                                    ["displayName"]),
                                                subtitle: FutureBuilder<
                                                        QuerySnapshot>(
                                                    future: widget.firestore
                                                        .collection("roles")
                                                        .where("id",
                                                            isEqualTo: usersnapshot
                                                                    .data!
                                                                    .docs[index]
                                                                ["roleId"])
                                                        .get(),
                                                    builder:
                                                        (c, snapshotRecord) {
                                                      if (snapshotRecord
                                                          .hasData) {
                                                        return Row(
                                                          children: [
                                                            Padding(
                                                              padding:
                                                                  const EdgeInsets
                                                                          .fromLTRB(
                                                                      0,
                                                                      0,
                                                                      10,
                                                                      0),
                                                              child: Text(
                                                                usersnapshot.data!
                                                                            .docs[
                                                                        index]
                                                                    ["email"],
                                                                style: TextStyle(
                                                                    color: Colors
                                                                        .black),
                                                              ),
                                                            ),
                                                            Text(snapshotRecord
                                                                .data!.docs.first
                                                                .get(
                                                                    "roleName")),
                                                          ],
                                                        );

                                                      } else {
                                                        return Text(
                                                            "Please wait");
                                                      }
                                                    }),

                                                // subtitle: Text(usersnapshot.data.docs[index]["roleId"]),
                                              );

                                            }),
                                      );
                                    } else {
                                      return Center(child: Text("No Users"));
                                    }
                                  }),
                            ],
                          ),
                        ),
                      ),
                    ))
                : emptyContainer,
          ],
        ),
      ],
    );
  }

  Widget showCustomerDetails(
      dynamic tenantBody, dynamic customerBody, String customerId) {
    return Column(
      mainAxisAlignment: MainAxisAlignment.start,
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        // Stack(
        //   children: [
        //     Align(
        //       alignment: Alignment.centerLeft,
        //       child: Padding(
        //         padding: const EdgeInsets.all(3.0),
        //         child: Card(
        //           color: Colors.white,
        //           child: Padding(
        //             padding: const EdgeInsets.all(8.0),
        //             child: Wrap(
        //               //  mainAxisAlignment: MainAxisAlignment.start,
        //               // crossAxisAlignment: CrossAxisAlignment.center,
        //               children: [
        //                 InkWell(
        //                     onTap: () {
        //                       Navigator.pop(context);
        //                     },
        //                     child: Text(
        //                       tenantBody["displayName"] +
        //                           " " +
        //                           tenantBody["displayName"],
        //                       style: TextStyle(
        //                           color: Colors.blue,
        //                           fontWeight: FontWeight.bold),
        //                     )),
        //                 Icon(
        //                   Icons.navigate_next,
        //                   color: Theme.of(context).primaryColor,
        //                 ),
        //                 Text(" " + customerBody["prjectName"])
        //               ],
        //             ),
        //           ),
        //         ),
        //       ),
        //     ),
        //     Align(
        //       alignment: Alignment.centerRight,
        //       child: InkWell(
        //         onTap: () {},
        //         child: Padding(
        //           padding: const EdgeInsets.all(5.0),
        //           child: InkWell(
        //             onTap: () {
        //               return showDialog<void>(
        //                 context: context,
        //                 barrierDismissible: false,
        //                 // user must tap button!
        //                 builder: (BuildContext context) {
        //                   return AlertDialog(
        //                     title: Text('Delete Customer'),
        //                     content: SingleChildScrollView(
        //                       child: ListBody(
        //                         children: <Widget>[
        //                           Text(
        //                               'Do you want to DELETE this Customer?'),
        //                         ],
        //                       ),
        //                     ),
        //                     actions: <Widget>[
        //                       TextButton(
        //                         child: Text('Yes'),
        //                         onPressed: () {
        //                           widget.firestore
        //                               .collection("customers")
        //                               .doc(customerId)
        //                               .delete()
        //                               .then((value) {
        //                             Navigator.of(context).pop();
        //                             Navigator.of(context).pop();
        //                           });
        //                         },
        //                       ),
        //                       TextButton(
        //                         child: Text('No'),
        //                         onPressed: () {
        //                           Navigator.of(context).pop();
        //                         },
        //                       ),
        //                     ],
        //                   );
        //                 },
        //               );
        //             },
        //             child: Card(
        //               elevation: 8,
        //               color: Colors.redAccent,
        //               child: Wrap(
        //                 children: [
        //                   Padding(
        //                     padding: const EdgeInsets.all(8.0),
        //                     child: Text(
        //                       "Delete Customer",
        //                       style: TextStyle(color: Colors.white),
        //                     ),
        //                   ),
        //                   Padding(
        //                     padding: const EdgeInsets.all(8.0),
        //                     child: Icon(
        //                       Icons.delete_rounded,
        //                       color: Colors.white,
        //                     ),
        //                   )
        //                 ],
        //               ),
        //             ),
        //           ),
        //         ),
        //       ),
        //     )
        //   ],
        // ),
        Wrap(
          children: [
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_customer_users"] !=
                        null &&
                    widget.permissions["permission_can_view_customer_users"] ==
                        true)
                ? Container(
                    width: 450,
                    child: Card(
                      elevation: 8,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Container(
                              width: MediaQuery.of(context).size.width,
                              color: Theme.of(context).primaryColor,
                              child: Padding(
                                padding:
                                    const EdgeInsets.fromLTRB(20, 10, 0, 10),
                                child: Text(
                                  "Users",
                                  style: TextStyle(
                                    color: Colors.white,
                                  ),
                                ),
                              )),
                          Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: StreamBuilder<QuerySnapshot>(
                                stream: widget.firestore
                                    .collection("users")
                                    .where("parentType", isEqualTo: "customer")
                                    .where("parentId", isEqualTo: customerId)
                                    // .where("roleId",isEqualTo: ROLE_ID_CUSTOMER_USER)
                                    .snapshots(),
                                builder: (c, snapshotUsers) {
                                  // return Text(usersnapshot.data.docs[index].id);
                                  if (snapshotUsers.hasData) {
                                    return ListView.builder(
                                        shrinkWrap: true,
                                        itemCount: snapshotUsers.data!.size,
                                        itemBuilder: (context, index) {
                                          //dia
//
                                          return ListTile(
                                            trailing: Wrap(
                                              children: [
                                                InkWell(
                                                  onTap: () {
                                                    // initCallIntent(
                                                    //     null,
                                                    //     "a",
                                                    //     widget.auth.currentUser
                                                    //         .uid,
                                                    //     snapshotUsers
                                                    //         .data.docs[index]
                                                    //         .get("uid"),
                                                    //     true,
                                                    //     widget.firestore,
                                                    //     context,
                                                    //     snapshotUsers
                                                    //         .data.docs[index]
                                                    //         .get(
                                                    //             "displayName"));
                                                  },
                                                  child: Padding(
                                                    padding:
                                                        const EdgeInsets.all(
                                                            8.0),
                                                    child: Icon(Icons.call),
                                                  ),
                                                ),
                                                (widget.permissions != null &&
                                                        widget.permissions[
                                                                "permission_can_delete_customer_users"] !=
                                                            null &&
                                                        widget.permissions[
                                                                "permission_can_delete_customer_users"] ==
                                                            true)
                                                    ? InkWell(
                                                        onTap: () {
                                                          // return showDialog<
                                                          //     void>(
                                                          //   context: context,
                                                          //   barrierDismissible:
                                                          //       false,
                                                          //   // user must tap button!
                                                          //   builder:
                                                          //       (BuildContext
                                                          //           context) {
                                                          //     return AlertDialog(
                                                          //       title: Text(
                                                          //           'User Delete'),
                                                          //       content:
                                                          //           SingleChildScrollView(
                                                          //         child:
                                                          //             ListBody(
                                                          //           children: <
                                                          //               Widget>[
                                                          //             Text(
                                                          //                 'Do you want to DELETE this user?'),
                                                          //           ],
                                                          //         ),
                                                          //       ),
                                                          //       actions: <
                                                          //           Widget>[
                                                          //         TextButton(
                                                          //           child: Text(
                                                          //               'Yes'),
                                                          //           onPressed:
                                                          //               () {
                                                          //             // try {
                                                          //             //   Api().deleteUser(uid: snapshotUsers.data.docs[index].get["uid"]).then((value) {
                                                          //             //     print("tt");
                                                          //             //   });
                                                          //             //   widget.firestore.collection("users").where("uid", isEqualTo: snapshotUsers.data.docs[index].get["uid"]).get().then((value) {
                                                          //             //     widget.firestore.collection("users").doc(value.docs.first.id).delete().then((value) {
                                                          //             //       Navigator.of(context).pop();
                                                          //             //     });
                                                          //             //   });
                                                          //             // } catch (e) {
                                                          //             //   widget.firestore.collection("users").where("uid", isEqualTo: snapshotUsers.data.docs[index].get["uid"]).get().then((value) {
                                                          //             //     widget.firestore.collection("users").doc(value.docs.first.id).delete().then((value) {
                                                          //             //       Navigator.of(context).pop();
                                                          //             //     });
                                                          //             //   });
                                                          //             // }
                                                          //           },
                                                          //         ),
                                                          //         TextButton(
                                                          //           child: Text(
                                                          //               'No'),
                                                          //           onPressed:
                                                          //               () {
                                                          //             Navigator.of(
                                                          //                     context)
                                                          //                 .pop();
                                                          //           },
                                                          //         ),
                                                          //       ],
                                                          //     );
                                                          //   },
                                                          // );
                                                        },
                                                        child:
                                                            Icon(Icons.delete),
                                                      )
                                                    : emptyContainer
                                              ],
                                            ),
                                            leading: CircleAvatar(
                                              radius: 15,
                                            ),
                                            title: Text(snapshotUsers
                                                .data!.docs[index]
                                                .get("displayName")),
                                            //  subtitle: Text( snapshotUsers.data.docs[index].get["roleId"]),
                                            subtitle: FutureBuilder<
                                                    DocumentSnapshot>(
                                                future: widget.firestore
                                                    .collection("roles")
                                                    .doc(snapshotUsers
                                                        .data!.docs[index]
                                                        .get("roleId"))
                                                    .get(),
                                                builder: (c,
                                                    snapshotRecordRoleName) {
                                                  if (snapshotRecordRoleName
                                                          .hasData &&
                                                      snapshotRecordRoleName
                                                          .data!.exists) {
                                                    // return  Text(snapshotRecordRoleName.data.docs.length.toString());
                                                    return Wrap(
                                                      children: [
                                                        Text(snapshotUsers
                                                            .data!.docs[index]
                                                            .get("email")),
                                                        Padding(
                                                          padding:
                                                              const EdgeInsets
                                                                      .fromLTRB(
                                                                  0, 0, 0, 0),
                                                          child: Text(
                                                            snapshotRecordRoleName
                                                                .data!
                                                                .get(
                                                                    "roleName"),
                                                            style: TextStyle(
                                                                color: Colors
                                                                    .black),
                                                          ),
                                                        ),
                                                      ],
                                                    );
                                                    // return Wrap(child: Text( snapshotRecordRoleName.data.get["roleName"]));
                                                  } else {
                                                    return Text("Please wait");
                                                  }
                                                }),
                                          );
                                        });
                                    //return Text("ik", style: TextStyle(fontSize: 30));

                                  } else {
                                    return Center(
                                      child: Text("No Users"),
                                    );
                                  }
                                }),
                          ),
                        ],
                      ),
                    ),
                  )
                : emptyContainer,
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_test_result"] !=
                        null &&
                    widget.permissions["permission_can_view_test_result"] ==
                        true)
                ? Container(
                    width: 350,
                    child: Card(
                      elevation: 8,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Padding(
                            padding: const EdgeInsets.fromLTRB(20, 10, 0, 10),
                            child: Text(
                              "Test Records",
                              style: TextStyle(
                                  color: Theme.of(context).primaryColor),
                            ),
                          ),
                          // Text(" " + usersnapshot.data.docs[index]["projectId"]),
                          // Padding(
                          //   padding: const EdgeInsets.all(8.0),
                          //   child: StreamBuilder<
                          //       List<QueryDocumentSnapshot>>(
                          //       stream: Database()
                          //           .fetchCustomerAllTestRecord(
                          //           projectId:
                          //           customerBody["projectId"])
                          //           .asStream(),
                          //
                          //       //  stream: widget.firestore.collection("users").where("parentType", isEqualTo: "customer").where("parentId", isEqualTo: usersnapshot.data.docs[index].id)
                          //       // .where("roleId",isEqualTo: ROLE_ID_CUSTOMER_USER).snapshots(),
                          //       builder: (c, snapTestRecords) {
                          //         // return Text(usersnapshot.data.docs[index].id);
                          //         if (snapTestRecords.hasData) {
                          //           return ListView.builder(
                          //               shrinkWrap: true,
                          //               itemCount:
                          //               snapTestRecords.data.length,
                          //               itemBuilder: (context, index) {
                          //                 return ListTile(
                          //                   onTap: () {
                          //                     //show test details
                          //
                          //                     initCustomerFirestore(
                          //                         projectId:
                          //                         customerBody[
                          //                         "projectId"])
                          //                         .then((value) {
                          //                       Scaffold.of(context)
                          //                           .showBottomSheet((context) =>
                          //                           showTestRecordBodyPartial(
                          //                               customerId,
                          //                               snapTestRecords
                          //                                   .data[index]
                          //                                   .id,
                          //                               snapTestRecords
                          //                                   .data[index]
                          //                                   .get,
                          //                               context,
                          //                               value));
                          //                     });
                          //                   },
                          //                   leading: Icon(Icons.tab),
                          //                   title: Text(snapTestRecords
                          //                       .data[index]
                          //                       .get["name"]),
                          //                 );
                          //               });
                          //           //return Text("ik", style: TextStyle(fontSize: 30));
                          //
                          //         } else {
                          //           return Center(
                          //             child: Text("No Users"),
                          //           );
                          //         }
                          //       }),
                          // ),
                        ],
                      ),
                    ),
                  )
                : emptyContainer,
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_database_status"] !=
                        null &&
                    widget.permissions["permission_can_view_database_status"] ==
                        true)
                ? Container(
                    width: 350,
                    child: Card(
                      elevation: 8,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Padding(
                            padding: const EdgeInsets.fromLTRB(20, 10, 0, 10),
                            child: Text(
                              "DB Status",
                              style: TextStyle(
                                  color: Theme.of(context).primaryColor),
                            ),
                          ),
                          // Text(" " + usersnapshot.data.docs[index]["projectId"]),
                          // Padding(
                          //   padding: const EdgeInsets.all(8.0),
                          //   child: StreamBuilder<
                          //       List<QueryDocumentSnapshot>>(
                          //       stream: Database()
                          //           .checkDatabaseStatus(
                          //           projectId:
                          //           customerBody["projectId"])
                          //           .asStream(),
                          //
                          //       //  stream: widget.firestore.collection("users").where("parentType", isEqualTo: "customer").where("parentId", isEqualTo: usersnapshot.data.docs[index].id)
                          //       // .where("roleId",isEqualTo: ROLE_ID_CUSTOMER_USER).snapshots(),
                          //       builder: (c, snapDatabaseStatus) {
                          //         // return Text(usersnapshot.data.docs[index].id);
                          //         if (snapDatabaseStatus.hasData) {
                          //           if (snapDatabaseStatus.data.length >
                          //               0 &&
                          //               snapDatabaseStatus
                          //                   .data.isNotEmpty) {
                          //             return Text("Database is Ready");
                          //           } else {
                          //             return InkWell(
                          //               onTap: () {
                          //                 Api(firestore: widget.firestore)
                          //                     .addfirestoreRules(
                          //                   projectID:
                          //                   customerBody["projectId"],
                          //                 )
                          //                     .then((value) {
                          //                   Database()
                          //                       .writeOnNewDb(
                          //                       projectId: customerBody[
                          //                       "projectId"])
                          //                       .then((value) {
                          //                     print(value);
                          //                   });
                          //                 });
                          //               },
                          //               child: Card(
                          //                   color: Theme.of(context)
                          //                       .primaryColor,
                          //                   child: Text(
                          //                     "Setup Database",
                          //                     style: TextStyle(
                          //                         color: Colors.white),
                          //                   )),
                          //             );
                          //           }
                          //           // return Text(snapDatabaseStatus.data.length.toString());
                          //           //return Text("ik", style: TextStyle(fontSize: 30));
                          //
                          //         } else {
                          //           return InkWell(
                          //             onTap: () {
                          //               Api(firestore: widget.firestore)
                          //                   .addfirestoreRules(
                          //                 projectID:
                          //                 customerBody["projectId"],
                          //               )
                          //                   .then((value) {
                          //                 Database()
                          //                     .writeOnNewDb(
                          //                     projectId: customerBody[
                          //                     "projectId"])
                          //                     .then((value) {
                          //                   print(value);
                          //                 });
                          //               });
                          //             },
                          //             child: Card(
                          //                 color: Theme.of(context)
                          //                     .primaryColor,
                          //                 child: Text(
                          //                   "Setup Database",
                          //                   style: TextStyle(
                          //                       color: Colors.white),
                          //                 )),
                          //           );
                          //           ;
                          //         }
                          //       }),
                          // ),
                        ],
                      ),
                    ),
                  )
                : emptyContainer,
            (widget.permissions != null &&
                    widget.permissions["permission_can_view_file_exploler"] !=
                        null &&
                    widget.permissions["permission_can_view_file_exploler"] ==
                        true)
                ? Card(
                    elevation: 8,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.start,
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Padding(
                          padding: const EdgeInsets.fromLTRB(20, 10, 0, 10),
                          child: Text(
                            "Files & Folders",
                            style: TextStyle(
                                color: Theme.of(context).primaryColor),
                          ),
                        ),
                        // Text(" " + usersnapshot.data.docs[index]["projectId"]),
                        // Padding(
                        //   padding: const EdgeInsets.all(8.0),
                        //   child: FutureBuilder<FirebaseFirestore>(
                        //     // Initialize FlutterFire:
                        //       future: initCustomerFirestore(
                        //           projectId: customerBody["projectId"]),
                        //       builder: (BuildContext context,
                        //           AsyncSnapshot<FirebaseFirestore>
                        //           snapshotFirestore) {
                        //         if (snapshotFirestore.hasData) {
                        //           return Container(
                        //             height: 450,
                        //             width: 400,
                        //             child: FileExplorar2(
                        //               customerFirestore:
                        //               snapshotFirestore.data,
                        //               customerId: customerId,
                        //             ),
                        //           );
                        //         } else {
                        //           return CircularProgressIndicator();
                        //         }
                        //       }),
                        // ),
                      ],
                    ),
                  )
                : emptyContainer,
            (widget.permissions != null &&
                    widget.permissions["permission_can_do_calibraiton"] !=
                        null &&
                    widget.permissions["permission_can_do_calibraiton"] == true)
                ? InkWell(
                    onTap: () {
                      // asdadads
                      //ConnectDeviceForCalibration

                      Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) => ConnectDeviceForCalibration(
                                  profileBody: widget.profileBody,
                                )),
                      );
                    },
                    child: Card(
                      elevation: 8,
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.start,
                        crossAxisAlignment: CrossAxisAlignment.start,
                        children: [
                          Padding(
                            padding: const EdgeInsets.fromLTRB(20, 10, 20, 10),
                            child: Text(
                              "Perform Calibration",
                              style: TextStyle(
                                  color: Theme.of(context).primaryColor),
                            ),
                          ),
                          // Text(" " + usersnapshot.data.docs[index]["projectId"]),
                          // Padding(
                          //   padding: const EdgeInsets.all(8.0),
                          //   child: FutureBuilder<FirebaseFirestore>(
                          //     // Initialize FlutterFire:
                          //       future: initCustomerFirestore(
                          //           projectId: customerBody["projectId"]),
                          //       builder: (BuildContext context,
                          //           AsyncSnapshot<FirebaseFirestore>
                          //           snapshotFirestore) {
                          //         if (snapshotFirestore.hasData) {
                          //           return Container(
                          //             height: 450,
                          //             width: 400,
                          //             child: FileExplorar2(
                          //               customerFirestore:
                          //               snapshotFirestore.data,
                          //               customerId: customerId,
                          //             ),
                          //           );
                          //         } else {
                          //           return CircularProgressIndicator();
                          //         }
                          //       }),
                          // ),
                        ],
                      ),
                    ),
                  )
                : emptyContainer,
          ],
        ),
      ],
    );
  }
}

Future<void> main2() async {
  // Ensure that plugin services are initialized so that `availableCameras()`
  // can be called before `runApp()`
  WidgetsFlutterBinding.ensureInitialized();

  // Obtain a list of the available cameras on the device.
  final cameras = await availableCameras();

  // Get a specific camera from the list of available cameras.
  final firstCamera = cameras.first;


}

// A screen that allows users to take a picture using a given camera.




class ConnectDeviceForCalibration extends StatefulWidget {
  dynamic profileBody;

  ConnectDeviceForCalibration({this.profileBody});

  @override
  _ConnectDeviceForCalibrationState createState() =>
      _ConnectDeviceForCalibrationState();
}

class _ConnectDeviceForCalibrationState
    extends State<ConnectDeviceForCalibration> {
  @override
  Widget build(BuildContext context) {
    return StreamBuilder<BluetoothState>(
        stream: FlutterBlue.instance.state,
        initialData: BluetoothState.unknown,
        builder: (c, snapshot) {
          final state = snapshot.data;
          if (state == BluetoothState.on) {
            return SearchDevicesWidget(
              profileBody: widget.profileBody,
            );
          }
          return BluetoothOffScreen(state: state!);
        });
  }
}

class SearchDevicesWidget extends StatefulWidget {
  String title = "itle";
  dynamic profileBody;

  SearchDevicesWidget({this.profileBody});

  @override
  _FindDevicesScreenState createState() => _FindDevicesScreenState();
}

class _FindDevicesScreenState extends State<SearchDevicesWidget> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Pair a Board"),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: <Widget>[
            StreamBuilder<List<ScanResult>>(
              stream: FlutterBlue.instance.scanResults,
              initialData: [],
              builder: (c, snapshot) {
                //  updateData(snapshot.data);
                FirebaseFirestore firestore;
                //  Database(firestore: firestore).addData(snapshot.data);

                return Column(
                  children: snapshot.data!
                      .map(
                        (r) => ScanResultTile(
                          result: r,
                          onTap: () => Navigator.of(context)
                              .push(MaterialPageRoute(builder: (context) {
                            r.device.connect(autoConnect: true);
                            return ConnectedDevicePage(
                                //userBody: widget.profileBody,
                                auth: FirebaseAuth.instance,
                                firestore: FirebaseFirestore.instance,
                                device: r.device, calibratorID: '',);
                            Navigator.pop(context);
                            //return ConnectedDevicePage(device: r.device);
                            //return DeviceScreenLessDetails(r.device);
                          })),
                        ),
                      )
                      .toList(),
                );
              },
            ),
          ],
        ),
      ),
      floatingActionButton: StreamBuilder<bool>(
        stream: FlutterBlue.instance.isScanning,
        initialData: false,
        builder: (c, snapshot) {
          if (snapshot.data!) {
            return FloatingActionButton(
              child: Icon(Icons.stop),
              onPressed: () => FlutterBlue.instance.stopScan(),
              backgroundColor: Colors.red,
            );
          } else {
            return FloatingActionButton(
                child: Icon(Icons.search),
                onPressed: () => FlutterBlue.instance
                    .startScan(timeout: Duration(seconds: 4)));
          }
        },
      ),
    );
  }
}



class _MyHomePage extends StatefulWidget {
  // ignore: prefer_const_constructors_in_immutables
  _MyHomePage({required Key key}) : super(key: key);

  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<_MyHomePage> {
  List<_ChartData> chartData = [
    _ChartData(DateTime.utc(2021, 1, 1), 21, 28),
    _ChartData(DateTime.utc(2021, 2, 1), 24, 44),
    _ChartData(DateTime.utc(2021, 3, 1), 36, 48),
    _ChartData(DateTime.utc(2021, 4, 1), 38, 50),
    _ChartData(DateTime.utc(2021, 5, 1), 54, 66),
    _ChartData(DateTime.utc(2021, 6, 1), 57, 78),
    _ChartData(DateTime.utc(2021, 7, 1), 70, 84)
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: const Text('Syncfusion Flutter chart'),
        ),
        body: SfCartesianChart(
            primaryXAxis: DateTimeAxis(),
            primaryYAxis: NumericAxis(labelFormat: '{value}%', plotBands: [
              PlotBand(
                  isVisible: true,
                  start: 18,
                  end: 18,
                  borderWidth: 2,
                  borderColor: Colors.blueAccent,
                  text: 'Ref Line',
                  textStyle: TextStyle(color: Colors.blue),
                  dashArray: <double>[15, 3, 3, 3])
            ]),
            series: <ChartSeries<_ChartData, DateTime>>[
              LineSeries<_ChartData, DateTime>(
                  dataSource: chartData,
                  xValueMapper: (_ChartData data, _) => data.x,
                  yValueMapper: (_ChartData data, _) => data.y1,
                  markerSettings: MarkerSettings(isVisible: true)),
              LineSeries<_ChartData, DateTime>(
                  dataSource: chartData,
                  xValueMapper: (_ChartData data, _) => data.x,
                  yValueMapper: (_ChartData data, _) => data.y2,
                  markerSettings: MarkerSettings(isVisible: true))
            ]));
  }
}

class _ChartData {
  _ChartData(this.x, this.y1, this.y2);

  final DateTime x;
  final double y1;
  final double y2;
}
class WidgetWithCustomerFirebase extends StatelessWidget {
  FirebaseAuth auth;
  QueryDocumentSnapshot profile;
  DocumentSnapshot  customerInfo;
  Locale locale;



  WidgetWithCustomerFirebase({required this.auth,required this.locale,required this.customerInfo,required this.profile});

  @override
  Widget build(BuildContext context) {

    Future<FirebaseFirestore> initCustomerFirebase() async {
      String projectID =
      customerInfo.get("projectId");
      FirebaseApp app;

      try {
        app = await Firebase.initializeApp(
            name: projectID,
            options: FirebaseOptions(
              // appId: '1:17044794633:android:9f88d16d208f63229f37d8',
              appId: Platform.isAndroid
                  ?Config().defaultAppIdAndroid
                  : Config().defaultAppIdIOS,
              apiKey: Config().apiKey,
              storageBucket:"gs://"+projectID+".appspot.com",
              messagingSenderId: '',
              projectId: projectID,
            ));
        FirebaseFirestore firestore =
        await FirebaseFirestore.instanceFor(app: app);
        return firestore;
      } catch (e) {
        FirebaseFirestore firestore =
        await FirebaseFirestore.instanceFor(app: Firebase.app(projectID));
        //FirebaseFirestore firestore = await FirebaseFirestore.instanceFor(app: app);
        return firestore;
      }
    }
    final futureVar = initCustomerFirebase();
    return FutureBuilder<FirebaseFirestore>(
      // Initialize FlutterFire:
      //  future: Firebase.initializeApp(),
        future: futureVar,
        builder: (BuildContext context, AsyncSnapshot<FirebaseFirestore>snapshotFirebaseStore) {
          if (snapshotFirebaseStore.hasData) {
            FirebaseMessaging.instance.subscribeToTopic("All");
            FirebaseMessaging.instance.subscribeToTopic(auth.currentUser!.uid);

            return MyHomePage(locale: locale,
              profile: profile,
              customerId: profile.get("parentId"),
              customerName: customerInfo.get("prjectName"),
              customerFirestore: snapshotFirebaseStore.data!,
              projct: customerInfo.get("projectId"),
              auth: auth, title: '',region: "",
            );
          } else {
            return Scaffold(
              body: Container(
                  child: Center(
                      child:
                      CircularProgressIndicator())),
            );
          }
        });
  }



}

Future<void> lookUpBoard(String calibrator,
    String sl,
    String iceSl,
    GlobalKey<ScaffoldState> scaffoldKey,
    BluetoothCharacteristic read,
    BluetoothCharacteristic write,
    BluetoothDevice device, BuildContext buildContext,BuildContext context) async {
  print("look up");

  try {
    var deviceRecord = await FirebaseFirestore.instance
        .collection("boards")
        .where("iceSl", isEqualTo: iceSl)
        .where("sl", isEqualTo: sl)
        .get();
    print(deviceRecord.docs.length);
    if (deviceRecord.docs.length == 0) {

      bool isSelected = false;
      Navigator.push(context,
          MaterialPageRoute(
              builder: (context) => Container(color : Colors.white , child: SafeArea(child : Scaffold(
                // key: scaffoldKey2,
                // appBar: AppBar(),
                appBar: PreferredSize(
                  preferredSize: Size(0,kToolbarHeight),

                  child:    ApplicationAppbar(). getAppbar(title:TextConst.calibrationText),
                ),
                body:  SingleChildScrollView (
                  child: Column(
                    children: [
                      Container(
                        margin: EdgeInsets.only(
                          left: width * 0.05,
                          right: width * 0.05,
                          top: height * 0.03,
                        ),
                        child:
                        Column(
                          children: [

                            //----------------Back arrow ------------------------
                            GestureDetector(
                              onTap: () {
                                Navigator.pop(context);
                              },
                              child: Row(
                                children: [
                                  Icon(Icons.arrow_back_ios,
                                    size: width * 0.039,color:  ThemeManager().getDarkGreenColor,),
                                  Text(TextConst.backText,style: interMedium.copyWith(
                                      color: ThemeManager().getDarkGreenColor,
                                      fontSize: width * 0.042),
                                  ),
                                ],
                              ),
                            ),

                            //-----------------Choose customer text-----------
                            Container(
                              margin: EdgeInsets.only(top:height*0.03,),
                              alignment: Alignment.topLeft,
                              child: Text(
                                TextConst.chooseCustomerText,
                                style: interSemiBold.copyWith(
                                    color: ThemeManager().getBlackColor,
                                    fontSize: width * 0.042),
                              ),
                            ),

                            //-----------------------Search TextField-------------------------
                            Container(
                              margin: EdgeInsets.only(top:height*0.03,bottom: height*0.017),
                              height: height * 0.05,
                              width: width,
                              decoration: BoxDecoration(
                                  borderRadius: BorderRadius.all(Radius.circular(18))
                              ),
                              child: TextFormField(
                                keyboardType: TextInputType.text,
                                decoration: InputDecoration(
                                  border: InputBorder.none,
                                  prefixIcon: Image.asset("assets/icons/searchIcon.png"),
                                  hintText: TextConst.searchText,
                                  hintStyle: interMedium.copyWith(
                                    color: ThemeManager().getLightGrey1Color,
                                    fontSize: width * 0.039,
                                  ),
                                  enabledBorder: OutlineInputBorder(
                                    borderSide: BorderSide(
                                      color: Colors.transparent,
                                    ),
                                  ),
                                  contentPadding: EdgeInsets.symmetric(
                                      vertical: height * 0.0, horizontal: width * 0.045),
                                  fillColor: ThemeManager().getLightGreenTextFieldColor,
                                  filled: true,
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),

                      false?   ListTile(
                        title: Text("Register new board"),
                        tileColor:
                        Theme.of(context).primaryColor.withOpacity(0.1),
                      ):Container(width: 0,height: 0,),


                      ProductRegisterActivity(sl: sl,iceSl: iceSl,device: device,write: write,read: read,),




                    if(false)  ListTile(
                        onTap: () {
                          GlobalKey<ScaffoldState> scaffoldKey3 =
                          GlobalKey<ScaffoldState>();
                          TextEditingController controller =
                          new TextEditingController();
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => Container(color:Colors.white ,child : Scaffold(
                                  key: scaffoldKey3,
                                  appBar: AppBar(
                                    title: Text("Update  SN"),
                                  ),
                                  body: Wrap(
                                    children: [
                                      Padding(
                                        padding:
                                        const EdgeInsets.all(8.0),
                                        child: TextField(
                                          controller: controller,
                                        ),
                                      ),
                                      InkWell(
                                        onTap: () async {
                                          String commandToWrite =
                                              COMMAND_INDEX_2_SET +
                                                  controller.text +
                                                  COMMAND_SUFFIX;
                                          print("command " +
                                              commandToWrite);

                                          try {
                                            await write.write(
                                                StringToASCII(
                                                    commandToWrite),
                                                withoutResponse: OsDependentSettings().writeWithresponse);
                                            lookUpBoard(calibrator,
                                                sl,
                                                iceSl,
                                                scaffoldKey3,
                                                read,
                                                write,
                                                device,buildContext,context);

                                            // Navigator.pop(context);

                                            sl = controller.text;

                                            //return true;
                                          } catch (e) {
                                            //return false;
                                          }
                                        },
                                        child: Padding(
                                          padding:
                                          const EdgeInsets.all(8.0),
                                          child: Card(
                                            color: Theme.of(context)
                                                .primaryColor,
                                            child: Center(
                                              child: Padding(
                                                padding:
                                                const EdgeInsets
                                                    .all(8.0),
                                                child: Text(
                                                  "Save",
                                                  style: TextStyle(
                                                      color:
                                                      Colors.white),
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                ))),
                          );
                        },
                        title: Text(sl),
                        subtitle: Text("SN"),
                      ),
                      if(false)   ListTile(
                        onTap: () {
                          TextEditingController controllerIce =
                          new TextEditingController();
                          GlobalKey<ScaffoldState> scaffoldKey4 =
                          GlobalKey<ScaffoldState>();
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                                builder: (context) => Scaffold(
                                  key: scaffoldKey4,
                                  appBar: AppBar(
                                    title: Text("Update ICE SN"),
                                  ),
                                  body: Wrap(
                                    children: [
                                      Padding(
                                        padding:
                                        const EdgeInsets.all(8.0),
                                        child: TextField(
                                          controller: controllerIce,
                                        ),
                                      ),
                                      InkWell(
                                        onTap: () async {
                                          String commandToWrite =
                                              COMMAND_INDEX_1_SET +
                                                  controllerIce.text +
                                                  COMMAND_SUFFIX;
                                          print("command " +
                                              commandToWrite);

                                          try {
                                            await write.write(
                                                StringToASCII(
                                                    commandToWrite),
                                                withoutResponse: OsDependentSettings().writeWithresponse);
                                            //Navigator.pop(context);
                                            //Navigator.pop(context);
                                            lookUpBoard(calibrator,sl,
                                                iceSl,
                                                scaffoldKey4,
                                                read,
                                                write,
                                                device,buildContext,context);
                                            iceSl = controllerIce.text;

                                            //return true;
                                          } catch (e) {
                                            //return false;
                                          }
                                        },
                                        child: Padding(
                                          padding:
                                          const EdgeInsets.all(8.0),
                                          child: Card(
                                            color: Theme.of(context)
                                                .primaryColor,
                                            child: Center(
                                              child: Padding(
                                                padding:
                                                const EdgeInsets
                                                    .all(8.0),
                                                child: Text(
                                                  "Save",
                                                  style: TextStyle(
                                                      color:
                                                      Colors.white),
                                                ),
                                              ),
                                            ),
                                          ),
                                        ),
                                      ),
                                    ],
                                  ),
                                )),
                          );
                        },
                        title: Text(iceSl),
                        subtitle: Text("ICE SN"),
                      ),

                     // if(false) Row(
                     //    children: [
                     //
                     //      Expanded(
                     //          child: InkWell(
                     //              onTap: () {
                     //                // Navigator.pop(context);
                     //                scaffoldKey.currentState!
                     //                    .showBottomSheet(
                     //                      (context) => Scaffold(
                     //                      body: Column(
                     //                        children: [
                     //                          ListTile(
                     //                            title:
                     //                            Text("Choose a Customer"),
                     //                            tileColor: Theme.of(context)
                     //                                .primaryColor
                     //                                .withOpacity(0.1),
                     //                          ),
                     //                          StreamBuilder<QuerySnapshot>(
                     //                              stream: FirebaseFirestore.instance
                     //                                  .collection("customers")
                     //                                  .snapshots(),
                     //                              builder:
                     //                                  (c, snapshotCustomers) {
                     //                                if (snapshotCustomers
                     //                                    .hasData) {
                     //                                  return ListView.builder(
                     //                                      physics:
                     //                                      ClampingScrollPhysics(),
                     //                                      // separatorBuilder: (context, index) {
                     //                                      //   return Divider();
                     //                                      // },
                     //                                      shrinkWrap: true,
                     //                                      padding:
                     //                                      EdgeInsets.zero,
                     //                                      itemCount:
                     //                                      snapshotCustomers
                     //                                          .data!
                     //                                          .docs
                     //                                          .length,
                     //                                      itemBuilder:
                     //                                          (_, index) {
                     //                                        return ListTile(
                     //                                          onTap: () {
                     //                                            FirebaseFirestore.instance
                     //                                                .collection(
                     //                                                "boards")
                     //                                                .add({
                     //                                              "iceSl":
                     //                                              iceSl,
                     //                                              "sl": sl,
                     //                                              "customerId":
                     //                                              snapshotCustomers
                     //                                                  .data!
                     //                                                  .docs[
                     //                                              index]
                     //                                                  .id,
                     //                                              "time": DateTime
                     //                                                  .now()
                     //                                                  .millisecondsSinceEpoch
                     //                                            }).then((value) {
                     //                                              //Navigator.pop(context);
                     //                                              scaffoldKey.currentState!.showBottomSheet((context) =>Scaffold(
                     //                                                //  appBar: AppBar(),
                     //                                                body: Column(
                     //                                                  mainAxisAlignment: MainAxisAlignment.start,
                     //                                                  crossAxisAlignment: CrossAxisAlignment.start,
                     //                                                  children: [
                     //                                                    Padding(
                     //                                                      padding: const EdgeInsets.fromLTRB(0,0,0, 5),
                     //                                                      child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
                     //                                                          future: FirebaseFirestore.instance
                     //                                                              .collection("customers")
                     //                                                              .doc(snapshotCustomers
                     //                                                              .data!
                     //                                                              .docs[
                     //                                                          index]
                     //                                                              .id)
                     //                                                              .get(),
                     //                                                          builder: (c, snapshot) {
                     //                                                            if (snapshot.hasData) {
                     //                                                              return Padding(
                     //                                                                padding: const EdgeInsets.all(8.0),
                     //                                                                child: Text(snapshot.data!.get("prjectName"),
                     //                                                                    style: TextStyle(fontSize: 18)),
                     //                                                              );
                     //                                                            } else {
                     //                                                              return Padding(
                     //                                                                padding: const EdgeInsets.all(8.0),
                     //                                                                child: Text("Getting customer name"),
                     //                                                              );
                     //                                                            }
                     //                                                          }),
                     //                                                        title: Text("Customer Device connected"),
                     //                                                        tileColor:
                     //                                                        Theme.of(context).primaryColor.withOpacity(0.1),
                     //                                                      ),
                     //                                                    ),
                     //                                                    Padding(
                     //                                                      padding: const EdgeInsets.fromLTRB(0,0,0, 5),
                     //                                                      child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
                     //                                                          future: FirebaseFirestore.instance
                     //                                                              .collection("customers")
                     //                                                              .doc(snapshotCustomers
                     //                                                              .data!
                     //                                                              .docs[
                     //                                                          index]
                     //                                                              .id)
                     //                                                              .get(),
                     //                                                          builder: (c, snapshot) {
                     //                                                            if (snapshot.hasData) {
                     //                                                              return Wrap(
                     //                                                                children: [
                     //                                                                  Padding(
                     //                                                                    padding: EdgeInsets.fromLTRB(0,0,0, 5),
                     //                                                                    child: ListTile( tileColor:
                     //                                                                    Theme.of(context).primaryColor.withOpacity(0.1),title: Text("Select one Calibration Profile",style: TextStyle(color: Theme.of(context).primaryColor),),),
                     //                                                                  ),
                     //
                     //                                                                  downloadDropDownDataAndShow(calibrator,read,write,device,snapshot.data!.data()),
                     //                                                                ],
                     //                                                              );
                     //                                                            } else {
                     //                                                              return Padding(
                     //                                                                padding: const EdgeInsets.all(8.0),
                     //                                                                child: Text("Getting customer name"),
                     //                                                              );
                     //                                                            }
                     //                                                          }),
                     //                                                        title: Text("Customer Device connected"),
                     //                                                        tileColor:
                     //                                                        Theme.of(context).primaryColor.withOpacity(0.1),
                     //                                                      ),
                     //                                                    ),
                     //
                     //
                     //                                                    //product type select
                     //
                     //
                     //
                     //
                     //                                                  ],
                     //                                                ),
                     //                                              ));
                     //                                            });
                     //                                          },
                     //                                          title: Text(
                     //                                              snapshotCustomers
                     //                                                  .data!
                     //                                                  .docs[
                     //                                              index]
                     //                                                  .get(
                     //                                                  "prjectName")),
                     //                                          trailing:
                     //                                          Container(
                     //                                            height: 45,
                     //                                            width: 45,
                     //                                            decoration:
                     //                                            BoxDecoration(
                     //                                              borderRadius:
                     //                                              BorderRadius
                     //                                                  .circular(
                     //                                                  22.5),
                     //                                              color: Colors
                     //                                                  .grey
                     //                                                  .withOpacity(
                     //                                                0.4,
                     //                                              ),
                     //                                            ),
                     //                                            child: Icon(
                     //                                                Icons.done),
                     //                                          ),
                     //                                        );
                     //                                      });
                     //                                } else {
                     //                                  return Center(
                     //                                    child:
                     //                                    CircularProgressIndicator(),
                     //                                  );
                     //                                }
                     //                              }),
                     //                        ],
                     //                      )),
                     //                );
                     //              },
                     //              child: Card(
                     //                color: Theme.of(context).primaryColor,
                     //                child: Center(
                     //                  child: Padding(
                     //                    padding: const EdgeInsets.all(8.0),
                     //                    child: Text("Register",
                     //                        style: TextStyle(
                     //                            color: Colors.white)),
                     //                  ),
                     //                ),
                     //              ))),
                     //    ],
                     //  ),
                    ],
                  ),
                ),
              )))));

    } else {

      Widget activity =    Container(color: Colors.white,child: SafeArea(child:Scaffold(
        backgroundColor: ThemeManager().getWhiteColor,

        //-------------App Bar of screen---------------------------
        appBar: PreferredSize(
          preferredSize: Size(0,kToolbarHeight),
          child:  ApplicationAppbar(). getAppbar(title:TextConst.calibrationText),
        ),

        //--------------------Body of screen------------------
        body: SingleChildScrollView(

          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [

              Container(
                margin: EdgeInsets.only(
                  left: width * 0.05,
                  right: width * 0.05,
                  top: height * 0.03,
                ),

                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,

                  children: [

                    //----------------Back arrow button-----------
                    Container(
                      //color: ThemeManager().getLightGrey10Color,
                      child: InkWell(
                        onTap: (){
                          Navigator.pop(context);
                        },
                        child: Row(
                          children: [
                            Icon(
                              Icons.arrow_back_ios,
                              size: width * 0.039,
                              color: ThemeManager().getDarkGreenColor,
                            ),
                            Text(
                              TextConst.backText,
                              style: interMedium.copyWith(
                                  color: ThemeManager().getDarkGreenColor,
                                  fontSize: width * 0.042),
                            ),
                          ],
                        ),
                      ),
                    ),

                    //--------------Select product title----------------
                    Container(
                      margin: EdgeInsets.only(top: height * 0.03,),

                      child: Text(
                        TextConst.selectProductText,
                        style: interMedium.copyWith(
                            color: ThemeManager().getPopUpTextGreyColor,
                            fontSize: width * 0.040),
                      ),
                    ),

                    //----------------- Select Product Dropdown-----------------
                    FutureBuilder<DocumentSnapshot>(
                        future: FirebaseFirestore.instance
                            .collection("customers")
                            .doc(deviceRecord.docs.first
                            .data()["customerId"])
                            .get(),
                        builder: (c, snapshot) {
                          if (snapshot.hasData) {
                            return    downloadDropDownDataAndShowActivity(calibrator: calibrator,read: read,write: write,device: device,customerInfo: snapshot.data!.data());

                          } else {
                            return Padding(
                              padding: const EdgeInsets.all(8.0),
                              child: Text("Getting customer name"),
                            );
                          }
                        })


                    //-------------- Save Button ----------------------
                    // GestureDetector(
                    //   onTap: () {
                    //     Navigator.push(
                    //         context,
                    //         MaterialPageRoute(
                    //             builder: (context) =>
                    //                 CalibrationInputRefValueAddAndCalculateRawValueScreen(
                    //                   showInputRefValScreen: false,
                    //                 )));
                    //   },
                    //   child: Container(
                    //       margin: EdgeInsets.only(
                    //         top: height * 0.1,
                    //       ),
                    //       height: height * 0.065,
                    //       width: width,
                    //       child: ButtonView(buttonLabel: TextConst.saveButtonText)
                    //   ),
                    // ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ) ,),);
      Navigator.push(context,
          MaterialPageRoute(
              builder: (context) => activity));

    }
  } catch (e) {
    print(e);

  Widget error =   Scaffold(body : Center(child: Text("Error Occured"),));
    Widget handleWidget = Scaffold(
      appBar: AppBar(
        title: Text("Register new board"),
      ),
      body: Column(
        children: [
          Text("New Device has been detected,"),
          Row(
            children: [
              Expanded(
                  child: InkWell(
                      onTap: () {
                        Navigator.pop(context);
                      },
                      child: Card(
                        color: Colors.redAccent,
                        child: Center(
                          child: Text(
                            "Do not Register",
                            style: TextStyle(color: Colors.white),
                          ),
                        ),
                      ))),
              Expanded(
                  child: InkWell(
                      onTap: () {},
                      child: Card(
                        color: Theme.of(context).primaryColor,
                        child: Center(
                          child: Text("Search in System",
                              style:
                              TextStyle(color: Colors.white)),
                        ),
                      ))),
            ],
          ),
        ],
      ),
    );

    Navigator.push(
        context,
        MaterialPageRoute(
            builder: (context) =>error ));
  }
}

String getCalibratorId(QueryDocumentSnapshot<Object?> first) {
  if(first.get("parentType") == "admin"){
    return "admin";
  }else  if(first.get("parentType") == "calibrator"){
    return first.get("parentId");
  }else return "";





}
class downloadDropDownDataAndShowActivity extends StatefulWidget {
  String calibrator;
  BluetoothCharacteristic read;
  BluetoothCharacteristic write;
  BluetoothDevice device;
  dynamic customerInfo;

  late QueryDocumentSnapshot SelectedProduct ;

  downloadDropDownDataAndShowActivity({required this.calibrator,required this.read,required this.write,required this.device,this.customerInfo});
  @override
  _downloadDropDownDataAndShowActivityState createState() => _downloadDropDownDataAndShowActivityState();
}

class _downloadDropDownDataAndShowActivityState extends State<downloadDropDownDataAndShowActivity> {
  String product="";
  @override
  Widget build(BuildContext context) {
    if(widget.calibrator=="" || widget.calibrator =="admin"){
      //stahtProductProfiles
      return  FutureBuilder<QuerySnapshot<Map<String,dynamic>>>(
          future: FirebaseFirestore.instance.collection("stahtProductProfiles").get(),
          builder: (BuildContext context, AsyncSnapshot<QuerySnapshot<Map<String,dynamic>>> snapshot) {
            if(snapshot.hasData && snapshot.data!.docs.length>0){

               if(product.length<3){
                 product = snapshot.data!.docs[0].get("productName");





                 widget.SelectedProduct =  snapshot.data!.docs[0];
                 //widget.SelectedProduct =    widget.SelectedProduct as Map<String, dynamic>;
               }

              Widget selectProductDetail()
              {
                return Container(
                  margin: EdgeInsets.only(
                    top: height * 0.019,
                  ),
                  width: width,
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.all(Radius.circular(width*0.02)),
                    border: Border.all(
                      color: ThemeManager().getBlackColor.withOpacity(.05),
                    ),
                  ),

                  child: Theme(
                    data: Theme.of(context).copyWith(dividerColor: Colors.transparent),

                    child: ExpansionTile(
                      key: UniqueKey(),
                      backgroundColor: ThemeManager().getLightGreenTextFieldColor,
                      collapsedBackgroundColor: ThemeManager().getLightGreenTextFieldColor,
                      //initiallyExpanded: true,
                      iconColor: ThemeManager().getLightGrey1Color,
                      //trailing: Icon(Icons.keyboard_arrow_down,size: width*0.08),

                      //----------------Selected Product text from dropdown-------
                      title: Text( product ,
                        style: interMedium.copyWith(
                            color: ThemeManager().getLightGrey1Color,
                            fontSize: width * 0.042),
                      ),

                      //----------------Available Product List in dropdown------------
                      children: <Widget>[
                        for (var productItem in snapshot.data!.docs)
                          InkWell(
                            onTap: () {
                              print(productItem.get("productName"));
                              setState(() {
                                product = productItem.get("productName");
                                widget.SelectedProduct =  productItem;
                                //widget.SelectedProduct =    widget.SelectedProduct as Map<String, dynamic>;
                              });
                            },
                            child: Container(
                              color: ThemeManager().getWhiteColor,
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Container(
                                    margin: EdgeInsets.only(
                                        top: height * 0.02, left: width * 0.03),
                                    child: Text( productItem.get("productName"),
                                      style: interSemiBold.copyWith(
                                          color: ThemeManager().getBlackColor,
                                          fontSize: width * 0.042),
                                    ),
                                  ),
                                  Container(
                                    margin: EdgeInsets.only(top: height * 0.02),
                                    height: height * 0.001,
                                    color: ThemeManager().getBlackColor.withOpacity(0.10),
                                  ),
                                ],
                              ),
                            ),
                          ),
                      ],
                    ),
                  ),
                );
              }

              return Wrap(
                children: [
                  selectProductDetail(),
                  GestureDetector(
                    onTap: () {
                     // HashMap productInfo = new HashMap<String, String>();
                      if(true)   Navigator.push(
                        context,
                        MaterialPageRoute(
                            builder: (context) =>
                                CalibartionStep4(customerProfile:widget.customerInfo ,productProfile:widget.SelectedProduct ,
                                  //profile: userProfile,
                                  calibAdmin:widget.calibrator,
                                  firestore:  FirebaseFirestore.instance,
                                  device:widget.device,
                                  characteristicWrite:widget.write,
                                  characteristicRead:widget.read,
                                  productInfo:productInfoGlobal, CoEf2: '', CoEf4: '', CoEf3: '', CoEf1: '',
                                )),
                      );

                  // if(false)    Navigator.push(
                  //         context,
                  //         MaterialPageRoute(
                  //             builder: (context) => Scaffold(
                  //               body: Scaffold(
                  //                 appBar: AppBar(
                  //                   title: Text("Product Information"),
                  //                 ),
                  //                 body: SingleChildScrollView(
                  //                   child: Column(
                  //                     children: [
                  //                       //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
                  //                       Directory_1_view_edit(
                  //                         bluetoothCharacteristicWrite:widget. write,
                  //                         bluetoothCharacteristicRead: widget.read,
                  //                       ),
                  //
                  //                       Directory_2_view_edit(
                  //                         bluetoothCharacteristicWrite:widget.write,
                  //                         bluetoothCharacteristicRead:widget. read,
                  //                       ),
                  //                       Directory_3_view_edit(
                  //                         bluetoothCharacteristicWrite:widget. write,
                  //                         bluetoothCharacteristicRead:widget. read,
                  //                       ),
                  //                       Directory_4_view_edit(
                  //                         bluetoothCharacteristicWrite: widget.write,
                  //                         bluetoothCharacteristicRead: widget.read,
                  //                       ),
                  //                       Directory_9_view_edit(
                  //                         bluetoothCharacteristicWrite: widget.write,
                  //                         bluetoothCharacteristicRead: widget.read,
                  //                       ),
                  //                       InkWell(
                  //                         onTap: () {
                  //                           Navigator.push(
                  //                             context,
                  //                             MaterialPageRoute(
                  //                                 builder: (context) =>
                  //                                     CalibartionStep4(customerProfile:widget.customerInfo ,productProfile:widget.SelectedProduct ,
                  //                                       //profile: userProfile,
                  //                                       calibAdmin:widget.calibrator,
                  //                                       firestore:  FirebaseFirestore.instance,
                  //                                       device:widget.device,
                  //                                       characteristicWrite:widget.write,
                  //                                       characteristicRead:widget.read,
                  //                                       productInfo:
                  //                                       productInfo, CoEf2: '', CoEf4: '', CoEf3: '', CoEf1: '',
                  //                                     )),
                  //                           );
                  //                         },
                  //                         child: Padding(
                  //                           padding:
                  //                           const EdgeInsets.fromLTRB(
                  //                               8, 25, 8, 0),
                  //                           child: Container(
                  //                             decoration: BoxDecoration(
                  //                                 borderRadius:
                  //                                 BorderRadius.all(
                  //                                     Radius.circular(
                  //                                         3)),
                  //                                 color: Theme.of(context)
                  //                                     .primaryColor),
                  //                             child: Center(
                  //                               child: Padding(
                  //                                 padding:
                  //                                 const EdgeInsets
                  //                                     .all(15.0),
                  //                                 child: Text(
                  //                                   "Next",
                  //                                   style: TextStyle(
                  //                                       color:
                  //                                       Colors.white),
                  //                                 ),
                  //                               ),
                  //                             ),
                  //                           ),
                  //                         ),
                  //                       ),
                  //                     ],
                  //                   ),
                  //                 ),
                  //               ),
                  //             )));



                    },
                    child: Container(
                        margin: EdgeInsets.only(
                          top: height * 0.1,
                        ),
                        height: height * 0.065,
                        width: width,
                        child: ButtonViewSecondary(buttonLabel: TextConst.saveButtonText)
                    ),
                  ),
                ],
              );




              // return ListView.builder(shrinkWrap: true,
              //     itemCount: snapshot.data!.docs.length,
              //     itemBuilder: (context, index) {
              //       return ListTile(onTap: (){
              //         Navigator.push(
              //             context,
              //             MaterialPageRoute(
              //                 builder: (context) => Scaffold(
              //                   body: Scaffold(
              //                     appBar: AppBar(
              //                       title: Text("Product Profile"),
              //                     ),
              //                     body: SingleChildScrollView(
              //                       child: Padding(
              //                         padding: const EdgeInsets.all(8.0),
              //                         child: Column(mainAxisAlignment: MainAxisAlignment.start,crossAxisAlignment: CrossAxisAlignment.start,
              //                           children: [
              //                             //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
              //                             Text("Name",style: TextStyle(fontWeight: FontWeight.bold),),
              //                             Text(snapshot.data!.docs[index].get("productName"),style: TextStyle(),),
              //
              //                             Text("Procedure",style: TextStyle(fontWeight: FontWeight.bold),),
              //                             Text(snapshot.data!.docs[index].get("procedure"),style: TextStyle(),),
              //
              //                             Text("Signatory",style: TextStyle(fontWeight: FontWeight.bold),),
              //                             Text(snapshot.data!.docs[index].get("signatory"),style: TextStyle(),),
              //
              //                             Text("Signatory position",style: TextStyle(fontWeight: FontWeight.bold),),
              //                             Text(snapshot.data!.docs[index].get("signatory_position"),style: TextStyle(),),
              //
              //                             Text("Standards",style: TextStyle(fontWeight: FontWeight.bold),),
              //                             Text(snapshot.data!.docs[index].get("standards"),style: TextStyle(),),
              //                             InkWell(
              //                               onTap: () {
              //                                 Navigator.push(
              //                                     context,
              //                                     MaterialPageRoute(
              //                                         builder: (context) => Scaffold(
              //                                           body: Scaffold(
              //                                             appBar: AppBar(
              //                                               title: Text("Product Information"),
              //                                             ),
              //                                             body: SingleChildScrollView(
              //                                               child: Column(
              //                                                 children: [
              //                                                   //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
              //                                                   Directory_1_view_edit(
              //                                                     bluetoothCharacteristicWrite: write,
              //                                                     bluetoothCharacteristicRead: read,
              //                                                   ),
              //
              //                                                   Directory_2_view_edit(
              //                                                     bluetoothCharacteristicWrite:write,
              //                                                     bluetoothCharacteristicRead: read,
              //                                                   ),
              //                                                   Directory_3_view_edit(
              //                                                     bluetoothCharacteristicWrite: write,
              //                                                     bluetoothCharacteristicRead: read,
              //                                                   ),
              //                                                   Directory_4_view_edit(
              //                                                     bluetoothCharacteristicWrite: write,
              //                                                     bluetoothCharacteristicRead: read,
              //                                                   ),
              //                                                   Directory_9_view_edit(
              //                                                     bluetoothCharacteristicWrite: write,
              //                                                     bluetoothCharacteristicRead: read,
              //                                                   ),
              //                                                   InkWell(
              //                                                     onTap: () {
              //                                                       Navigator.push(
              //                                                         context,
              //                                                         MaterialPageRoute(
              //                                                             builder: (context) =>
              //                                                                 CalibartionStep4(customerProfile:customerInfo ,productProfile:snapshot.data!.docs[index].data() ,
              //                                                                   calibAdmin:calibrator,
              //                                                                   firestore: FirebaseFirestore.instance,
              //                                                                   device:device,
              //                                                                   characteristicWrite:write,
              //                                                                   characteristicRead:read,
              //                                                                   productInfo:
              //                                                                   productInfo, CoEf3: '', CoEf2: '', CoEf4: '', CoEf1: '',
              //                                                                 )),
              //                                                       );
              //                                                     },
              //                                                     child: Padding(
              //                                                       padding:
              //                                                       const EdgeInsets.fromLTRB(
              //                                                           8, 25, 8, 0),
              //                                                       child: Container(
              //                                                         decoration: BoxDecoration(
              //                                                             borderRadius:
              //                                                             BorderRadius.all(
              //                                                                 Radius.circular(
              //                                                                     3)),
              //                                                             color: Theme.of(context)
              //                                                                 .primaryColor),
              //                                                         child: Center(
              //                                                           child: Padding(
              //                                                             padding:
              //                                                             const EdgeInsets
              //                                                                 .all(15.0),
              //                                                             child: Text(
              //                                                               "Next",
              //                                                               style: TextStyle(
              //                                                                   color:
              //                                                                   Colors.white),
              //                                                             ),
              //                                                           ),
              //                                                         ),
              //                                                       ),
              //                                                     ),
              //                                                   ),
              //                                                 ],
              //                                               ),
              //                                             ),
              //                                           ),
              //                                         )));
              //                               },
              //                               child: Padding(
              //                                 padding:
              //                                 const EdgeInsets.fromLTRB(
              //                                     8, 25, 8, 0),
              //                                 child: Container(
              //                                   decoration: BoxDecoration(
              //                                       borderRadius:
              //                                       BorderRadius.all(
              //                                           Radius.circular(
              //                                               3)),
              //                                       color: Theme.of(context)
              //                                           .primaryColor),
              //                                   child: Center(
              //                                     child: Padding(
              //                                       padding:
              //                                       const EdgeInsets
              //                                           .all(15.0),
              //                                       child: Text(
              //                                         "Next",
              //                                         style: TextStyle(
              //                                             color:
              //                                             Colors.white),
              //                                       ),
              //                                     ),
              //                                   ),
              //                                 ),
              //                               ),
              //                             ),
              //                           ],
              //                         ),
              //                       ),
              //                     ),
              //                   ),
              //                 )));
              //
              //
              //
              //
              //       },trailing: Icon(Icons.navigate_next),title: Text(snapshot.data!.docs[index].get("productName")),);
              //
              //     });


            }else  return Center(child: Text("Please add product to do calibration"),);

          });
    }else{
      return  FutureBuilder<QuerySnapshot<Map<String,dynamic>>>(
          future:  FirebaseFirestore.instance.collection("calibratorPartners").doc(widget.calibrator).collection("products").get(),
          builder: (BuildContext context, AsyncSnapshot<QuerySnapshot<Map<String,dynamic>>> snapshot) {
            if(snapshot.hasData && snapshot.data!.docs.length>0){
              return ListView.builder(shrinkWrap: true,
                  itemCount: snapshot.data!.docs.length,
                  itemBuilder: (context, index) {
                    return ListTile(onTap: (){
                      Navigator.push(
                          context,
                          MaterialPageRoute(
                              builder: (context) => Scaffold(
                                body: Scaffold(
                                  appBar: AppBar(
                                    title: Text("Product Profile"),
                                  ),
                                  body: SingleChildScrollView(
                                    child: Padding(
                                      padding: const EdgeInsets.all(8.0),
                                      child: Column(mainAxisAlignment: MainAxisAlignment.start,crossAxisAlignment: CrossAxisAlignment.start,
                                        children: [
                                          //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
                                          Text("Name",style: TextStyle(fontWeight: FontWeight.bold),),
                                          Text(snapshot.data!.docs[index].get("productName"),style: TextStyle(),),

                                          Text("Procedure",style: TextStyle(fontWeight: FontWeight.bold),),
                                          Text(snapshot.data!.docs[index].get("procedure"),style: TextStyle(),),

                                          Text("Signatory",style: TextStyle(fontWeight: FontWeight.bold),),
                                          Text(snapshot.data!.docs[index].get("signatory"),style: TextStyle(),),

                                          Text("Signatory position",style: TextStyle(fontWeight: FontWeight.bold),),
                                          Text(snapshot.data!.docs[index].get("signatory_position"),style: TextStyle(),),

                                          Text("Standards",style: TextStyle(fontWeight: FontWeight.bold),),
                                          Text(snapshot.data!.docs[index].get("standards"),style: TextStyle(),),
                                          InkWell(
                                            onTap: () {
                                              Navigator.push(
                                                  context,
                                                  MaterialPageRoute(
                                                      builder: (context) => Scaffold(
                                                        body: Scaffold(
                                                          appBar: AppBar(
                                                            title: Text("Product Information"),
                                                          ),
                                                          body: SingleChildScrollView(
                                                            child: Column(
                                                              children: [
                                                                //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
                                                                Directory_1_view_edit(
                                                                  bluetoothCharacteristicWrite:widget. write,
                                                                  bluetoothCharacteristicRead: widget.read,
                                                                ),

                                                                Directory_2_view_edit(
                                                                  bluetoothCharacteristicWrite:widget.write,
                                                                  bluetoothCharacteristicRead:widget. read,
                                                                ),
                                                                Directory_3_view_edit(
                                                                  bluetoothCharacteristicWrite:widget. write,
                                                                  bluetoothCharacteristicRead:widget. read,
                                                                ),
                                                                Directory_4_view_edit(
                                                                  bluetoothCharacteristicWrite: widget.write,
                                                                  bluetoothCharacteristicRead: widget.read,
                                                                ),
                                                                Directory_9_view_edit(
                                                                  bluetoothCharacteristicWrite: widget.write,
                                                                  bluetoothCharacteristicRead: widget.read,
                                                                ),
                                                                InkWell(
                                                                  onTap: () {
                                                                    // Navigator.push(
                                                                    //   context,
                                                                    //   MaterialPageRoute(
                                                                    //       builder: (context) =>
                                                                    //           CalibartionStep4(customerProfile:widget.customerInfo ,productProfile:snapshot.data!.docs[index].data() ,
                                                                    //             //profile: userProfile,
                                                                    //             calibAdmin:widget.calibrator,
                                                                    //             firestore:  FirebaseFirestore.instance,
                                                                    //             device:widget.device,
                                                                    //             characteristicWrite:widget.write,
                                                                    //             characteristicRead:widget.read,
                                                                    //             productInfo:
                                                                    //             productInfo, CoEf2: '', CoEf4: '', CoEf3: '', CoEf1: '',
                                                                    //           )),
                                                                    // );
                                                                  },
                                                                  child: Padding(
                                                                    padding:
                                                                    const EdgeInsets.fromLTRB(
                                                                        8, 25, 8, 0),
                                                                    child: Container(
                                                                      decoration: BoxDecoration(
                                                                          borderRadius:
                                                                          BorderRadius.all(
                                                                              Radius.circular(
                                                                                  3)),
                                                                          color: Theme.of(context)
                                                                              .primaryColor),
                                                                      child: Center(
                                                                        child: Padding(
                                                                          padding:
                                                                          const EdgeInsets
                                                                              .all(15.0),
                                                                          child: Text(
                                                                            "Next",
                                                                            style: TextStyle(
                                                                                color:
                                                                                Colors.white),
                                                                          ),
                                                                        ),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                ),
                                                              ],
                                                            ),
                                                          ),
                                                        ),
                                                      )));
                                            },
                                            child: Padding(
                                              padding:
                                              const EdgeInsets.fromLTRB(
                                                  8, 25, 8, 0),
                                              child: Container(
                                                decoration: BoxDecoration(
                                                    borderRadius:
                                                    BorderRadius.all(
                                                        Radius.circular(
                                                            3)),
                                                    color: Theme.of(context)
                                                        .primaryColor),
                                                child: Center(
                                                  child: Padding(
                                                    padding:
                                                    const EdgeInsets
                                                        .all(15.0),
                                                    child: Text(
                                                      "Next",
                                                      style: TextStyle(
                                                          color:
                                                          Colors.white),
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  ),
                                ),
                              )));




                    },trailing: Icon(Icons.navigate_next),title: Text(snapshot.data!.docs[index].get("productName")),);

                  });


            }else  return Center(child: Text("Please add product to do calibration"),);

          });
      //var listData =
    }
  }
}



// downloadDropDownDataAndShow(String calibrator,BluetoothCharacteristic read,BluetoothCharacteristic write,BluetoothDevice device,dynamic customerInfo) {
//   if(calibrator=="" || calibrator =="admin"){
//     //stahtProductProfiles
//     return  FutureBuilder<QuerySnapshot<Map<String,dynamic>>>(
//         future: FirebaseFirestore.instance.collection("stahtProductProfiles").get(),
//         builder: (BuildContext context, AsyncSnapshot<QuerySnapshot<Map<String,dynamic>>> snapshot) {
//           if(snapshot.hasData && snapshot.data!.docs.length>0){
//
//             Widget selectProductDetail()
//             {
//               return Container(
//                 margin: EdgeInsets.only(
//                   top: height * 0.019,
//                 ),
//                 width: width,
//                 decoration: BoxDecoration(
//                   borderRadius: BorderRadius.all(Radius.circular(width*0.02)),
//                   border: Border.all(
//                     color: ThemeManager().getBlackColor.withOpacity(.05),
//                   ),
//                 ),
//
//                 child: Theme(
//                   data: Theme.of(context).copyWith(dividerColor: Colors.transparent),
//
//                   child: ExpansionTile(
//                     key: UniqueKey(),
//                     backgroundColor: ThemeManager().getLightGreenTextFieldColor,
//                     collapsedBackgroundColor: ThemeManager().getLightGreenTextFieldColor,
//                     //initiallyExpanded: true,
//                     iconColor: ThemeManager().getLightGrey1Color,
//                     //trailing: Icon(Icons.keyboard_arrow_down,size: width*0.08),
//
//                     //----------------Selected Product text from dropdown-------
//                     title: Text(snapshot.data!.docs[0].get("productName"),
//                       style: interMedium.copyWith(
//                           color: ThemeManager().getLightGrey1Color,
//                           fontSize: width * 0.042),
//                     ),
//
//                     //----------------Available Product List in dropdown------------
//                     children: <Widget>[
//                       for (var productItem in snapshot.data!.docs)
//                         InkWell(
//                           onTap: () {
//                             setState(() {
//                               this.product = productItem;
//                             });
//                           },
//                           child: Container(
//                             color: ThemeManager().getWhiteColor,
//                             child: Column(
//                               crossAxisAlignment: CrossAxisAlignment.start,
//                               children: [
//                                 Container(
//                                   margin: EdgeInsets.only(
//                                       top: height * 0.02, left: width * 0.03),
//                                   child: Text( productItem,
//                                     style: interSemiBold.copyWith(
//                                         color: ThemeManager().getBlackColor,
//                                         fontSize: width * 0.042),
//                                   ),
//                                 ),
//                                 Container(
//                                   margin: EdgeInsets.only(top: height * 0.02),
//                                   height: height * 0.001,
//                                   color: ThemeManager().getBlackColor.withOpacity(0.10),
//                                 ),
//                               ],
//                             ),
//                           ),
//                         ),
//                     ],
//                   ),
//                 ),
//               );
//             }
//
//             return selectProductDetail();
//
//
//
//
//             return ListView.builder(shrinkWrap: true,
//                 itemCount: snapshot.data!.docs.length,
//                 itemBuilder: (context, index) {
//                   return ListTile(onTap: (){
//                     Navigator.push(
//                         context,
//                         MaterialPageRoute(
//                             builder: (context) => Scaffold(
//                               body: Scaffold(
//                                 appBar: AppBar(
//                                   title: Text("Product Profile"),
//                                 ),
//                                 body: SingleChildScrollView(
//                                   child: Padding(
//                                     padding: const EdgeInsets.all(8.0),
//                                     child: Column(mainAxisAlignment: MainAxisAlignment.start,crossAxisAlignment: CrossAxisAlignment.start,
//                                       children: [
//                                         //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
//                                         Text("Name",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("productName"),style: TextStyle(),),
//
//                                         Text("Procedure",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("procedure"),style: TextStyle(),),
//
//                                         Text("Signatory",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("signatory"),style: TextStyle(),),
//
//                                         Text("Signatory position",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("signatory_position"),style: TextStyle(),),
//
//                                         Text("Standards",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("standards"),style: TextStyle(),),
//                                         InkWell(
//                                           onTap: () {
//                                             Navigator.push(
//                                                 context,
//                                                 MaterialPageRoute(
//                                                     builder: (context) => Scaffold(
//                                                       body: Scaffold(
//                                                         appBar: AppBar(
//                                                           title: Text("Product Information"),
//                                                         ),
//                                                         body: SingleChildScrollView(
//                                                           child: Column(
//                                                             children: [
//                                                               //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
//                                                               Directory_1_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//
//                                                               Directory_2_view_edit(
//                                                                 bluetoothCharacteristicWrite:write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_3_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_4_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_9_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               InkWell(
//                                                                 onTap: () {
//                                                                   Navigator.push(
//                                                                     context,
//                                                                     MaterialPageRoute(
//                                                                         builder: (context) =>
//                                                                             CalibartionStep4(customerProfile:customerInfo ,productProfile:snapshot.data!.docs[index].data() ,
//                                                                               calibAdmin:calibrator,
//                                                                               firestore: FirebaseFirestore.instance,
//                                                                               device:device,
//                                                                               characteristicWrite:write,
//                                                                               characteristicRead:read,
//                                                                               productInfo:
//                                                                               productInfo, CoEf3: '', CoEf2: '', CoEf4: '', CoEf1: '',
//                                                                             )),
//                                                                   );
//                                                                 },
//                                                                 child: Padding(
//                                                                   padding:
//                                                                   const EdgeInsets.fromLTRB(
//                                                                       8, 25, 8, 0),
//                                                                   child: Container(
//                                                                     decoration: BoxDecoration(
//                                                                         borderRadius:
//                                                                         BorderRadius.all(
//                                                                             Radius.circular(
//                                                                                 3)),
//                                                                         color: Theme.of(context)
//                                                                             .primaryColor),
//                                                                     child: Center(
//                                                                       child: Padding(
//                                                                         padding:
//                                                                         const EdgeInsets
//                                                                             .all(15.0),
//                                                                         child: Text(
//                                                                           "Next",
//                                                                           style: TextStyle(
//                                                                               color:
//                                                                               Colors.white),
//                                                                         ),
//                                                                       ),
//                                                                     ),
//                                                                   ),
//                                                                 ),
//                                                               ),
//                                                             ],
//                                                           ),
//                                                         ),
//                                                       ),
//                                                     )));
//                                           },
//                                           child: Padding(
//                                             padding:
//                                             const EdgeInsets.fromLTRB(
//                                                 8, 25, 8, 0),
//                                             child: Container(
//                                               decoration: BoxDecoration(
//                                                   borderRadius:
//                                                   BorderRadius.all(
//                                                       Radius.circular(
//                                                           3)),
//                                                   color: Theme.of(context)
//                                                       .primaryColor),
//                                               child: Center(
//                                                 child: Padding(
//                                                   padding:
//                                                   const EdgeInsets
//                                                       .all(15.0),
//                                                   child: Text(
//                                                     "Next",
//                                                     style: TextStyle(
//                                                         color:
//                                                         Colors.white),
//                                                   ),
//                                                 ),
//                                               ),
//                                             ),
//                                           ),
//                                         ),
//                                       ],
//                                     ),
//                                   ),
//                                 ),
//                               ),
//                             )));
//
//
//
//
//                   },trailing: Icon(Icons.navigate_next),title: Text(snapshot.data!.docs[index].get("productName")),);
//
//                 });
//
//
//           }else  return Center(child: Text("Please add product to do calibration"),);
//
//         });
//   }else{
//     return  FutureBuilder<QuerySnapshot<Map<String,dynamic>>>(
//         future:  FirebaseFirestore.instance.collection("calibratorPartners").doc(calibrator).collection("products").get(),
//         builder: (BuildContext context, AsyncSnapshot<QuerySnapshot<Map<String,dynamic>>> snapshot) {
//           if(snapshot.hasData && snapshot.data!.docs.length>0){
//             return ListView.builder(shrinkWrap: true,
//                 itemCount: snapshot.data!.docs.length,
//                 itemBuilder: (context, index) {
//                   return ListTile(onTap: (){
//                     Navigator.push(
//                         context,
//                         MaterialPageRoute(
//                             builder: (context) => Scaffold(
//                               body: Scaffold(
//                                 appBar: AppBar(
//                                   title: Text("Product Profile"),
//                                 ),
//                                 body: SingleChildScrollView(
//                                   child: Padding(
//                                     padding: const EdgeInsets.all(8.0),
//                                     child: Column(mainAxisAlignment: MainAxisAlignment.start,crossAxisAlignment: CrossAxisAlignment.start,
//                                       children: [
//                                         //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
//                                         Text("Name",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("productName"),style: TextStyle(),),
//
//                                         Text("Procedure",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("procedure"),style: TextStyle(),),
//
//                                         Text("Signatory",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("signatory"),style: TextStyle(),),
//
//                                         Text("Signatory position",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("signatory_position"),style: TextStyle(),),
//
//                                         Text("Standards",style: TextStyle(fontWeight: FontWeight.bold),),
//                                         Text(snapshot.data!.docs[index].get("standards"),style: TextStyle(),),
//                                         InkWell(
//                                           onTap: () {
//                                             Navigator.push(
//                                                 context,
//                                                 MaterialPageRoute(
//                                                     builder: (context) => Scaffold(
//                                                       body: Scaffold(
//                                                         appBar: AppBar(
//                                                           title: Text("Product Information"),
//                                                         ),
//                                                         body: SingleChildScrollView(
//                                                           child: Column(
//                                                             children: [
//                                                               //getAll5InaRow(bluetoothCharacteristicWrite: widget.characteristicWritePurpose,bluetoothCharacteristicRead: widget.characteristicReadPurpose),
//                                                               Directory_1_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//
//                                                               Directory_2_view_edit(
//                                                                 bluetoothCharacteristicWrite:write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_3_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_4_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               Directory_9_view_edit(
//                                                                 bluetoothCharacteristicWrite: write,
//                                                                 bluetoothCharacteristicRead: read,
//                                                               ),
//                                                               InkWell(
//                                                                 onTap: () {
//                                                                   Navigator.push(
//                                                                     context,
//                                                                     MaterialPageRoute(
//                                                                         builder: (context) =>
//                                                                             CalibartionStep4(customerProfile:customerInfo ,productProfile:snapshot.data!.docs[index].data() ,
//                                                                               //profile: userProfile,
//                                                                               calibAdmin:calibrator,
//                                                                               firestore:  FirebaseFirestore.instance,
//                                                                               device:device,
//                                                                               characteristicWrite:write,
//                                                                               characteristicRead:read,
//                                                                               productInfo:
//                                                                               productInfo, CoEf2: '', CoEf4: '', CoEf3: '', CoEf1: '',
//                                                                             )),
//                                                                   );
//                                                                 },
//                                                                 child: Padding(
//                                                                   padding:
//                                                                   const EdgeInsets.fromLTRB(
//                                                                       8, 25, 8, 0),
//                                                                   child: Container(
//                                                                     decoration: BoxDecoration(
//                                                                         borderRadius:
//                                                                         BorderRadius.all(
//                                                                             Radius.circular(
//                                                                                 3)),
//                                                                         color: Theme.of(context)
//                                                                             .primaryColor),
//                                                                     child: Center(
//                                                                       child: Padding(
//                                                                         padding:
//                                                                         const EdgeInsets
//                                                                             .all(15.0),
//                                                                         child: Text(
//                                                                           "Next",
//                                                                           style: TextStyle(
//                                                                               color:
//                                                                               Colors.white),
//                                                                         ),
//                                                                       ),
//                                                                     ),
//                                                                   ),
//                                                                 ),
//                                                               ),
//                                                             ],
//                                                           ),
//                                                         ),
//                                                       ),
//                                                     )));
//                                           },
//                                           child: Padding(
//                                             padding:
//                                             const EdgeInsets.fromLTRB(
//                                                 8, 25, 8, 0),
//                                             child: Container(
//                                               decoration: BoxDecoration(
//                                                   borderRadius:
//                                                   BorderRadius.all(
//                                                       Radius.circular(
//                                                           3)),
//                                                   color: Theme.of(context)
//                                                       .primaryColor),
//                                               child: Center(
//                                                 child: Padding(
//                                                   padding:
//                                                   const EdgeInsets
//                                                       .all(15.0),
//                                                   child: Text(
//                                                     "Next",
//                                                     style: TextStyle(
//                                                         color:
//                                                         Colors.white),
//                                                   ),
//                                                 ),
//                                               ),
//                                             ),
//                                           ),
//                                         ),
//                                       ],
//                                     ),
//                                   ),
//                                 ),
//                               ),
//                             )));
//
//
//
//
//                   },trailing: Icon(Icons.navigate_next),title: Text(snapshot.data!.docs[index].get("productName")),);
//
//                 });
//
//
//           }else  return Center(child: Text("Please add product to do calibration"),);
//
//         });
//     //var listData =
//   }
//
//
//
// }

Future<void> writeImageGallary(BluetoothDevice device,BluetoothCharacteristic read,BluetoothCharacteristic write) async {
  ImageWriteStatusStream.getInstance().dataReload(0);
  // List<BluetoothService> allService = await widget.device.services.last;
  // print(allService.length.toString());
  // setState(() {
  //   widget.characteristicReadPurpose = allService[3].characteristics[1];
  //
  //   widget.characteristicWritePurpose = allService[3].characteristics[0];
  //   print("service size " + allService.length.toString());
  //   print("char size " + (allService[3].characteristics.length.toString()));
  // });

  device.services.listen((event) async{




    await device.requestMtu(244);
    print("method clicked ");
    final picker = ImagePicker();
    final pickedFile = await picker.getImage(source: ImageSource.gallery);


    //Color color = Color(int.parse(""));
    // print("image " + pickedFile.path);

    // List<int> allPix = getImagesDataInt(pickedFile.path);
    List<int> allColor = [];
    List<String> ColorToSend = [];
    List<List<int>> triColor = [];
    // print("all piz size is " + allPix.length.toString());

    //  print("red " + color.red.toString());
    //print("g " + color.green.toString());
    //print("b " + color.blue.toString());
    // getImagesDataInt(pickedFile.path);

    ImageModelCustom imageModelCustom =await getImagesDataInt(pickedFile!.path);

    //  Uint8List uint8list =await pickedFile.readAsBytes();
    //  print("sampple one");
    //  print(uint8list);
    //  print(uint8list.length);
    print("sampple two");
    //  print(inpPIx.length);

    for (int i = 0; i < (imageModelCustom.allPixels.length / 3); i++) {
      //0,1,2

      int red = imageModelCustom.allPixels[i * 3]; //0,3,6
      int green = imageModelCustom.allPixels[i * 3 + 1]; //1,4,7
      int blue = imageModelCustom.allPixels[i * 3 + 2]; //2,5,8
      // allColor.add(red.toString() + "," + green.toString() + "," + blue.toString());
/*
      int rationalRed = (((0.5 * red * 32) / 256).floor());
      int rationalGreen = (((4 * green * 64) / 256).floor());
      int rationalBlue = (((blue * 32) / 256).floor());

      String redHex = rationalRed.toRadixString(16);
      String greenHex = rationalGreen.toRadixString(16);
      String blueHex = rationalBlue.toRadixString(16);

      redHex = redHex.substring(redHex.length - 1);
      blueHex = blueHex.substring(blueHex.length - 1);

      if (greenHex.length == 1) {
        greenHex = "0" + greenHex;
      }

      String fourCharColor = redHex + greenHex + blueHex;

 */
      int r = red >> 3;
      int g = green >> 2;
      int b = blue >> 3;
      int color16Bit = (r << 11) | (g << 5) | (b << 0);

      print(color16Bit);
      print(color16Bit.toRadixString(16));
      String cc = color16Bit.toRadixString(16).toUpperCase();
      String cc2;
      cc2 = cc;
      Color ccc = Color(color16Bit);
      allColor.add(color16Bit);

      if (cc.length == 3) {
        cc2 = "0" + cc;
      }
      if (cc.length == 2) {
        cc2 = "00" + cc;
      }
      if (cc.length == 1) {
        cc2 = "000" + cc;
      }
      // ColorToSend.add(cc.length==4?cc:"FFFF");
      print("see nxt");
      print("length " + cc.length.toString());
      print("old  " + cc);
      //print( "corrected  "+ cc2);
      //print( "red => "+red.toString()+"green=> "+"blue=> "+blue.toString()+"=="+"converted color " + cc2);
      ColorToSend.add(cc2);
    }
    //  print(inpPIx);
    // print(ColorToSend.toString());

    //  List<int> allPixBinary = getImagesDataInt(pickedFile.path);
    //  for (int i = 0; i < allPixBinary.length; i++) {
    //  ColorToSend.add(allPixBinary[i]>127?"0000":"FFFF");
    // }
    //  print(ColorToSend[0].toString());

    // initState();

    List RGBAList;

    String red = "F800";
    String green = "07E0";
    String blue = "001F";
    String white = "FFFF";
    String index = "1";
    String ending = "@";
    String imageWriteCode = "SET|26|1||A55A80A0|@";

    int PixelPerCommand = 55;

    String streaRestart = "SET|26|0|00|@";
    // print(ColorToSend.toString());assets/splash_images/staht_org_id
    // FirebaseFirestore.instance
    //     .collection("splash_images")
    //     .doc("staht_org_id")
    //     .delete();
    // FirebaseFirestore.instance
    //     .collection("splash_images")
    //     .doc("staht_org_id")
    //     .set({
    //   "data": jsonEncode(ColorToSend),
    //   "height": imageModelCustom.height.toRadixString(16).toUpperCase(),
    //   "width": imageModelCustom.width.toRadixString(16).toUpperCase(),
    //   "intvalue": allColor.toString()
    // });
    if (true) {
      Duration duration = Duration(milliseconds: 1000);
      Future.delayed(duration, () async {
        await write
            .write(StringToASCII(streaRestart), withoutResponse: OsDependentSettings().writeWithresponse);
        Future.delayed(duration, () async {
          // List<int> respnse1 = await widget.characteristicReadPurpose.read();

          Future.delayed(duration, () async {
            await write
                .write(StringToASCII(imageWriteCode), withoutResponse: OsDependentSettings().writeWithresponse);
            Future.delayed(duration, () async {
              // List<int> respnse1 = await widget.characteristicReadPurpose.read();

              Future.delayed(duration, () async {
                int totalPixel = ColorToSend.length;
                double iteration = totalPixel / PixelPerCommand;
                List<List<String>> subListArray = [];
                for (int i = 0; i < iteration; i++) {
                  if (((i * PixelPerCommand) + PixelPerCommand) <
                      ColorToSend.length) {
                    subListArray.add(ColorToSend.sublist((i * PixelPerCommand),
                        ((i * PixelPerCommand) + PixelPerCommand)));
                  } else {
                    subListArray.add(ColorToSend.sublist(
                        (i * PixelPerCommand), (ColorToSend.length - 1)));
                  }
                }

                int lastPrint = 0 ;
                int p = 0 ;




                int pushIndex = 0 ;
                bool checkNeed(){
                  if(pushIndex < subListArray.length-1){

                    return true;

                  }else return false;



                }

                pushData()async{
                  String BATCH_OF_PIXEL = "";
                  for (int q = 0; q < subListArray[pushIndex].length; q++) {
                    BATCH_OF_PIXEL = BATCH_OF_PIXEL + subListArray[pushIndex][q];
                  }
                  String loodCommand = "SET|26|1|" + BATCH_OF_PIXEL + "|@";
                  // List<int> commandData = StringToASCII(loodCommand);
                  List<int> commandData = utf8.encode(loodCommand);
                  // print("command to send " + loodCommand);
                  print("size " + commandData.length.toString());

                  if (commandData.length.isEven) {
                    //i have data length even

                  }
                  // int current = DateTime.now().millisecondsSinceEpoch;
                  //print("passed "+(lastPrint -current).toString());
                  // lastPrint = current;

                  print("before write "+DateTime.now().millisecondsSinceEpoch.toString());

                  Future.delayed(Duration(milliseconds:10), () async {
                    try{
                      await write.write(commandData, withoutResponse: OsDependentSettings().writeWithresponse);
                      print("after write "+DateTime.now().millisecondsSinceEpoch.toString());

                      print("done " + (pushIndex * 100 / subListArray.length).toString() + "%");
                      ImageWriteStatusStream.getInstance().dataReload((pushIndex / subListArray.length));

                      pushIndex++;

                      if(checkNeed() == true){
                        pushData();
                      }
                    }catch(e){
                      print("in ed");
                      print(e);

                    }

                  });



                }


                if(checkNeed() == true){
                  pushData();
                }










                //  print("prepared pixles   "+loodCommand);
              });
            });
          });
        });
      });
    }
  });
}
class ProductRegisterActivity extends StatefulWidget {
  String iceSl;
  String sl;
  int selectedPos = -1;
  late String customerID;
  BluetoothDevice device;
  BluetoothCharacteristic read;
  BluetoothCharacteristic write;

  ProductRegisterActivity({required this.read,required this.write,required this.device,required this.iceSl,required this.sl});

  @override
  _ProductRegisterActivityState createState() => _ProductRegisterActivityState();
}

class _ProductRegisterActivityState extends State<ProductRegisterActivity> {
  @override
  void initState() {
    // TODO: implement initState
    super.initState();

  }
  
  @override
  Widget build(BuildContext context) {
    return   SingleChildScrollView (
      child: Column(
        children: [
          StreamBuilder<QuerySnapshot>(
              stream: FirebaseFirestore.instance
                  .collection("customers")
                  .snapshots(),
              builder:
                  (c, snapshotCustomers) {
                if (snapshotCustomers
                    .hasData) {
                  return ListView.builder(
                      physics:
                      ClampingScrollPhysics(),
                      // separatorBuilder: (context, index) {
                      //   return Divider();
                      // },
                      shrinkWrap: true,
                      padding:
                      EdgeInsets.zero,
                      itemCount:
                      snapshotCustomers
                          .data!
                          .docs
                          .length,
                      itemBuilder:
                          (_, index) {

                     return   InkWell(onTap: (){
                       setState(() {
                        widget.customerID = snapshotCustomers.data!.docs[index].id;
                        widget.selectedPos =  index;
                       });

                        },child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,

                          children: [
                            Row(

                              children: <Widget>[
                                Container(
                                  margin: EdgeInsets.only(left: height *0.035),
                                  height: height * 0.04,
                                  width: width * 0.05,
                                  child: Center(
                                      child:  Icon(Icons.check,
                                        color:widget.selectedPos ==index
                                            ? ThemeManager().getWhiteColor
                                            : Colors.transparent,
                                        size: width * 0.04,)
                                  ),
                                  decoration: BoxDecoration(
                                    shape: BoxShape.circle,
                                    color: widget.selectedPos==index
                                        ? ThemeManager().getDarkGreenColor
                                        : ThemeManager().getDarkGrey2Color,
                                  ),
                                ),
                                Container(
                                  margin: EdgeInsets.only(left: width*0.03,),
                                  child: Column(
                                    crossAxisAlignment: CrossAxisAlignment.start,
                                    children: [
                                      Text(snapshotCustomers.data!.docs[index].get("prjectName"),maxLines: 1,
                                        style: interMedium.copyWith(
                                            color: ThemeManager().getExtraDarkBlueColor,
                                            fontSize: width * 0.042),),
                                      Text(snapshotCustomers.data!.docs[index].get("address"),maxLines: 1,
                                        style: interRegular.copyWith(
                                            color: ThemeManager().getLightGrey5Color,
                                            fontSize: width * 0.031),
                                      ),
                                    ],
                                  ),
                                )
                              ],
                            ),
                            Container(
                              margin: EdgeInsets.only(top: height *0.01,bottom: height * 0.01),
                              height: height*0.001,
                              width: double.infinity,
                              color: ThemeManager().getBlackColor.withOpacity(0.10),
                            ),
                          ],
                        ),);
                        // return ListTile(
                        //   onTap: () {
                        //     FirebaseFirestore.instance
                        //         .collection(
                        //         "boards")
                        //         .add({
                        //       "iceSl":
                        //       widget.iceSl,
                        //       "sl": widget.sl,
                        //       "customerId":
                        //       snapshotCustomers
                        //           .data!
                        //           .docs[
                        //       index]
                        //           .id,
                        //       "time": DateTime
                        //           .now()
                        //           .millisecondsSinceEpoch
                        //     }).then((value) {
                        //       //Navigator.pop(context);
                        //
                        //       Navigator.push(context,
                        //           MaterialPageRoute(
                        //               builder: (context) =>  Container(color:Colors.white,child :SafeArea(child :Scaffold(
                        //                 //  appBar: AppBar(),
                        //                 body: Column(
                        //                   mainAxisAlignment: MainAxisAlignment.start,
                        //                   crossAxisAlignment: CrossAxisAlignment.start,
                        //                   children: [
                        //                     Padding(
                        //                       padding: const EdgeInsets.fromLTRB(0,0,0, 5),
                        //                       child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
                        //                           future: FirebaseFirestore.instance
                        //                               .collection("customers")
                        //                               .doc(snapshotCustomers
                        //                               .data!
                        //                               .docs[
                        //                           index]
                        //                               .id)
                        //                               .get(),
                        //                           builder: (c, snapshot) {
                        //                             if (snapshot.hasData) {
                        //                               return Padding(
                        //                                 padding: const EdgeInsets.all(8.0),
                        //                                 child: Text(snapshot.data!.get("prjectName"),
                        //                                     style: TextStyle(fontSize: 18)),
                        //                               );
                        //                             } else {
                        //                               return Padding(
                        //                                 padding: const EdgeInsets.all(8.0),
                        //                                 child: Text("Getting customer name"),
                        //                               );
                        //                             }
                        //                           }),
                        //                         title: Text("Customer Device connected"),
                        //                         tileColor:
                        //                         Theme.of(context).primaryColor.withOpacity(0.1),
                        //                       ),
                        //                     ),
                        //                     Padding(
                        //                       padding: const EdgeInsets.fromLTRB(0,0,0, 5),
                        //                       child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
                        //                           future: FirebaseFirestore.instance
                        //                               .collection("customers")
                        //                               .doc(snapshotCustomers
                        //                               .data!
                        //                               .docs[
                        //                           index]
                        //                               .id)
                        //                               .get(),
                        //                           builder: (c, snapshot) {
                        //                             if (snapshot.hasData) {
                        //                               return Wrap(
                        //                                 children: [
                        //                                   Padding(
                        //                                     padding: EdgeInsets.fromLTRB(0,0,0, 5),
                        //                                     child: ListTile( tileColor:
                        //                                     Theme.of(context).primaryColor.withOpacity(0.1),title: Text("Select one Calibration Profile",style: TextStyle(color: Theme.of(context).primaryColor),),),
                        //                                   ),
                        //
                        //                                   downloadDropDownDataAndShow(calibrator,read,write,device,snapshot.data!.data()),
                        //                                 ],
                        //                               );
                        //                             } else {
                        //                               return Padding(
                        //                                 padding: const EdgeInsets.all(8.0),
                        //                                 child: Text("Getting customer name"),
                        //                               );
                        //                             }
                        //                           }),
                        //                         title: Text("Customer Device connected"),
                        //                         tileColor:
                        //                         Theme.of(context).primaryColor.withOpacity(0.1),
                        //                       ),
                        //                     ),
                        //
                        //
                        //                     //product type select
                        //
                        //
                        //
                        //
                        //                   ],
                        //                 ),
                        //               ) ))));
                        //
                        //
                        //     });
                        //   },
                        //   title: Text(
                        //       snapshotCustomers
                        //           .data!
                        //           .docs[
                        //       index]
                        //           .get(
                        //           "prjectName")),
                        //   trailing:
                        //   Container(
                        //     height: 45,
                        //     width: 45,
                        //     decoration:
                        //     BoxDecoration(
                        //       borderRadius:
                        //       BorderRadius
                        //           .circular(
                        //           22.5),
                        //       color: Colors
                        //           .grey
                        //           .withOpacity(
                        //         0.4,
                        //       ),
                        //     ),
                        //     child: Icon(
                        //         Icons.done),
                        //   ),
                        // );
                      });
                } else {
                  return Center(
                    child:
                    CircularProgressIndicator(),
                  );
                }
              }),

          InkWell(onTap: (){
        if(widget.selectedPos>-1)    FirebaseFirestore.instance.collection("boards").add({"iceSl": widget.iceSl, "sl": widget.sl, "customerId": widget.customerID,
              "time": DateTime
                  .now()
                  .millisecondsSinceEpoch
            }).then((valueProductAdd) async {
              //Navigator.pop(context);
      // var productSaved = await   valueProductAdd.get();


          Widget activity =    Container(color: Colors.white,child: SafeArea(child:Scaffold(
            backgroundColor: ThemeManager().getWhiteColor,

            //-------------App Bar of screen---------------------------
            appBar: PreferredSize(
              preferredSize: Size(0,kToolbarHeight),
              child:  ApplicationAppbar(). getAppbar(title:TextConst.calibrationText),
            ),

            //--------------------Body of screen------------------
            body: SingleChildScrollView(

              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [

                  Container(
                    margin: EdgeInsets.only(
                      left: width * 0.05,
                      right: width * 0.05,
                      top: height * 0.03,
                    ),

                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,

                      children: [

                        //----------------Back arrow button-----------
                        Container(
                          //color: ThemeManager().getLightGrey10Color,
                          child: InkWell(
                            onTap: (){
                              Navigator.pop(context);
                            },
                            child: Row(
                              children: [
                                Icon(
                                  Icons.arrow_back_ios,
                                  size: width * 0.039,
                                  color: ThemeManager().getDarkGreenColor,
                                ),
                                Text(
                                  TextConst.backText,
                                  style: interMedium.copyWith(
                                      color: ThemeManager().getDarkGreenColor,
                                      fontSize: width * 0.042),
                                ),
                              ],
                            ),
                          ),
                        ),

                        //--------------Select product title----------------
                        Container(
                          margin: EdgeInsets.only(top: height * 0.03,),

                          child: Text(
                            TextConst.selectProductText,
                            style: interMedium.copyWith(
                                color: ThemeManager().getPopUpTextGreyColor,
                                fontSize: width * 0.040),
                          ),
                        ),



                        //----------------- Select Product Dropdown-----------------
                        FutureBuilder<DocumentSnapshot>(
                            future: FirebaseFirestore.instance
                                .collection("customers")
                                .doc(widget.customerID)
                                .get(),
                            builder: (c, snapshot) {
                              if (snapshot.hasData) {
                                return    downloadDropDownDataAndShowActivity(calibrator: "admin",read:  widget.read,write:  widget.write,device: widget.device,customerInfo: snapshot.data!.data());

                              } else {
                                return Padding(
                                  padding: const EdgeInsets.all(8.0),
                                  child: Text("Getting customer name"),
                                );
                              }
                            })


                        //-------------- Save Button ----------------------
                        // GestureDetector(
                        //   onTap: () {
                        //     Navigator.push(
                        //         context,
                        //         MaterialPageRoute(
                        //             builder: (context) =>
                        //                 CalibrationInputRefValueAddAndCalculateRawValueScreen(
                        //                   showInputRefValScreen: false,
                        //                 )));
                        //   },
                        //   child: Container(
                        //       margin: EdgeInsets.only(
                        //         top: height * 0.1,
                        //       ),
                        //       height: height * 0.065,
                        //       width: width,
                        //       child: ButtonView(buttonLabel: TextConst.saveButtonText)
                        //   ),
                        // ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ) ,),);
          Navigator.push(context,
              MaterialPageRoute(
                  builder: (context) => activity));




              // Navigator.push(
              //     context,
              //     MaterialPageRoute(
              //         builder: (context) =>Container(color : Colors.white,child : Scaffold(
              //           //  appBar: AppBar(),
              //           body: Column(
              //             mainAxisAlignment: MainAxisAlignment.start,
              //             crossAxisAlignment: CrossAxisAlignment.start,
              //             children: [
              //               Padding(
              //                 padding: const EdgeInsets.fromLTRB(0,0,0, 5),
              //                 child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
              //                     future: FirebaseFirestore.instance
              //                         .collection("customers")
              //                         .doc(widget.customerID)
              //                         .get(),
              //                     builder: (c, snapshot) {
              //                       if (snapshot.hasData) {
              //                         return Padding(
              //                           padding: const EdgeInsets.all(8.0),
              //                           child: Text(snapshot.data!.get("prjectName"),
              //                               style: TextStyle(fontSize: 18)),
              //                         );
              //                       } else {
              //                         return Padding(
              //                           padding: const EdgeInsets.all(8.0),
              //                           child: Text("Getting customer name"),
              //                         );
              //                       }
              //                     }),
              //                   title: Text("Customer Device connected"),
              //                   tileColor:
              //                   Theme.of(context).primaryColor.withOpacity(0.1),
              //                 ),
              //               ),
              //               Padding(
              //                 padding: const EdgeInsets.fromLTRB(0,0,0, 5),
              //                 child: ListTile(subtitle: FutureBuilder<DocumentSnapshot>(
              //                     future: FirebaseFirestore.instance
              //                         .collection("customers")
              //                         .doc(widget.customerID)
              //                         .get(),
              //                     builder: (c, snapshot) {
              //                       if (snapshot.hasData) {
              //                         return Wrap(
              //                           children: [
              //                             Padding(
              //                               padding: EdgeInsets.fromLTRB(0,0,0, 5),
              //                               child: ListTile( tileColor:
              //                               Theme.of(context).primaryColor.withOpacity(0.1),title: Text("Select one Calibration Profile",style: TextStyle(color: Theme.of(context).primaryColor),),),
              //                             ),
              //
              //                               downloadDropDownDataAndShow(calibrator,read,write,device,snapshot.data!.data()),
              //                           ],
              //                         );
              //                       } else {
              //                         return Padding(
              //                           padding: const EdgeInsets.all(8.0),
              //                           child: Text("Getting customer name"),
              //                         );
              //                       }
              //                     }),
              //                   title: Text("Customer Device connected"),
              //                   tileColor:
              //                   Theme.of(context).primaryColor.withOpacity(0.1),
              //                 ),
              //               ),
              //
              //
              //               //product type select
              //
              //
              //
              //
              //             ],
              //           ),
              //         ))));


            });
          },
              child :  Container(
                  margin: EdgeInsets.all( height * 0.015),
                  height: height * 0.065,
                  width: width,
              decoration: BoxDecoration(
                  color:widget.selectedPos>-1? ThemeManager().getDarkGreenColor: ThemeManager().getDarkGrey2Color,
                  borderRadius:
                  BorderRadius.circular(width * 0.014)),
              alignment: Alignment.center,
              child:Center(child : Text(TextConst.assignCustomerText,style: interBold.copyWith(
                  color: ThemeManager().getWhiteColor,
                  fontSize: width * 0.045)))
          )


          ),

        ],
      ),
    );
  }
}
class ButtonViewSecondary extends StatelessWidget {
  String buttonLabel;
  ButtonViewSecondary({Key? key,required this.buttonLabel}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    height = MediaQuery.of(context).size.height;
    width = MediaQuery.of(context).size.width;

    return Container(
        alignment: Alignment.center,
        height: height * 0.058,
        width: width,
        decoration: BoxDecoration(
          borderRadius: BorderRadius.circular(height*0.008),
          color: ThemeManager().getDarkGreenColor,
        ),
        child: Text(
          buttonLabel,
          style: interSemiBold.copyWith(
              fontSize: width*0.04, color: ThemeManager().getWhiteColor),
        ));
  }
}
